{"version":3,"file":"js/app.5610488d.js","mappings":"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,EAAAA,WAAMsB,MAAMqV,UAAUT,WACtB,CACN,GACDxb,EAAAA,EAAAA,GAlCoBgc,EAAY,WACb,cAAWhc,EAAAA,EAAAA,GADVgc,EAAY,aAEX,e,2JCFtB,SAASG,EAAcpF,GACrB,IAAI1P,EAAOM,KAAKG,MAAMiP,EAAKvQ,MAAM,MAAM,IAEvC,GADAa,EAAOM,KAAKG,MAAMT,EAAK,GAAG,KACrBA,EACH,MAAM,IAAIvD,MAAM,iCAGlB,MAAMsY,EAAM,IAAI/U,EAAK,GAAIA,EAAK,GAAG,GAAG,IAEpC,IAAI5B,EAAO4B,EAAK,GAAG,GAAG,GAAG,GACzB,MAAMgV,EAAShV,EAAK,GAAG,GAAG,GAc1B,OAbIgV,GACFA,EAAO9P,SAAS+P,IACd,MAAMpW,EAAMoW,EAAM,GAAG,GAAG,GAClBC,EAAMD,EAAM,GAAG,GACf9X,EAAO8X,EAAM,GAAG,GAAG,GACnBE,EAAcF,EAAM,GAC1B7W,EAAOA,EAAKzE,QACVwb,EACA,MAAMD,MAAQrW,OAAS1B,MAASA,MACjC,IAIE,CAAEiB,OAAM2W,MACjB,CAEA,SAASK,EAAY3b,EAAO6C,EAAQ+Y,GAClC,IAAIC,EAAuB,gBAAT7b,EAA0B,EAAI,EAE5C8b,EAAY,CACd,CAACjZ,EAAQ,EAAG,KAAM,KAAM,KAAM,KAAM,GACpC,CAAC,MACD+Y,EACA,GACA,GACA,KACA,CAAC,GACD,EACA,KACA,KACA,EACA,EACA,KACA,KACA,KACA,KACA,KACA,KACAC,EACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,K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","sources":["webpack://chatall/./src/bots/Bot.js","webpack://chatall/./src/bots/CharacterAIBot.js","webpack://chatall/./src/bots/ClaudeAIBot.js","webpack://chatall/./src/bots/LangChainBot.js","webpack://chatall/./src/bots/MOSSBot.js","webpack://chatall/./src/bots/MistralBot.js","webpack://chatall/./src/bots/PerplexityBot.js","webpack://chatall/./src/bots/PhindBot.js","webpack://chatall/./src/bots/PiBot.js","webpack://chatall/./src/bots/QianWenBot.js","webpack://chatall/./src/bots/Qihoo360AIBrainBot.js","webpack://chatall/./src/bots/SkyWorkBot.js","webpack://chatall/./src/bots/SparkBot.js","webpack://chatall/./src/bots/YouChatBot.js","webpack://chatall/./src/bots/anthropic/ClaudeAPIBot.js","webpack://chatall/./src/bots/baidu/WenxinQianfanBot.js","webpack://chatall/./src/bots/cohere/CohereAPIBot.js","webpack://chatall/./src/bots/google/BardBot.js","webpack://chatall/./src/bots/google/GeminiAPIBot.js","webpack://chatall/./src/bots/groq/GroqAPIBot.js","webpack://chatall/./src/bots/huggingface/Falcon180bBot.js","webpack://chatall/./src/bots/huggingface/GradioAppBot.js","webpack://chatall/./src/bots/huggingface/GradioBot.js","webpack://chatall/./src/bots/huggingface/HuggingChatBot.js","webpack://chatall/./src/bots/google/Gemini15ProAPIBot.js","webpack://chatall/./src/bots/google/Gemini15FlashAPIBot.js","webpack://chatall/./src/bots/openai/ChatGPT35Bot.js","webpack://chatall/./src/bots/openai/ChatGPT4Bot.js","webpack://chatall/./src/bots/cohere/CohereAPICommandBot.js","webpack://chatall/./src/bots/cohere/CohereAPICommandLightBot.js","webpack://chatall/./src/bots/cohere/CohereAPICommandRBot.js","webpack://chatall/./src/bots/cohere/CohereAPICommandRPlusBot.js","webpack://chatall/./src/bots/cohere/CohereAPIAya23Bot.js","webpack://chatall/./src/bots/microsoft/BingChatPreciseBot.js","webpack://chatall/./src/bots/microsoft/BingChatBalancedBot.js","webpack://chatall/./src/bots/microsoft/BingChatCreativeBot.js","webpack://chatall/./src/bots/poe/SageBot.js","webpack://chatall/./src/bots/openai/OpenAIAPI35Bot.js","webpack://chatall/./src/bots/openai/OpenAIAPI4Bot.js","webpack://chatall/./src/bots/openai/OpenAIAPI4128KBot.js","webpack://chatall/./src/bots/openai/OpenAIAPI4oBot.js","webpack://chatall/./src/bots/lmsys/VicunaBot.js","webpack://chatall/./src/bots/lmsys/AlpacaBot.js","webpack://chatall/./src/bots/lmsys/ClaudeBot.js","webpack://chatall/./src/bots/DevBot.js","webpack://chatall/./src/bots/groq/Gemma7bGroqAPIBot.js","webpack://chatall/./src/bots/groq/Llama38bGroqAPIBot.js","webpack://chatall/./src/bots/groq/Llama370bGroqAPIBot.js","webpack://chatall/./src/bots/groq/Mixtral8x7bGroqAPIBot.js","webpack://chatall/./src/bots/poe/ChatGPT35PoeBot.js","webpack://chatall/./src/bots/poe/ChatGPT4PoeBot.js","webpack://chatall/./src/bots/poe/ClaudeInstantPoeBot.js","webpack://chatall/./src/bots/poe/ClaudeInstant100kPoeBot.js","webpack://chatall/./src/bots/poe/ClaudePlusPoeBot.js","webpack://chatall/./src/bots/poe/ChatGPT432kPoeBot.js","webpack://chatall/./src/bots/poe/Llama270bPoeBot.js","webpack://chatall/./src/bots/poe/GooglePalm2PoeBot.js","webpack://chatall/./src/bots/poe/CodeLlama34bPoeBot.js","webpack://chatall/./src/bots/openai/ChatGPT4MobileBot.js","webpack://chatall/./src/bots/openai/OpenAIAPI3516KBot.js","webpack://chatall/./src/bots/baidu/WenxinQianfanTurboBot.js","webpack://chatall/./src/bots/huggingface/Llama2HC70bBot.js","webpack://chatall/./src/bots/lmsys/Llama213bBot.js","webpack://chatall/./src/bots/lmsys/Llama27bBot.js","webpack://chatall/./src/bots/lmsys/Llama270bBot.js","webpack://chatall/./src/bots/lmsys/ChatGLM6bBot.js","webpack://chatall/./src/bots/lmsys/ChatGLM36bBot.js","webpack://chatall/./src/bots/lmsys/CodeLlamaBot.js","webpack://chatall/./src/bots/lmsys/Vicuna7bBot.js","webpack://chatall/./src/bots/lmsys/Vicuna13bBot.js","webpack://chatall/./src/bots/lmsys/Wizardlm13bBot.js","webpack://chatall/./src/bots/lmsys/Wizardlm70bBot.js","webpack://chatall/./src/bots/huggingface/FalconHC180bBot.js","webpack://chatall/./src/bots/huggingface/CodeLlamaHCBot.js","webpack://chatall/./src/bots/baidu/WenxinQianfan4Bot.js","webpack://chatall/./src/bots/huggingface/Zephyr7bBot.js","webpack://chatall/./src/bots/google/GeminiAdvBot.js","webpack://chatall/./src/bots/lmsys/Gemma7bItBot.js","webpack://chatall/./src/bots/lmsys/Gemma2bItBot.js","webpack://chatall/./src/bots/lmsys/Claude3SonnetBot.js","webpack://chatall/./src/bots/lmsys/Claude3OpusBot.js","webpack://chatall/./src/bots/zhipu/ChatGLM4Bot.js","webpack://chatall/./src/bots/anthropic/ClaudeAPIOpusBot.js","webpack://chatall/./src/bots/anthropic/ClaudeAPI20Bot.js","webpack://chatall/./src/bots/anthropic/ClaudeAPI21Bot.js","webpack://chatall/./src/bots/anthropic/ClaudeAPISonnetBot.js","webpack://chatall/./src/bots/anthropic/ClaudeAPI35SonnetBot.js","webpack://chatall/./src/bots/anthropic/ClaudeAPIHaikuBot.js","webpack://chatall/./src/bots/anthropic/ClaudeAPIInstant12Bot.js","webpack://chatall/./src/bots/index.js","webpack://chatall/./src/bots/lmsys/LMSYSBot.js","webpack://chatall/./src/bots/microsoft/AzureOpenAIAPIBot.js","webpack://chatall/./src/bots/microsoft/BingChatBot.js","webpack://chatall/./src/bots/moonshot/KimiBot.js","webpack://chatall/./src/bots/openai/ChatGPTBot.js","webpack://chatall/./src/bots/openai/OpenAIAPIBot.js","webpack://chatall/./src/bots/poe/PoeBot.js","webpack://chatall/./src/bots/zhipu/ChatGLMBot.js","webpack://chatall/./src/components/BotSettings/settings.const.js","webpack://chatall/./src/composables/matomo.js","webpack://chatall/./src/i18n/index.js","webpack://chatall/./src/main.js","webpack://chatall/./src/store/chats.js","webpack://chatall/./src/store/db.js","webpack://chatall/./src/store/index.js","webpack://chatall/./src/store/messages.js","webpack://chatall/./src/store/migration.js","webpack://chatall/./src/store/queue.js","webpack://chatall/./src/store/threads.js","webpack://chatall/./src/theme.js","webpack://chatall/./src/components/ShortcutGuide/shortcut.const.js","webpack://chatall/./src/helpers/scroll-helper.js","webpack://chatall/./src/components/ChatDrawer/ChatDrawerItem.vue","webpack://chatall/./src/components/ChatDrawer/ChatDrawerItem.vue?cc88","webpack://chatall/./src/components/ConfirmModal.vue","webpack://chatall/./src/components/ConfirmModal.vue?51f7","webpack://chatall/./src/components/ChatDrawer/ChatDrawer.vue","webpack://chatall/./src/components/ChatDrawer/ChatDrawer.vue?cb9e","webpack://chatall/./src/components/Messages/ChatPrompt.vue","webpack://chatall/./src/components/Messages/ChatPrompt.vue?f257","webpack://chatall/./src/components/Messages/ChatThread.vue","webpack://chatall/./src/components/Messages/ChatThread.vue?3825","webpack://chatall/./src/components/Messages/ChatResponse.vue","webpack://chatall/./src/components/Messages/ChatResponse.vue?4b29","webpack://chatall/./src/components/Messages/ChatMessages.vue","webpack://chatall/./src/components/Messages/ChatMessages.vue?49b9","webpack://chatall/./src/components/ProxySetting.vue","webpack://chatall/./src/components/ProxySetting.vue?2d75","webpack://chatall/./src/helpers/template-helper.js","webpack://chatall/./src/components/ChatSetting.vue","webpack://chatall/./src/components/ChatSetting.vue?3cfc","webpack://chatall/./src/components/SettingsModal.vue","webpack://chatall/./src/components/SettingsModal.vue?2f47","webpack://chatall/./src/components/MakeAvailableModal.vue","webpack://chatall/./src/components/MakeAvailableModal.vue?26f2","webpack://chatall/./src/components/Footer/BotLogo.vue","webpack://chatall/./src/components/Footer/BotLogo.vue?d6b4","webpack://chatall/./src/components/Footer/BotsMenu.vue","webpack://chatall/./src/components/Footer/BotsMenu.vue?038a","webpack://chatall/./src/prompts/index.js","webpack://chatall/./src/components/PromptModal.vue","webpack://chatall/./src/components/PromptModal.vue?7dc0","webpack://chatall/./src/components/Footer/FooterBar.vue","webpack://chatall/./src/components/Footer/FooterBar.vue?e085","webpack://chatall/./src/components/Notification/UpdateNotificationModal.vue","webpack://chatall/./src/components/Notification/UpdateNotificationModal.vue?7824","webpack://chatall/./src/components/FindModal.vue","webpack://chatall/./src/components/FindModal.vue?c264","webpack://chatall/./src/components/ShortcutGuide/ShortcutGuide.vue","webpack://chatall/./src/components/ShortcutGuide/ShortcutGuide.vue?7a2f","webpack://chatall/./src/components/ChatAction.vue","webpack://chatall/./src/components/ChatAction.vue?8a01","webpack://chatall/./src/App.vue","webpack://chatall/./src/App.vue?7ccd","webpack://chatall/./src/components/BotSettings/AzureOpenAIAPIBotSettings.vue","webpack://chatall/./src/components/BotSettings/AzureOpenAIAPIBotSettings.vue?5f90","webpack://chatall/./src/components/BotSettings/BardBotSettings.vue","webpack://chatall/./src/components/BotSettings/BardBotSettings.vue?8a12","webpack://chatall/./src/components/BotSettings/BingChatBotSettings.vue","webpack://chatall/./src/components/BotSettings/BingChatBotSettings.vue?a3de","webpack://chatall/./src/components/BotSettings/CharacterAIBotSettings.vue","webpack://chatall/./src/components/BotSettings/CharacterAIBotSettings.vue?6044","webpack://chatall/./src/components/BotSettings/ChatGLMBotSettings.vue","webpack://chatall/./src/components/BotSettings/ChatGLMBotSettings.vue?c779","webpack://chatall/./src/components/BotSettings/ChatGPTBotSettings.vue","webpack://chatall/./src/components/BotSettings/ChatGPTBotSettings.vue?5f7e","webpack://chatall/./src/components/BotSettings/ClaudeAIBotSettings.vue","webpack://chatall/./src/components/BotSettings/ClaudeAIBotSettings.vue?290e","webpack://chatall/./src/components/BotSettings/ClaudeAPIBotSettings.vue","webpack://chatall/./src/components/BotSettings/ClaudeAPIBotSettings.vue?67a0","webpack://chatall/./src/components/BotSettings/CohereAPIBotSettings.vue","webpack://chatall/./src/components/BotSettings/CohereAPIBotSettings.vue?97a0","webpack://chatall/./src/components/BotSettings/CommonBotSettings.vue","webpack://chatall/./src/components/BotSettings/CommonBotSettings.vue?a367","webpack://chatall/./src/components/BotSettings/Falcon180bBotSettings.vue","webpack://chatall/./src/components/BotSettings/Falcon180bBotSettings.vue?f1d7","webpack://chatall/./src/components/BotSettings/GeminiAPIBotSettings.vue","webpack://chatall/./src/components/BotSettings/GeminiAPIBotSettings.vue?6cb2","webpack://chatall/./src/components/BotSettings/GradioAppBotSettings.vue","webpack://chatall/./src/components/BotSettings/GradioAppBotSettings.vue?bfe4","webpack://chatall/./src/components/BotSettings/GroqAPIBotSettings.vue","webpack://chatall/./src/components/BotSettings/GroqAPIBotSettings.vue?bde2","webpack://chatall/./src/components/BotSettings/HuggingChatBotSettings.vue","webpack://chatall/./src/components/BotSettings/HuggingChatBotSettings.vue?ff09","webpack://chatall/./src/components/BotSettings/KimiBotSettings.vue","webpack://chatall/./src/components/BotSettings/KimiBotSettings.vue?7f0e","webpack://chatall/./src/components/BotSettings/LMSYSBotSettings.vue","webpack://chatall/./src/components/BotSettings/LMSYSBotSettings.vue?a74f","webpack://chatall/./src/components/BotSettings/LoginSetting.vue","webpack://chatall/./src/components/BotSettings/LoginSetting.vue?ab74","webpack://chatall/./src/components/BotSettings/MOSSBotSettings.vue","webpack://chatall/./src/components/BotSettings/MOSSBotSettings.vue?d478","webpack://chatall/./src/components/BotSettings/MistralBotSettings.vue","webpack://chatall/./src/components/BotSettings/MistralBotSettings.vue?91dd","webpack://chatall/./src/components/BotSettings/OpenAIAPIBotSettings.vue","webpack://chatall/./src/components/BotSettings/OpenAIAPIBotSettings.vue?9e2c","webpack://chatall/./src/components/BotSettings/PerplexityBotSettings.vue","webpack://chatall/./src/components/BotSettings/PerplexityBotSettings.vue?375e","webpack://chatall/./src/components/BotSettings/PhindBotSettings.vue","webpack://chatall/./src/components/BotSettings/PhindBotSettings.vue?8114","webpack://chatall/./src/components/BotSettings/PiBotSettings.vue","webpack://chatall/./src/components/BotSettings/PiBotSettings.vue?454f","webpack://chatall/./src/components/BotSettings/PoeBotSettings.vue","webpack://chatall/./src/components/BotSettings/PoeBotSettings.vue?572c","webpack://chatall/./src/components/BotSettings/QianWenBotSettings.vue","webpack://chatall/./src/components/BotSettings/QianWenBotSettings.vue?3228","webpack://chatall/./src/components/BotSettings/Qihoo360AIBrainBotSettings.vue","webpack://chatall/./src/components/BotSettings/Qihoo360AIBrainBotSettings.vue?738d","webpack://chatall/./src/components/BotSettings/SkyWorkBotSettings.vue","webpack://chatall/./src/components/BotSettings/SkyWorkBotSettings.vue?d4b2","webpack://chatall/./src/components/BotSettings/SparkBotSettings.vue","webpack://chatall/./src/components/BotSettings/SparkBotSettings.vue?11fd","webpack://chatall/./src/components/BotSettings/WenxinQianfanBotSettings.vue","webpack://chatall/./src/components/BotSettings/WenxinQianfanBotSettings.vue?d814","webpack://chatall/./src/components/BotSettings/YouChatBotSettings.vue","webpack://chatall/./src/components/BotSettings/YouChatBotSettings.vue?9a8e","webpack://chatall/./src/assets/ sync ^\\.\\/column\\-.*\\.svg$","webpack://chatall/./src/components/BotSettings/ lazy ^\\.\\/.*$ namespace object","webpack://chatall/./src/components/BotSettings/ lazy ^\\.\\/.*\\.vue$ namespace object","webpack://chatall/webpack/bootstrap","webpack://chatall/webpack/runtime/async module","webpack://chatall/webpack/runtime/chunk loaded","webpack://chatall/webpack/runtime/compat get default export","webpack://chatall/webpack/runtime/create fake namespace object","webpack://chatall/webpack/runtime/define property getters","webpack://chatall/webpack/runtime/ensure chunk","webpack://chatall/webpack/runtime/get javascript chunk filename","webpack://chatall/webpack/runtime/get mini-css chunk filename","webpack://chatall/webpack/runtime/global","webpack://chatall/webpack/runtime/hasOwnProperty shorthand","webpack://chatall/webpack/runtime/load script","webpack://chatall/webpack/runtime/make namespace object","webpack://chatall/webpack/runtime/node module decorator","webpack://chatall/webpack/runtime/publicPath","webpack://chatall/webpack/runtime/jsonp chunk loading","webpack://chatall/webpack/startup"],"sourcesContent":["import i18n from \"@/i18n\";\nimport store from \"@/store\";\nimport Chats from \"@/store/chats\";\n\nexport default class Bot {\n  static _logoPackedPaths = null;\n  static _isAvailable = false;\n\n  static _brandId = \"bot\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Bot\"; // Class name of the bot\n  static _model = \"\"; // Model of the bot (eg. \"text-davinci-002-render-sha\")\n  static _logoFilename = \"default-logo.svg\"; // Place it in public/bots/\n  static _isDarkLogo = false; // True if the main color of logo is dark\n  static _loginUrl = \"undefined\";\n  static _userAgent = \"\"; // Empty string means using the default user agent\n  static _lock = null; // AsyncLock for prompt requests. `new AsyncLock()` in the subclass as needed.\n  static _settingsComponent = \"\"; // Vue component filename for settings\n  static _outputFormat = \"markdown\"; // \"markdown\" or \"html\"\n\n  disabled = false; // True if the bot is permanently disabled\n\n  constructor() {}\n\n  static getInstance() {\n    return new this();\n  }\n\n  getLogo() {\n    return `bots/${this.constructor._logoFilename}`;\n  }\n\n  isDarkLogo() {\n    return this.constructor._isDarkLogo;\n  }\n\n  getBrandName() {\n    const c = this.constructor;\n    return i18n.global.t(`${c._brandId}.name`);\n  }\n\n  getModelName() {\n    const c = this.constructor;\n    const model = c._model.replace(/[^a-zA-Z0-9-_]/g, \"\");\n    return model ? i18n.global.t(`${c._brandId}.${model}`) : \"\";\n  }\n\n  getFullname() {\n    const prefix = this.isDisabled()\n      ? `(${i18n.global.t(\"bot.disabled\")}) `\n      : \"\";\n    if (this.getModelName())\n      return prefix + `${this.getModelName()}@${this.getBrandName()}`;\n    else return prefix + this.getBrandName();\n  }\n\n  getLoginUrl() {\n    return this.constructor._loginUrl;\n  }\n\n  getUserAgent() {\n    return this.constructor._userAgent;\n  }\n\n  getLoginScript() {\n    return this.constructor._loginScript;\n  }\n\n  getOutputFormat() {\n    return this.constructor._outputFormat;\n  }\n\n  getClassname() {\n    return this.constructor._className;\n  }\n\n  async getSettingsComponent() {\n    let component;\n\n    if (this.constructor._settingsComponent) {\n      component = await import(\n        `@/components/BotSettings/${this.constructor._settingsComponent}`\n      );\n    } else {\n      let currentClass = this.constructor;\n      let parentClass = Object.getPrototypeOf(currentClass);\n      while (parentClass && parentClass._className !== \"Bot\") {\n        currentClass = parentClass;\n        parentClass = Object.getPrototypeOf(currentClass);\n      }\n      const componentName = currentClass._className + \"Settings\";\n      component = await import(`@/components/BotSettings/${componentName}.vue`);\n    }\n\n    return component.default;\n  }\n\n  isAvailable() {\n    return this.constructor._isAvailable;\n  }\n\n  isDisabled() {\n    return this.disabled;\n  }\n\n  /**\n   * Subclass should implement this method if it needs to notice the user\n   * before using the bot.\n   * @param {object} confirmModal - ConfirmModal component\n   * @returns {boolean} true if user has confirmed to use the bot\n   */\n  // eslint-disable-next-line\n  async confirmBeforeUsing(confirmModal) {\n    return true;\n  }\n\n  /**\n   * Acquire a lock for the given key and call lockedFn() when the lock is acquired.\n   * If the lock is not available, call onLockUnavailable() and then try to acquire\n   * the lock again.\n   * @param {string} key\n   * @param {function} lockedFn\n   * @param {function} onLockUnavailable\n   */\n  async acquireLock(key, lockedFn, onLockUnavailable) {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      (async () => {\n        await this.constructor._lock.acquire(\n          key,\n          async () => {\n            try {\n              const ret = await lockedFn();\n              resolve(ret);\n            } catch (err) {\n              reject(err);\n            }\n          },\n          async function (err, ret) {\n            if (err) {\n              // The lock is not available\n              onLockUnavailable();\n              try {\n                const ret = await self.constructor._lock.acquire(key, lockedFn); // Wait forever\n                resolve(ret);\n              } catch (err) {\n                reject(err);\n              }\n            } else {\n              resolve(ret);\n            }\n          },\n          { timeout: 1 }, // Wait for only 1ms. Don't use 0 here.\n        );\n      })();\n    });\n  }\n\n  /* eslint-disable no-unused-vars */\n  /**\n   * Subclass should implement this method, not sendPrompt().\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    throw new Error(i18n.global.t(\"bot.notImplemented\"));\n  }\n  /* eslint-enable no-unused-vars */\n\n  async sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    // If not logged in, handle the error\n    if (!this.isAvailable()) {\n      onUpdateResponse(callbackParam, {\n        content: i18n.global.t(\"bot.notAvailable\", {\n          botName: this.getFullname(),\n        }),\n        done: true,\n      });\n      return;\n    }\n\n    const executeSendPrompt = async () => {\n      // Begin thinking...\n      onUpdateResponse(callbackParam, { content: \"...\", done: false });\n      await this._sendPrompt(prompt, onUpdateResponse, callbackParam);\n    };\n\n    try {\n      if (!this.constructor._lock) {\n        await executeSendPrompt();\n      } else {\n        await this.acquireLock(\"sendPrompt\", executeSendPrompt, () => {\n          onUpdateResponse(callbackParam, {\n            content: i18n.global.t(\"bot.waiting\", {\n              botName: this.getBrandName(),\n            }),\n            done: false,\n          });\n        });\n      }\n    } catch (err) {\n      console.error(`Error send prompt to ${this.getFullname()}:`, err);\n      let message;\n      if (err instanceof LoginError) {\n        message = `${err.message}\\n${i18n.global.t(\"error.requireLogin\", {\n          link: this.getLoginHyperlink(),\n        })}`;\n      } else {\n        message = err;\n      }\n      onUpdateResponse(callbackParam, {\n        content: this.wrapCollapsedSection(message),\n        done: true,\n      }); // Make sure stop loading\n    }\n  }\n\n  async checkAvailability() {\n    if (this.isDisabled()) return false;\n    this.constructor._isAvailable = await this._checkAvailability();\n    return this.isAvailable();\n  }\n\n  /**\n   * Subclass must implement this method.\n   * Check if the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    return false;\n  }\n\n  disable() {\n    this.disabled = true;\n  }\n\n  /**\n   * Subclass should implement this method if the bot supports multi-chats.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return null;\n  }\n\n  /**\n   * Get the context from the store. If not available, create a new one.\n   * @param {boolean} createIfNotExists - Create a new context if not exists\n   * @returns {object} - Chat context defined by the bot\n   */\n  async getChatContext(createIfNotExists = true) {\n    let context = (await Chats.getCurrentChat())?.contexts?.[\n      this.getClassname()\n    ];\n    if (!context && createIfNotExists) {\n      context = await this.createChatContext();\n      this.setChatContext(context);\n    }\n    return context;\n  }\n\n  /**\n   * @param {*} context\n   * @returns Nothing\n   */\n  setChatContext(context) {\n    store.commit(\"setChatContext\", {\n      botClassname: this.getClassname(),\n      context,\n    });\n  }\n\n  wrapCollapsedSection(text) {\n    // replace line break with <br/>\n    text = text?.toString()?.replace(/[\\r\\n]+/g, \"<br/>\");\n    return `<details open>\n              <summary>${i18n.global.t(\"error.error\")}</summary>\n              <pre class=\"error\">${text}</pre>\n            </details>`;\n  }\n\n  getSSEDisplayError(event) {\n    if (event?.source?.xhr?.getResponseHeader(\"cf-mitigated\") === \"challenge\") {\n      // if encounter Cloudflare challenge page, prompt user to open link and solve challenge\n      return `${i18n.global.t(\n        \"error.solveChallenge\",\n      )}\\n${this.getLoginHyperlink()}`;\n    }\n    return `${event?.source?.xhr?.status}\\n${event?.source?.xhr?.response}`;\n  }\n\n  getLoginHyperlink() {\n    const url = this.getLoginUrl();\n    return `<a href=\"${url}\" target=\"innerWindow\">${url}</a>`;\n  }\n}\n\nexport class LoginError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"LoginError\";\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport store from \"@/store\";\nimport AsyncLock from \"async-lock\";\nimport axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport WebSocketAsPromised from \"websocket-as-promised\";\n\nexport default class CharacterAIBot extends Bot {\n  static _brandId = \"characterAI\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"CharacterAIBot\"; // Class name of the bot\n  static _logoFilename = \"character-ai-logo.svg\"; // Place it in public/bots/\n  static _isDarkLogo = true;\n  static _loginUrl = \"https://character.ai/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n  static _loginScript = \"document.getElementsByTagName('a')[0].click();\";\n\n  get requestId() {\n    return uuidv4().split(\"-\").fill(\"vhj9cXafWcF8\", 4, 5).join(\"-\");\n  }\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    let available = false;\n    try {\n      if (\n        store.state.characterAI.id &&\n        store.state.characterAI.username &&\n        store.state.characterAI.version\n      ) {\n        available = true;\n      } else {\n        const response = await axios.get(\n          `https://character.ai/_next/data/${store.state.characterAI.version}/chat/${store.state.characterAI.characterId}.json?character=${store.state.characterAI.characterId}`,\n          {\n            headers: {\n              \"x-nextjs-data\": 1,\n            },\n          },\n        );\n        if (response?.data?.pageProps?.user?.user) {\n          store.commit(\"setCharacterAI\", {\n            id: response.data.pageProps.user.user?.id,\n            username: response.data.pageProps.user.user?.username,\n          });\n          available = true;\n        }\n      }\n    } catch (error) {\n      console.error(\"Error CharacterAIBot check login:\", error);\n    }\n    return available;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      try {\n        const url = \"wss://neo.character.ai/ws/\";\n        const wsp = new WebSocketAsPromised(url, {\n          packMessage: (data) => JSON.stringify(data),\n          unpackMessage: (data) => JSON.parse(data),\n        });\n        wsp.onUnpackedMessage.addListener(async (data) => {\n          try {\n            if (data.command === \"neo_error\" || data.error_code) {\n              throw new Error(JSON.stringify(data));\n            }\n            if (data?.turn) {\n              if (data.turn.author?.author_id !== context.characterId) {\n                return;\n              }\n              if (data.turn.candidates?.length) {\n                onUpdateResponse(callbackParam, {\n                  content: data.turn.candidates\n                    .map((candidate) => candidate.raw_content)\n                    .join(`\\n---\\n`),\n                });\n              }\n              if (\n                data.turn.candidates?.every((candidate) => candidate.is_final)\n              ) {\n                onUpdateResponse(callbackParam, {\n                  done: true,\n                });\n                wsp.removeAllListeners();\n                wsp.close();\n                resolve();\n              }\n            }\n          } catch (error) {\n            console.error(\"Error CharacterAIBot onUnpackedMessage:\", error);\n            wsp.removeAllListeners();\n            wsp.close();\n            reject(error);\n          }\n        });\n\n        wsp.onError.addListener((event) => {\n          wsp.removeAllListeners();\n          wsp.close();\n          reject(new Error(JSON.stringify(event)));\n        });\n\n        wsp.onClose.addListener(() => {\n          onUpdateResponse(callbackParam, { done: true });\n          resolve();\n        });\n\n        wsp.open().then(() => {\n          if (context.isFirstMessage) {\n            this.setChatContext({\n              ...context,\n              isFirstMessage: false,\n            });\n            store.commit(\"setCharacterAI\", {\n              isFirstMessage: false,\n            });\n            wsp.sendPacked({\n              command: \"create_chat\",\n              request_id: this.requestId,\n              payload: {\n                chat: {\n                  chat_id: context.chatId,\n                  creator_id: context.id,\n                  visibility: \"VISIBILITY_PRIVATE\",\n                  character_id: context.characterId,\n                  type: \"TYPE_ONE_ON_ONE\",\n                },\n                with_greeting: false,\n              },\n              origin_id: \"web-next\",\n            });\n          }\n          const turnId = uuidv4();\n          wsp.sendPacked({\n            command: \"create_and_generate_turn\",\n            request_id: this.requestId,\n            payload: {\n              num_candidates: 1,\n              tts_enabled: false,\n              selected_language: \"\",\n              character_id: context.characterId,\n              user_name: context.username,\n              turn: {\n                turn_key: {\n                  turn_id: turnId,\n                  chat_id: context.chatId,\n                },\n                author: {\n                  author_id: context.id,\n                  is_human: true,\n                  name: context.username,\n                },\n                candidates: [\n                  {\n                    candidate_id: turnId,\n                    raw_content: prompt,\n                  },\n                ],\n                primary_candidate_id: turnId,\n              },\n            },\n            origin_id: \"web-next\",\n          });\n        });\n      } catch (error) {\n        console.error(\"Error CharacterAIBot _sendPrompt\", error);\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    context = {\n      chatId: uuidv4(),\n      isFirstMessage: true,\n      characterId: store.state.characterAI.characterId,\n      username: store.state.characterAI.username,\n      id: store.state.characterAI.id.toString(),\n    };\n    return context;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport store from \"@/store\";\nimport AsyncLock from \"async-lock\";\nimport axios from \"axios\";\nimport { SSE } from \"sse.js\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default class ClaudeAIBot extends Bot {\n  static _brandId = \"claudeAi\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"ClaudeAIBot\"; // Class name of the bot\n  static _logoFilename = \"claude-ai-logo.svg\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _loginUrl = \"https://claude.ai/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    let available = false;\n\n    if (store.state.claudeAi.org) {\n      const currentAcountResponse = await axios.get(\n        \"https://claude.ai/api/account\",\n      );\n\n      if (currentAcountResponse.status === 200) {\n        available = true;\n      }\n    }\n\n    return available;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n    const headers = {\n      accept: \"text/event-stream, text/event-stream\",\n      \"Content-Type\": \"application/json\",\n    };\n    const url = `https://claude.ai/api/organizations/${store.state.claudeAi.org}/chat_conversations/${context.uuid}/completion`;\n    const payload = JSON.stringify({\n      attachments: [],\n      files: [],\n      prompt: prompt,\n      timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n    });\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(url, {\n          headers,\n          payload,\n          withCredentials: true,\n        });\n        let text = \"\";\n        source.addEventListener(\"completion\", (event) => {\n          try {\n            const data = JSON.parse(event.data);\n            if (data.completion) {\n              text += data.completion;\n              onUpdateResponse(callbackParam, {\n                content: text,\n                done: false,\n              });\n            }\n          } catch (error) {\n            console.error(event);\n            reject(this.getSSEDisplayError(event));\n          }\n        });\n        source.addEventListener(\"readystatechange\", (event) => {\n          if (event.readyState === source.CLOSED) {\n            // after stream closed, done\n            onUpdateResponse(callbackParam, {\n              content: text,\n              done: true,\n            });\n            resolve();\n          }\n        });\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          reject(this.getSSEDisplayError(event));\n        });\n        source.stream();\n      } catch (err) {\n        reject(err);\n        console.error(\"Error ClaudeAI _sendPrompt\", err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    const uuid = uuidv4();\n    try {\n      const createResponse = await axios.post(\n        `https://claude.ai/api/organizations/${store.state.claudeAi.org}/chat_conversations`,\n        { name: \"\", uuid: uuid },\n      );\n\n      if (createResponse.status === 201) {\n        context = {\n          uuid,\n        };\n      } else {\n        console.error(\n          \"Error ClaudeAI createChatContext status\",\n          createResponse,\n        );\n      }\n    } catch (error) {\n      console.error(\"Error ClaudeAI createChatContext\", error);\n    }\n    return context;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport { BufferMemory } from \"langchain/memory\";\n\nexport default class LangChainBot extends Bot {\n  static _brandId = \"langChainBot\";\n  static _chatModel = undefined; // ChatModel instance\n\n  constructor() {\n    super();\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    let messages = await this.getChatContext();\n    let bufferMemory = new BufferMemory();\n\n    // Remove old messages if exceeding the pastRounds limit\n    while (messages.length > this.getPastRounds() * 2) {\n      messages.shift();\n    }\n\n    // Deserialize the messages and convert them to the correct format\n    messages.forEach((item) => {\n      let storedMessage = JSON.parse(item); // Deserialize\n      if (\n        storedMessage.type.toLowerCase() ===\n        bufferMemory.humanPrefix.toLowerCase()\n      ) {\n        bufferMemory.chatHistory.addUserMessage(storedMessage.data);\n      } else if (\n        storedMessage.type.toLowerCase() === bufferMemory.aiPrefix.toLowerCase()\n      ) {\n        bufferMemory.chatHistory.addAIChatMessage(storedMessage.data);\n      } else if (storedMessage.type === \"system\") {\n        bufferMemory.chatHistory.addMessage(storedMessage.data);\n      }\n    });\n\n    // Add the prompt to the messages\n    await bufferMemory.chatHistory.addUserMessage(prompt);\n\n    let res = \"\";\n    const model = this.constructor._chatModel;\n    messages = await bufferMemory.chatHistory.getMessages();\n    const callbacks = [\n      {\n        handleLLMNewToken(token) {\n          res += token;\n          onUpdateResponse(callbackParam, { content: res, done: false });\n        },\n        handleLLMEnd() {\n          onUpdateResponse(callbackParam, { done: true });\n        },\n      },\n    ];\n    model.callbacks = callbacks;\n    await model.call(messages);\n    await bufferMemory.chatHistory.addAIChatMessage(res);\n    // Serialize the messages before storing\n    messages = messages.map((item) => JSON.stringify(item.toDict()));\n    this.setChatContext(messages);\n  }\n\n  async createChatContext() {\n    return [];\n  }\n\n  setupModel() {\n    this.constructor._chatModel = this._setupModel();\n  }\n\n  _setupModel() {\n    throw new Error(\n      \"Abstract property '_setupModel' must be implemented in the subclass.\",\n    );\n  }\n\n  getPastRounds() {\n    throw new Error(\n      \"Abstract property 'pastRounds' must be implemented in the subclass.\",\n    );\n  }\n}\n","import WebSocketAsPromised from \"websocket-as-promised\";\nimport axios from \"axios\";\nimport AsyncLock from \"async-lock\";\n\nimport Bot from \"./Bot\";\nimport store from \"@/store\";\nimport i18n from \"@/i18n\";\n\nexport default class MOSSBot extends Bot {\n  static _brandId = \"moss\";\n  static _className = \"MOSSBot\";\n  static _logoFilename = \"moss-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://moss.fastnlp.top/moss/\";\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n\n  getAuthHeader() {\n    const token = store.state.moss?.token?.refresh;\n    return {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n  }\n\n  async createChatContext() {\n    try {\n      const res = await axios.post(\n        \"https://moss.fastnlp.top/api/chats\",\n        {},\n        this.getAuthHeader(),\n      );\n      return res.data.id;\n    } catch (err) {\n      console.error(\"Error creating conversation:\", err);\n      throw new Error(\n        i18n.global.t(\"bot.failedToCreateConversation\") + \"\\n\" + err.message,\n      );\n    }\n  }\n\n  async _checkAvailability() {\n    const token = store.state.moss?.token?.refresh;\n    let available = false;\n\n    if (token) {\n      await axios\n        .get(\"https://moss.fastnlp.top/api/users/me\", this.getAuthHeader())\n        .then(() => {\n          available = true;\n        });\n    }\n\n    return available;\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const chat_id = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      (async () => {\n        try {\n          if (chat_id === 0) {\n            reject(new Error(i18n.global.t(\"bot.failedToCreateConversation\")));\n          }\n\n          const url = `wss://moss.fastnlp.top/api/ws/chats/${chat_id}/records?jwt=${\n            this.getAuthHeader().headers.Authorization.split(\" \")[1]\n          }`;\n\n          const wsp = new WebSocketAsPromised(url, {\n            packMessage: (data) => {\n              return JSON.stringify(data);\n            },\n            unpackMessage: (data) => {\n              return JSON.parse(data);\n            },\n          });\n\n          wsp.onOpen.addListener(() => {\n            wsp.sendPacked({ request: prompt });\n          });\n\n          let beginning = \"\";\n          let body = \"\";\n          let ending = \"\";\n          wsp.onUnpackedMessage.addListener(async (event) => {\n            if (!(\"status\" in event)) {\n              // The last message. Parse links first\n              const links = event.processed_extra_data?.[0]?.data;\n              for (const key in links) {\n                if (Object.hasOwnProperty.call(links, key)) {\n                  const link = links[key];\n                  ending += `> ${key}. [${link.title}](${link.url})\\n`;\n                }\n              }\n\n              onUpdateResponse(callbackParam, {\n                content: `${beginning}\\n${body}\\n${ending}`,\n                done: true,\n              });\n              wsp.removeAllListeners();\n              wsp.close();\n              resolve();\n              return;\n            } else if (event.status === 1) {\n              body = event.output;\n            } else if (event.status === 3) {\n              if (event.stage === \"start\") {\n                beginning += `> ${event.type} ${event.output}\\n`;\n              }\n            } else if (event.status === -1) {\n              wsp.removeAllListeners();\n              wsp.close();\n              reject(new Error(`${event.status_code} ${event.output}`));\n              return;\n            }\n            onUpdateResponse(callbackParam, {\n              content: `${beginning}\\n${body}\\n${ending}`,\n              done: false,\n            });\n          });\n\n          wsp.onError.addListener((event) => {\n            wsp.removeAllListeners();\n            wsp.close();\n            reject(\n              i18n.global.t(\"error.failedConnectUrl\", {\n                url: event.target.url,\n              }),\n            );\n          });\n\n          wsp.open();\n        } catch (err) {\n          reject(err);\n        }\n      })();\n    });\n  }\n}\n","import Bot from \"@/bots/Bot\";\r\nimport store from \"@/store\";\r\nimport axios from \"axios\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport default class MistralBot extends Bot {\r\n  static _brandId = \"mistral\"; // Brand id of the bot, should be unique. Used in i18n.\r\n  static _className = \"MistralBot\"; // Class name of the bot\r\n  static _logoFilename = \"mistral-logo.png\"; // Place it in public/bots/\r\n  static _loginUrl = \"https://chat.mistral.ai/login\";\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  async _checkAvailability() {\r\n    let available = false;\r\n    try {\r\n      const response = await axios.get(\"https://chat.mistral.ai/chat\");\r\n      if (typeof response?.data === \"string\") {\r\n        available = true;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error MistralBot _checkAvailability\", error);\r\n    }\r\n    return available;\r\n  }\r\n\r\n  async createChatContext() {\r\n    return { chatId: undefined };\r\n  }\r\n\r\n  /**\r\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\r\n   * when the response is ready.\r\n   * @param {string} prompt\r\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\r\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\r\n   */\r\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\r\n    const context = await this.getChatContext();\r\n    if (!context.chatId) {\r\n      // first message\r\n      try {\r\n        const result = await axios.post(\r\n          \"https://chat.mistral.ai/api/trpc/message.newChat?batch=1\",\r\n          {\r\n            0: {\r\n              json: {\r\n                chatId: null,\r\n                content: prompt,\r\n                rag: false,\r\n              },\r\n              meta: {\r\n                values: {\r\n                  chatId: [\"undefined\"],\r\n                },\r\n              },\r\n            },\r\n          },\r\n        );\r\n        if (result?.data[0].result?.data?.json?.chatId) {\r\n          context.chatId = result?.data[0].result?.data?.json?.chatId;\r\n          this.setChatContext({\r\n            chatId: context.chatId,\r\n          });\r\n        } else {\r\n          throw Error(\"chatId empty newChat\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error MistralBot _sendPrompt message.newChat\", error);\r\n      }\r\n    }\r\n\r\n    try {\r\n      await axios.post(\r\n        \"https://chat.mistral.ai/api/chat\",\r\n        {\r\n          chatId: context.chatId,\r\n          model: store.state.mistral.model,\r\n          messageInput: context.chatId ? prompt : undefined,\r\n          messageId: context.chatId ? uuidv4() : undefined,\r\n          mode: context.chatId ? \"append\" : \"retry\",\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          onDownloadProgress: (progressEvent) => {\r\n            this.onResponseDownloadProgress(\r\n              progressEvent,\r\n              onUpdateResponse,\r\n              callbackParam,\r\n            );\r\n          },\r\n        },\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Error MistralBot _sendPrompt\", error);\r\n    } finally {\r\n      onUpdateResponse(callbackParam, {\r\n        done: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  onResponseDownloadProgress(progressEvent, onUpdateResponse, callbackParam) {\r\n    try {\r\n      let text = \"\";\r\n      const responses = progressEvent?.event?.currentTarget?.response\r\n        ?.split(\"\\n\") // split with new line\r\n        ?.filter((n) => n); //  filter empty string in array\r\n      for (const response of responses) {\r\n        const chunks = this.separateChunks(response);\r\n        if (chunks.number == 0) {\r\n          text += chunks.content\r\n            .slice(1, chunks.content.length - 1)\r\n            .replaceAll(\"\\\\n\", \"\\n\");\r\n          onUpdateResponse(callbackParam, {\r\n            content: text,\r\n            done: false,\r\n          });\r\n        }\r\n      }\r\n      onUpdateResponse(callbackParam, {\r\n        done: true,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error MistralBot onChatDownloadProgress\", error);\r\n    }\r\n  }\r\n\r\n  separateChunks(line) {\r\n    const regex = /^(\\d+):(.*)/;\r\n    const match = line.match(regex);\r\n    if (match) {\r\n      return { number: match[1], content: match[2] };\r\n    } else {\r\n      return { number: undefined, content: line };\r\n    }\r\n  }\r\n}\r\n","import store from \"@/store\";\r\nimport Bot from \"@/bots/Bot\";\r\nimport axios from \"axios\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport WebSocketAsPromised from \"websocket-as-promised\";\r\n\r\nexport default class PerplexityBot extends Bot {\r\n  static _brandId = \"perplexity\";\r\n  static _className = \"PerplexityBot\"; // Class name of the bot\r\n  static _logoFilename = \"perplexity-logo.svg\"; // Place it in public/bots/\r\n  static _isDarkLogo = true; // True if the main color of logo is dark\r\n  static _loginUrl = \"https://www.perplexity.ai\";\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  async _checkAvailability() {\r\n    let available = false;\r\n    try {\r\n      const response = await axios.get(\r\n        \"https://www.perplexity.ai/api/auth/session\",\r\n      );\r\n      if (response?.data?.user) {\r\n        available = true;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error PerplexityBot _checkAvailability\", error);\r\n    }\r\n    return available;\r\n  }\r\n\r\n  /**\r\n   * @typedef {{\r\n   *   last_backend_uuid: string | undefined,\r\n   *   read_write_token: string | undefined\r\n   * }} ChatContext\r\n   */\r\n  /**\r\n   * @typedef {{\r\n   *   0: string,\r\n   *   1: string,\r\n   *   2: {\r\n   *     version: string,\r\n   *     source: string,\r\n   *     read_write_token: string,\r\n   *     attachments: any[],\r\n   *     language: string,\r\n   *     timezone: string,\r\n   *     search_focus: string,\r\n   *     frontend_uuid: string,\r\n   *     mode: string,\r\n   *     is_related_query: boolean,\r\n   *     is_default_related_query: boolean,\r\n   *     frontend_context_uuid: string,\r\n   *     prompt_source: string,\r\n   *     query_source: string\r\n   *   }\r\n   * }} Prompt\r\n   */\r\n\r\n  /**\r\n   * @typedef {{\r\n   *   status: string,\r\n   *   uuid: string,\r\n   *   read_write_token: string,\r\n   *   frontend_context_uuid: string,\r\n   *   text: string,\r\n   *   final: boolean,\r\n   *   backend_uuid: string,\r\n   *   media_items: any[],\r\n   *   widget_data: any[],\r\n   *   knowledge_cards: any[],\r\n   *   expect_search_results: string,\r\n   *   mode: string,\r\n   *   search_focus: string,\r\n   *   gpt4: boolean,\r\n   *   display_model: string,\r\n   *   attachments: any[],\r\n   *   personalized: boolean,\r\n   *   step_type: string,\r\n   *   query_str: string,\r\n   *   related_queries: string[],\r\n   *   context_uuid: string,\r\n   *   thread_title: string,\r\n   *   thread_access: number,\r\n   *   thread_url_slug: string,\r\n   *   author_username: string,\r\n   *   author_image: string,\r\n   *   s3_social_preview_url: string,\r\n   *   updated_datetime: string,\r\n   *   author_id: string,\r\n   *   prompt_source: string,\r\n   *   query_source: string\r\n   * }} Completed\r\n   */\r\n  /**\r\n   * @typedef {{\r\n   *   status: string,\r\n   *   uuid: string,\r\n   *   read_write_token: null,\r\n   *   frontend_context_uuid: string,\r\n   *   text: string,\r\n   *   final: boolean,\r\n   *   backend_uuid: string,\r\n   *   media_items: any[],\r\n   *   widget_data: any[],\r\n   *   knowledge_cards: any[],\r\n   *   expect_search_results: string,\r\n   *   mode: string,\r\n   *   search_focus: string,\r\n   *   gpt4: boolean,\r\n   *   display_model: string,\r\n   *   attachments: any[]\r\n   * }} Completing\r\n   */\r\n\r\n  /**\r\n   * @returns {ChatContext}\r\n   */\r\n  createChatContext() {\r\n    return { last_backend_uuid: undefined, read_write_token: undefined };\r\n  }\r\n\r\n  separateNumberAndObject(input) {\r\n    const regex = /^(\\d+)(.*)/;\r\n    const match = input.match(regex);\r\n    if (match) {\r\n      const number = parseInt(match[1]);\r\n      try {\r\n        const object = JSON.parse(match[2]);\r\n        return { number, object };\r\n      } catch (error) {\r\n        return { number, object: match[2] };\r\n      }\r\n    } else {\r\n      return { object: input };\r\n    }\r\n  }\r\n\r\n  seq = 1;\r\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\r\n    let sid;\r\n    /** @type {{ last_backend_uuid: string | undefined, read_write_token: string | undefined }} */\r\n    let context = await this.getChatContext();\r\n    try {\r\n      const response = await axios.get(\r\n        `https://www.perplexity.ai/socket.io/?EIO=4&transport=polling&t=${this.t}`,\r\n      );\r\n      const data = this.separateNumberAndObject(response.data);\r\n      sid = data.object?.sid;\r\n    } catch (error) {\r\n      console.error(\"Error PerplexityBot get\", error);\r\n      throw error;\r\n    }\r\n\r\n    try {\r\n      await axios.post(\r\n        `https://www.perplexity.ai/socket.io/?EIO=4&transport=polling&t=${this.t}&sid=${sid}`,\r\n        `40${JSON.stringify({ jwt: \"anonymous-ask-user\" })}`,\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Error PerplexityBot post sid\", error);\r\n    }\r\n\r\n    try {\r\n      await axios.get(\r\n        `https://www.perplexity.ai/socket.io/?EIO=4&transport=polling&t=${this.t}&sid=${sid}`,\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Error PerplexityBot get sid\", error);\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        const wsp = new WebSocketAsPromised(\r\n          `wss://www.perplexity.ai/socket.io/?EIO=4&transport=polling&t=${this.t}&sid=${sid}`,\r\n          {\r\n            packMessage: (data) => {\r\n              return `42${this.seq++}${JSON.stringify(data)}`;\r\n            },\r\n            unpackMessage: (data) => {\r\n              return this.separateNumberAndObject(data);\r\n            },\r\n          },\r\n        );\r\n\r\n        wsp.onOpen.addListener(() => {\r\n          wsp.send(\"2probe\");\r\n        });\r\n\r\n        wsp.onMessage.addListener((data) =>\r\n          console.log(\"PerplexityBot onMessage\", data),\r\n        );\r\n\r\n        wsp.onSend.addListener((data) =>\r\n          console.log(\"PerplexityBot onSend\", data),\r\n        );\r\n\r\n        wsp.onUnpackedMessage.addListener(async (data) => {\r\n          if (!data) {\r\n            console.error(\"Error PerplexityBot onUnpackedMessage\");\r\n            return;\r\n          }\r\n          try {\r\n            switch (Number(data.number)) {\r\n              case 2:\r\n                wsp.send(\"3\");\r\n                break;\r\n              case 3:\r\n                if (data.object === \"probe\") {\r\n                  wsp.send(\"5\");\r\n                  /** @type {Prompt} */\r\n                  const ask = [\r\n                    \"perplexity_ask\",\r\n                    prompt,\r\n                    {\r\n                      version: store.state.perplexity.version,\r\n                      source: \"default\",\r\n                      last_backend_uuid: context?.last_backend_uuid,\r\n                      read_write_token: context?.read_write_token,\r\n                      attachments: [],\r\n                      language: \"en-US\",\r\n                      timezone:\r\n                        Intl.DateTimeFormat().resolvedOptions().timeZone,\r\n                      search_focus: \"internet\",\r\n                      frontend_uuid: uuidv4(),\r\n                      mode: \"concise\",\r\n                      is_related_query: false,\r\n                      is_default_related_query: false,\r\n                      frontend_context_uuid: uuidv4(),\r\n                      prompt_source: \"user\",\r\n                      query_source: context?.last_backend_uuid\r\n                        ? \"followup\"\r\n                        : \"home\",\r\n                    },\r\n                  ];\r\n                  wsp.sendPacked(ask);\r\n                }\r\n                break;\r\n              case 42:\r\n                if (data?.object?.length >= 2) {\r\n                  /** @type {Completing} */\r\n                  const result = data.object[1];\r\n                  try {\r\n                    const response = JSON.parse(result.text);\r\n                    if (response) {\r\n                      onUpdateResponse(callbackParam, {\r\n                        content: response.answer,\r\n                      });\r\n                    }\r\n                  } catch (error) {\r\n                    console.error(\r\n                      \"Error PerplexityBot onUnpackedMessage 42\",\r\n                      error,\r\n                    );\r\n                  }\r\n                  /** @type {ChatContext} */\r\n                  const context = {};\r\n                  if (result.backend_uuid) {\r\n                    context.last_backend_uuid = result.backend_uuid;\r\n                  }\r\n                  this.setChatContext(context);\r\n                }\r\n                break;\r\n              default:\r\n                if (String(data.number).toString().startsWith(\"43\")) {\r\n                  // end\r\n                  if (data?.object?.length >= 1) {\r\n                    /** @type {Completed} */\r\n                    const result = data.object[0];\r\n                    try {\r\n                      const text = JSON.parse(result.text);\r\n                      if (text) {\r\n                        onUpdateResponse(callbackParam, {\r\n                          content: text.answer,\r\n                          done: true,\r\n                        });\r\n                      }\r\n                    } catch (error) {\r\n                      console.error(\r\n                        \"Error PerplexityBot onUnpackedMessage default\",\r\n                        error,\r\n                      );\r\n                    } finally {\r\n                      wsp.removeAllListeners();\r\n                      wsp.close();\r\n                    }\r\n\r\n                    /** @type {ChatContext} */\r\n                    const context = {};\r\n                    if (result.backend_uuid) {\r\n                      context.last_backend_uuid = result.backend_uuid;\r\n                    }\r\n                    if (result.read_write_token) {\r\n                      context.read_write_token = result.read_write_token;\r\n                    }\r\n                    this.setChatContext(context);\r\n                  }\r\n                  resolve();\r\n                }\r\n                break;\r\n            }\r\n          } catch (error) {\r\n            reject(error);\r\n          }\r\n        });\r\n\r\n        wsp.onError.addListener((event) => {\r\n          wsp.removeAllListeners();\r\n          wsp.close();\r\n          reject(event);\r\n        });\r\n\r\n        wsp.onClose.addListener(() => {\r\n          resolve();\r\n          onUpdateResponse(callbackParam, { done: true });\r\n        });\r\n\r\n        wsp.open();\r\n      } catch (error) {\r\n        console.error(\"Error PerplexityBot _sendPrompt\", error);\r\n        reject(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  static V =\r\n    \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_\".split(\r\n      \"\",\r\n    );\r\n\r\n  Z(e) {\r\n    let t = \"\";\r\n    do (t = PerplexityBot.V[e % 64] + t), (e = Math.floor(e / 64));\r\n    while (e > 0);\r\n    return t;\r\n  }\r\n\r\n  get t() {\r\n    return this.Z(+new Date());\r\n  }\r\n}\r\n","import Bot from \"@/bots/Bot\";\nimport store from \"@/store\";\nimport AsyncLock from \"async-lock\";\nimport axios from \"axios\";\nimport { SSE } from \"sse.js\";\nconst { ipcRenderer } = window.require(\"electron\");\n\nexport default class PhindBot extends Bot {\n  static _brandId = \"phind\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"PhindBot\"; // Class name of the bot\n  static _logoFilename = \"phind-logo.svg\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _loginUrl = \"https://www.phind.com\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    return true;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    try {\n      const context = await this.getChatContext();\n      const rewrite = await axios.post(\n        \"https://www.phind.com/api/infer/followup/rewrite\",\n        {\n          questionToRewrite: prompt,\n          questionHistory: context.questionHistory,\n          answerHistory: context.answerHistory,\n        },\n      );\n      const search = await axios.post(\"https://www.phind.com/api/web/search\", {\n        q: rewrite.data.query,\n        browserLanguage: \"en-GB\",\n        userSearchRules: {},\n      });\n\n      const date = new Date();\n      const formatDate = this.getFormattedDate(date);\n      const payload = JSON.stringify({\n        questionHistory: context.questionHistory,\n        answerHistory: context.answerHistory,\n        question: prompt,\n        webResults: search.data,\n        options: {\n          date: formatDate,\n          language: \"en-GB\",\n          detailed: true,\n          anonUserId: await this.getUUID(),\n          answerModel: store.state.phind.model,\n          customLinks: [],\n        },\n        context: \"\",\n      });\n\n      return new Promise((resolve, reject) => {\n        try {\n          const source = new SSE(\"https://www.phind.com/api/infer/answer\", {\n            start: false,\n            payload,\n          });\n          let text = \"\";\n          let isSuccess = false;\n          source.addEventListener(\"message\", (event) => {\n            if (event.data) {\n              if (event.data.startsWith(\"<PHIND_METADATA>\")) {\n                isSuccess = true;\n              } else {\n                text += event.data;\n                onUpdateResponse(callbackParam, {\n                  content: text,\n                  done: false,\n                });\n              }\n            }\n          });\n\n          source.addEventListener(\"readystatechange\", (event) => {\n            if (event.readyState === source.CLOSED) {\n              // after stream closed, done\n              if (isSuccess) {\n                // save answerHistory and questionHistory to context\n                this.setChatContext({\n                  answerHistory: [...context.answerHistory, text],\n                  questionHistory: [...context.questionHistory, prompt],\n                });\n\n                // replace link with hostname\n                if (search.data && search.data.length) {\n                  for (let i = 0; i < search.data.length; i++) {\n                    const hostname = new URL(search.data[i].url).hostname;\n                    text = text.replaceAll(`[Source${i}]`, `[${hostname}]`);\n                    text = text.replaceAll(\n                      `[^${i}^]`,\n                      ` [${hostname}](${search.data[i].url})`,\n                    );\n                    text = text.replaceAll(\n                      `^${i}^`,\n                      ` [${hostname}](${search.data[i].url})`,\n                    );\n                  }\n                }\n              }\n              onUpdateResponse(callbackParam, {\n                content: text,\n                done: true,\n              });\n              resolve();\n            }\n          });\n          source.addEventListener(\"error\", (event) => {\n            console.error(event);\n            reject(this.getSSEDisplayError(event));\n          });\n\n          // override default _onStreamProgress to fix missing new line in response due to trimming\n          source._onStreamProgress = function (e) {\n            if (!source.xhr) {\n              return;\n            }\n\n            if (source.xhr.status !== 200) {\n              source._onStreamFailure(e);\n              return;\n            }\n\n            if (source.readyState == source.CONNECTING) {\n              source.dispatchEvent(new CustomEvent(\"open\"));\n              source._setReadyState(source.OPEN);\n            }\n\n            var data = source.xhr.responseText.substring(source.progress);\n\n            source.progress += data.length;\n            var parts = (source.chunk + data).split(/\\r\\n\\r\\n/);\n            var lastPart = parts.pop();\n            for (let part of parts) {\n              // skip if data is empty\n              if (part === \"data: \") {\n                continue;\n              }\n\n              // newline\n              if (part === \"data: \\r\\ndata: \") {\n                let event = new CustomEvent(\"message\");\n                event.data = \"\\n\";\n                source.dispatchEvent(event);\n                continue;\n              }\n\n              const event = source._parseEventChunk(part);\n              source.dispatchEvent(event);\n            }\n            source.chunk = lastPart;\n          };\n          source.stream();\n        } catch (err) {\n          reject(err);\n        }\n      });\n    } catch (error) {\n      if (error.request.status === 403) {\n        throw new Error(\n          `${error.request.status} ${error.request.responseText}`,\n        );\n      } else {\n        console.error(\"Error PhindBot _sendPrompt:\", error);\n        throw error;\n      }\n    }\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return { answerHistory: [], questionHistory: [] };\n  }\n\n  getFormattedDate(date) {\n    let year = date.getFullYear();\n    let month = (1 + date.getMonth()).toString().padStart(2, \"0\");\n    let day = date.getDate().toString().padStart(2, \"0\");\n    return month + \"/\" + day + \"/\" + year;\n  }\n\n  async getUUID() {\n    const cookies = await ipcRenderer.invoke(\"get-cookies\", {\n      domain: \"www.phind.com\",\n    });\n    const uuidCookie = cookies.find((cookie) => cookie.name === \"uuid\");\n    return uuidCookie ? uuidCookie.value : \"\";\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport i18n from \"@/i18n\";\nimport AsyncLock from \"async-lock\";\nimport { SSE } from \"sse.js\";\n\nexport default class PiBot extends Bot {\n  static _brandId = \"pi\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"PiBot\"; // Class name of the bot\n  static _logoFilename = \"pi-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://pi.ai/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    return true;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  // eslint-disable-next-line\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const headers = {\n      accept: \"text/event-stream\",\n      \"Content-Type\": \"application/json\",\n      \"X-Api-Version\": 3,\n    };\n    const payload = JSON.stringify({\n      text: prompt,\n    });\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\"https://pi.ai/api/chat\", {\n          headers,\n          payload,\n          withCredentials: true,\n        });\n        let text = \"\";\n        source.addEventListener(\"partial\", (event) => {\n          const data = JSON.parse(event.data);\n          if (data.text) {\n            text += data.text;\n            onUpdateResponse(callbackParam, {\n              content: text,\n              done: false,\n            });\n          }\n        });\n        source.addEventListener(\"readystatechange\", (event) => {\n          if (event.readyState === source.CLOSED) {\n            // after stream closed, done\n            onUpdateResponse(callbackParam, {\n              content: text,\n              done: true,\n            });\n            resolve();\n          }\n        });\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          if (event?.source?.xhr?.status === 401) {\n            reject(\n              new Error(\n                `${i18n.global.t(\"pi.waitPiIntro\")}<br/><a href=\"${\n                  this.constructor._loginUrl\n                }\" target=\"innerWindow\">${this.constructor._loginUrl}</a>`,\n              ),\n            );\n          } else {\n            reject(this.getSSEDisplayError(event));\n          }\n        });\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return null;\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport Bot from \"@/bots/Bot\";\nimport axios from \"axios\";\nimport store from \"@/store\";\nimport { SSE } from \"sse.js\";\n\nfunction generateRandomId() {\n  let randomStr = \"\";\n  for (let i = 0; i < 32; i++) {\n    randomStr += Math.floor(Math.random() * 16).toString(16);\n  }\n  return randomStr;\n}\n\nexport default class QianWenBot extends Bot {\n  static _brandId = \"qianWen\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"QianWenBot\"; // Class name of the bot\n  static _logoFilename = \"qianwen-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://qianwen.aliyun.com/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  getRequestHeaders() {\n    return {\n      \"x-xsrf-token\": store.state.qianWen?.xsrfToken,\n    };\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    let available = false;\n    await axios\n      .post(\n        \"https://qianwen.aliyun.com/querySign\",\n        {},\n        { headers: this.getRequestHeaders() },\n      )\n      .then((resp) => {\n        available = resp.data?.success;\n        if (!resp.data?.success) {\n          console.error(\"Error QianWen check login:\", resp.data);\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error QianWen check login:\", error);\n      });\n\n    return available;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  // eslint-disable-next-line\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n    const headers = {\n      ...this.getRequestHeaders(),\n      accept: \"text/event-stream\",\n      \"content-type\": \"application/json\",\n    };\n    const payload = JSON.stringify({\n      action: \"next\",\n      msgId: generateRandomId(),\n      parentMsgId: context.parentMessageId || \"0\",\n      contents: [\n        {\n          contentType: \"text\",\n          content: prompt,\n        },\n      ],\n      timeout: 17,\n      openSearch: false,\n      sessionId: context.sessionId,\n      model: \"\",\n    });\n\n    return new Promise((resolve, reject) => {\n      if (context.exception) {\n        reject(\n          new Error(\n            `${context.exception?.errorCode} ${context.exception?.errorMsg}`,\n          ),\n        );\n        return;\n      }\n      try {\n        const source = new SSE(\"https://qianwen.aliyun.com/conversation\", {\n          headers,\n          payload,\n          withCredentials: true,\n        });\n\n        source.addEventListener(\"message\", (event) => {\n          if (event.data === \"[DONE]\") return;\n\n          if (event.data === \"\") {\n            // Empty message usually means error\n            const resp = JSON.parse(source.chunk);\n            if (resp?.failed) {\n              reject(new Error(`${resp?.errorCode} ${resp?.errorMsg}`));\n              return;\n            }\n          }\n          const data = JSON.parse(event.data);\n          onUpdateResponse(callbackParam, {\n            content: data.content[0],\n            done: false,\n          });\n          if (data.stopReason === undefined || data.stopReason === \"stop\") {\n            onUpdateResponse(callbackParam, { done: true });\n            context.parentMessageId = data.msgId;\n            this.setChatContext(context);\n            resolve();\n          }\n        });\n\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          reject(this.getSSEDisplayError(event));\n        });\n\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    await axios\n      .post(\n        \"https://qianwen.aliyun.com/addSession\",\n        {\n          firstQuery: \"ChatALL\",\n          sessionType: \"text_chat\",\n        }, // A hack to set session name\n        { headers: this.getRequestHeaders() },\n      )\n      .then((resp) => {\n        if (resp.data?.success) {\n          const sessionId = resp.data?.data?.sessionId;\n          const userId = resp.data?.data?.userId;\n          const parentMsgId = \"0\";\n          context = { sessionId, parentMsgId, userId };\n        } else if (resp.data) {\n          context = {\n            exception: resp.data,\n          };\n          console.error(\n            \"Error QianWen adding sesion resp:\",\n            JSON.stringify(resp.data),\n          );\n        }\n      })\n      .catch((err) => {\n        console.error(\"Error QianWen adding sesion:\", err);\n      });\n    return context;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport axios from \"axios\";\nimport { SSE } from \"sse.js\";\n\nexport default class Qihoo360AIBrainBot extends Bot {\n  static _brandId = \"360AiBrain\";\n  static _className = \"Qihoo360AIBrainBot\"; // Class name of the bot\n  static _logoFilename = \"360-ai-brain-logo.png\";\n  static _loginUrl = \"https://chat.360.com/\";\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = false;\n\n    await axios\n      .get(\"https://chat.360.com/backend-api/api/user/info\")\n      .then((response) => {\n        available = response.data?.context?.message == \"OK\";\n      })\n      .catch((error) => {\n        console.error(\"Error checking 360Bot Chat login status:\", error);\n      });\n\n    return available;\n  }\n\n  async createChatContext() {\n    return {};\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  // eslint-disable-next-line\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n    let res = \"\";\n    const headers = {\n      accept: \"text/event-stream\",\n      \"content-type\": \"application/json\",\n    };\n    const payload = JSON.stringify({\n      is_regenerate: false,\n      is_so: false,\n      prompt: prompt,\n      role: \"00000001\",\n      source_type: \"prophet_web\",\n    });\n\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\n          \"https://chat.360.com/backend-api/api/common/chat\",\n          {\n            headers,\n            payload,\n          },\n        );\n\n        source.addEventListener(\"200\", (event) => {\n          res += event.data;\n          onUpdateResponse(callbackParam, {\n            content: res,\n            done: true,\n          });\n          resolve();\n        });\n\n        //Get CONVERSATIONID e.g: CONVERSATIONID####f9563471f24a088d\n        source.addEventListener(\"100\", (event) => {\n          context.parentConversationId = event.data.split(\"####\")[1];\n          this.setChatContext(context);\n        });\n\n        //Get MESSAGEID e.g: MESSAGEID####f9563471f24a088ddd34826b527ffdfb\n        source.addEventListener(\"101\", (event) => {\n          context.parentMessageId = event.data.split(\"####\")[1];\n          this.setChatContext(context);\n        });\n\n        //unable to answer the user's question.\n        source.addEventListener(\"40042\", (event) => {\n          res += event.data;\n          onUpdateResponse(callbackParam, {\n            content: res,\n            done: true,\n          });\n        });\n\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          const message = this.getSSEDisplayError(event);\n          reject(message);\n        });\n\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport axios from \"axios\";\n\nimport Bot from \"@/bots/Bot\";\nimport store from \"@/store\";\n\nexport default class SkyWorkBot extends Bot {\n  static _brandId = \"skyWork\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"SkyWorkBot\"; // Class name of the bot\n  static _logoFilename = \"skywork-logo.png\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _loginUrl = \"https://chat.tiangong.cn/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  currentPrompt = \"\"; // Used by createChatContext() only\n\n  constructor() {\n    super();\n  }\n\n  getAuthHeaders() {\n    return {\n      headers: {\n        \"invite-token\": `Bearer ${store.state.skyWork?.inviteToken}`,\n        token: `Bearer ${store.state.skyWork?.token}`,\n      },\n    };\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    let available = false;\n\n    try {\n      const { data } = await axios.post(\n        \"https://api-chat.tiangong.cn/api/v1/user/inviteVerify\",\n        { data: {} },\n        this.getAuthHeaders(),\n      );\n\n      if (data.code === 200) {\n        available = true;\n      } else if (data.code >= 60100) {\n        // Invite token expired, request a new one\n        const { data } = await axios.post(\n          \"https://api-chat.tiangong.cn/api/v1/queue/waitAccess\",\n          { data: { token: \"\" } },\n          this.getAuthHeaders(),\n        );\n        if (data.code === 200 && data.resp_data?.busy_now === false) {\n          await store.commit(\"setSkyWork\", {\n            inviteToken: data.resp_data?.invite_token,\n          });\n          available = true;\n        }\n      }\n    } catch (err) {\n      console.error(\"SkyWork login error:\", err);\n    }\n    return available;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    await this.checkAvailability();\n\n    this.currentPrompt = prompt;\n    const context = await this.getChatContext();\n\n    return new Promise((resolve, reject) => {\n      (async () => {\n        try {\n          // If context.currentMessageId is not empty,\n          // it means a prompt has been sent through createChatContext()\n          let messageId = context.currentMessageId;\n          context.currentMessageId = \"\";\n          this.setChatContext(context);\n          if (!messageId) {\n            await axios\n              .post(\n                \"https://api-chat.tiangong.cn/api/v1/chat/chat\",\n                { data: { content: prompt, session_id: context.sessionId } },\n                this.getAuthHeaders(),\n              )\n              .then((res) => {\n                const data = res.data;\n                if (data.code === 200) {\n                  messageId = data.resp_data?.result_message?.message_id;\n                } else {\n                  console.error(data);\n                  reject(new Error(`${data.code} ${data.code_msg}`));\n                }\n              })\n              .catch((err) => {\n                console.error(err);\n                reject(err);\n              });\n          }\n\n          // Get the response\n          if (messageId) {\n            let done = false;\n            do {\n              // wait 1s\n              await new Promise((resolve) => setTimeout(resolve, 1000));\n              await axios\n                .post(\n                  \"https://api-chat.tiangong.cn/api/v1/chat/getMessage\",\n                  { data: { message_id: messageId } },\n                  this.getAuthHeaders(),\n                )\n                .then((res) => {\n                  const data = res.data;\n                  if (data.code !== 200) {\n                    console.error(data);\n                    reject(new Error(`${data.code} ${data.code_msg}`));\n                  }\n                  const status = data.resp_data?.result_message?.status;\n                  done = status == 3 || status == 6; // 3 - done, 6 - need continue\n                  const content = data.resp_data?.result_message?.content;\n                  if (content) {\n                    onUpdateResponse(callbackParam, { content, done });\n                  }\n                });\n            } while (!done);\n          }\n\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      })();\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    await axios\n      .post(\n        \"https://api-chat.tiangong.cn/api/v1/session/newSession\",\n        { data: { content: this.currentPrompt } },\n        this.getAuthHeaders(),\n      )\n      .then((res) => {\n        const data = res.data;\n        if (data.code === 200) {\n          context = {\n            sessionId: data.resp_data.session_id,\n            currentMessageId: data.resp_data.dialogue?.[1]?.message_id,\n          };\n        }\n      });\n    return context;\n  }\n}\n","import axios from \"axios\";\nimport { SSE } from \"sse.js\";\nimport AsyncLock from \"async-lock\";\n\nimport i18n from \"../i18n\";\nimport Bot from \"./Bot\";\n\nexport default class SparkBot extends Bot {\n  static _brandId = \"spark\";\n  static _className = \"SparkBot\"; // Class name of the bot\n  static _logoFilename = \"spark-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://xinghuo.xfyun.cn/\";\n  static _lock = new AsyncLock(); // All Spark bots share the same lock\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = false;\n    try {\n      const response = await axios.get(\n        \"https://xinghuo.xfyun.cn/iflygpt/userInfo\",\n      );\n      available = response.data.flag;\n    } catch (error) {\n      console.error(\"Error checking Spark login status:\", error);\n    }\n    return available;\n  }\n\n  async createChatContext() {\n    const response = await axios.post(\n      \"https://xinghuo.xfyun.cn/iflygpt/u/chat-list/v1/create-chat-list\",\n      {},\n    );\n\n    if (response.data.flag && response.data.code === 0) {\n      return response.data.data.id;\n    } else {\n      console.error(\"Error creating conversation:\", response.data.desc);\n      return 0;\n    }\n  }\n\n  async getGtToken() {\n    return new Promise((resolve, reject) => {\n      window.initGeeGuard(\n        {\n          appId: \"ihuqg3dmuzcr2kmghumvivsk7c3l4joe\",\n          https: true,\n        },\n        function (t) {\n          if (t.status === \"success\") {\n            resolve(t.data.gee_token);\n          } else {\n            reject(new Error(\"Failed to get GtToken\", t));\n          }\n        },\n      );\n    });\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const chatId = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      (async () => {\n        try {\n          if (chatId === 0) {\n            reject(new Error(i18n.global.t(\"bot.failedToCreateConversation\")));\n          }\n\n          // Create FormData payload\n          const GtToken = await this.getGtToken();\n          const formData = new FormData();\n          formData.append(\"fd\", String(+new Date()).slice(-6));\n          formData.append(\"chatId\", chatId);\n          formData.append(\"text\", prompt);\n          formData.append(\"GtToken\", GtToken);\n          formData.append(\"clientType\", \"1\");\n          formData.append(\"isBot\", \"0\");\n\n          const source = new SSE(\n            \"https://xinghuo.xfyun.cn/iflygpt-chat/u/chat_message/chat\",\n            { payload: formData },\n          );\n\n          let text = \"\";\n          source.addEventListener(\"message\", (event) => {\n            if (event.data === \"<end>\") {\n              onUpdateResponse(callbackParam, { done: true });\n              source.close();\n              resolve();\n            } else if (event.data.slice(-5) === \"<sid>\") {\n              // ignore <sid> message\n              return;\n            } else {\n              let partialText;\n              if (event.data[0] === \"{\") {\n                // JSON data\n                const data = JSON.parse(event.data);\n                partialText = data.descr;\n              } else if (event.data[0] === \"[\") {\n                // [error] or [geeError]\n                partialText = event.data;\n              } else {\n                // Normal data\n                partialText = Buffer.from(event.data, \"base64\").toString(\n                  \"utf8\",\n                );\n              }\n              text += partialText;\n              onUpdateResponse(callbackParam, { content: text, done: false });\n            }\n          });\n\n          source.addEventListener(\"error\", (error) => {\n            source.close();\n            reject(new Error(error.data));\n          });\n\n          source.stream();\n        } catch (error) {\n          console.error(\"Error Spark:\", error);\n          reject(error);\n        }\n      })();\n    });\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport AsyncLock from \"async-lock\";\nimport queryString from \"query-string\";\nimport { SSE } from \"sse.js\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default class YouChatBot extends Bot {\n  static _brandId = \"youChat\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"YouChatBot\"; // Class name of the bot\n  static _logoFilename = \"you-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://you.com/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   * @sideeffect - Set this.constructor._isAvailable\n   */\n  async _checkAvailability() {\n    return true;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  // eslint-disable-next-line\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n    const headers = {\n      accept: \"text/event-stream\",\n    };\n    const payload = {\n      q: prompt,\n      domain: \"youchat\",\n      chatId: context.chatId,\n      queryTraceId: context.chatId,\n      chat: JSON.stringify(context.chatHistory),\n    };\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\n          `https://you.com/api/streamingSearch?${queryString.stringify(\n            payload,\n          )}`,\n          {\n            headers,\n            withCredentials: true,\n          },\n        );\n        let text = \"\";\n        source.addEventListener(\"youChatToken\", (event) => {\n          const data = JSON.parse(event.data);\n          if (data.youChatToken) {\n            text += data.youChatToken;\n            onUpdateResponse(callbackParam, {\n              content: text,\n              done: false,\n            });\n          }\n        });\n        source.addEventListener(\"done\", () => {\n          // save chat question and answer to context\n          this.setChatContext({\n            chatId: context.chatId,\n            chatHistory: [\n              ...context.chatHistory,\n              {\n                question: prompt,\n                answer: text,\n              },\n            ],\n          });\n          onUpdateResponse(callbackParam, {\n            content: text,\n            done: true,\n          });\n          resolve();\n        });\n        source.addEventListener(\"error\", (event) => {\n          console.error(event);\n          reject(this.getSSEDisplayError(event));\n        });\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return { chatId: uuidv4(), chatHistory: [] };\n  }\n}\n","import store from \"@/store\";\nimport LangChainBot from \"../LangChainBot\";\nimport { ChatAnthropic } from \"@langchain/anthropic\";\n\nexport default class ClaudeAPIBot extends LangChainBot {\n  static _brandId = \"claudeApi\";\n  static _className = \"ClaudeAPIBot\";\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = false;\n\n    if (store.state.claudeApi.apiKey) {\n      this.setupModel();\n      available = true;\n    }\n    return available;\n  }\n\n  _setupModel() {\n    const chatModel = new ChatAnthropic({\n      anthropicApiKey: store.state.claudeApi.apiKey,\n      anthropicApiUrl: store.state.claudeApi.alterUrl\n        ? store.state.claudeApi.alterUrl\n        : \"\",\n      maxTokens: store.state.claudeApi.maxTokens,\n      temperature: store.state.claudeApi.temperature,\n      modelName: this.constructor._model ? this.constructor._model : \"\",\n      streaming: true,\n    });\n\n    return chatModel;\n  }\n\n  getPastRounds() {\n    return store.state.claudeApi.pastRounds\n      ? store.state.claudeApiApi.pastRounds\n      : 1;\n  }\n}\n","import LangChainBot from \"@/bots/LangChainBot\";\nimport { ChatBaiduWenxin } from \"@langchain/community/chat_models/baiduwenxin\";\nimport AsyncLock from \"async-lock\";\nimport store from \"@/store\";\n\nexport default class WenxinQianfanBot extends LangChainBot {\n  static _brandId = \"wenxinQianfan\"; // ID of the bot, should be unique\n  static _className = \"WenxinQianfanBot\"; // Class name of the bot\n  static _logoFilename = \"wenxin-qianfan-logo.png\"; // Place it in public/bots/\n  static _model = \"ERNIE-Bot\"; // Model name\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = false;\n    const { apiKey, secretKey } = store.state.wenxinQianfan;\n    if (apiKey && secretKey) {\n      this.setupModel();\n      available = true;\n    }\n    return available;\n  }\n\n  _setupModel() {\n    const { apiKey, secretKey } = store.state.wenxinQianfan;\n    const chatModel = new ChatBaiduWenxin({\n      modelName: this.constructor._model,\n      baiduApiKey: apiKey,\n      baiduSecretKey: secretKey,\n      streaming: true,\n    });\n    return chatModel;\n  }\n\n  getPastRounds() {\n    return store.state.wenxinQianfan.pastRounds;\n  }\n}\n","import LangChainBot from \"../LangChainBot\";\nimport store from \"@/store\";\nimport { ChatCohere } from \"@langchain/cohere\";\n\nexport default class CohereAPIBot extends LangChainBot {\n  static _brandId = \"cohereApi\";\n  static _className = \"CohereAPIBot\";\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = false;\n\n    if (store.state.cohereApi.apiKey) {\n      this.setupModel();\n      available = true;\n    }\n    return available;\n  }\n\n  _setupModel() {\n    const chatModel = new ChatCohere({\n      apiKey: store.state.cohereApi.apiKey,\n      model: this.constructor._model ? this.constructor._model : \"\",\n      streaming: true,\n      temperature: store.state.cohereApi.temperature,\n    });\n\n    return chatModel;\n  }\n\n  getPastRounds() {\n    return store.state.cohereApi.pastRounds\n      ? store.state.cohereApi.pastRounds\n      : 5;\n  }\n}\n","import axios from \"axios\";\nimport Bot from \"../Bot\";\nimport AsyncLock from \"async-lock\";\n\nfunction parseResponse(resp) {\n  let data = JSON.parse(resp.split(\"\\n\")[3]);\n  data = JSON.parse(data[0][2]);\n  if (!data) {\n    throw new Error(\"Failed to parse Bard response\");\n  }\n\n  const ids = [...data[1], data[4][0][0]];\n\n  let text = data[4][0][1][0];\n  const images = data[4][0][4];\n  if (images) {\n    images.forEach((image) => {\n      const url = image[0][0][0];\n      const alt = image[0][4];\n      const link = image[1][0][0];\n      const placeholder = image[2];\n      text = text.replace(\n        placeholder,\n        `[![${alt}](${url})](${link} \"${link}\")`,\n      );\n    });\n  }\n\n  return { text, ids };\n}\n\nfunction generateReq(model, prompt, contextIds) {\n  let modelNumber = model == \"gemini-ultra\" ? 2 : 1;\n  // The JSON is ugly and meaningless, but it works\n  let innerJSON = [\n    [prompt, 0, null, null, null, null, 0],\n    [\"en\"],\n    contextIds,\n    \"\",\n    \"\",\n    null,\n    [1],\n    0,\n    null,\n    null,\n    1,\n    0,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    modelNumber,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    [],\n  ];\n  return JSON.stringify([null, JSON.stringify(innerJSON)]);\n}\n\nexport default class BardBot extends Bot {\n  static _brandId = \"bard\";\n  static _className = \"BardBot\"; // Class name of the bot\n  static _model = \"gemini-pro\"; // gemini-pro or gemini-ultra\n  static _logoFilename = \"gemini-chat-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://gemini.google.com/\";\n  // Remove Electron from the user agent to avoid blank login screen\n  static _userAgent =\n    \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) chatall/1.29.40 Chrome/114.0.5735.134 Safari/537.36\";\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    const context = await this.getChatContext();\n    let available = false;\n\n    if (context.requestParams.atValue) {\n      available = true;\n    }\n\n    return available;\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const context = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      const { requestParams, contextIds } = context;\n\n      axios\n        .post(\n          \"https://gemini.google.com/_/BardChatUi/data/assistant.lamda.BardFrontendService/StreamGenerate\",\n          new URLSearchParams({\n            at: requestParams.atValue,\n            \"f.req\": generateReq(this.constructor._model, prompt, contextIds),\n          }),\n          {\n            params: {\n              bl: requestParams.blValue,\n              _reqid: Math.floor(Math.random() * 900000) + 100000,\n              rt: \"c\",\n            },\n          },\n        )\n        .then(({ data: resp }) => {\n          const { text, ids } = parseResponse(resp);\n          context.contextIds = ids;\n          this.setChatContext(context);\n          onUpdateResponse(callbackParam, { content: text, done: true });\n          resolve();\n        })\n        .catch((error) => {\n          reject(error);\n        });\n    });\n  }\n\n  async createChatContext() {\n    const resp = await axios.get(\"https://gemini.google.com/app\");\n    const atValue = resp.data.match(/\"SNlM0e\":\"([^\"]+)\"/)?.[1];\n    const blValue = resp.data.match(/\"cfb2h\":\"([^\"]+)\"/)?.[1];\n    if (!atValue || !blValue) {\n      throw new Error(\"Failed to fetch Bard at/bl values\");\n    }\n\n    return {\n      requestParams: { atValue, blValue },\n      contextIds: [\"\", \"\", \"\"],\n    };\n  }\n}\n","import LangChainBot from \"@/bots/LangChainBot\";\nimport store from \"@/store\";\nimport { ChatGoogleGenerativeAI } from \"@langchain/google-genai\";\n\nexport default class GeminiAPIBot extends LangChainBot {\n  static _brandId = \"geminiApi\";\n  static _className = \"GeminiAPIBot\";\n  static _logoFilename = \"gemini-1.0-logo.png\"; // Place it in public/bots/\n  static _model = \"gemini-pro\";\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = false;\n\n    if (store.state.geminiApi.apiKey) {\n      this.setupModel();\n      available = true;\n    }\n    return available;\n  }\n\n  getPastRounds() {\n    return store.state.geminiApi.pastRounds;\n  }\n\n  _setupModel() {\n    const chatModel = new ChatGoogleGenerativeAI({\n      apiKey: store.state.geminiApi.apiKey,\n      modelName: this.constructor._model ? this.constructor._model : \"\",\n      temperature: store.state.geminiApi.temperature,\n      streaming: true,\n      topK: store.state.geminiApi.topK,\n      topP: store.state.geminiApi.topP,\n    });\n    return chatModel;\n  }\n}\n","import LangChainBot from \"../LangChainBot\";\nimport store from \"@/store\";\nimport { ChatGroq } from \"@langchain/groq\";\n\nexport default class GroqAPIBot extends LangChainBot {\n  static _brandId = \"groqApi\";\n  static _className = \"GroqAPIBot\";\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = false;\n\n    if (store.state.groqApi.apiKey) {\n      this.setupModel();\n      available = true;\n    }\n    return available;\n  }\n\n  _setupModel() {\n    const chatModel = new ChatGroq({\n      apiKey: store.state.groqApi.apiKey,\n      modelName: this.constructor._model ? this.constructor._model : \"\",\n      streaming: true,\n      temperature: store.state.groqApi.temperature,\n      maxTokens: store.state.groqApi.maxTokens,\n    });\n\n    return chatModel;\n  }\n\n  getPastRounds() {\n    return store.state.groqApi.pastRounds ? store.state.groqApi.pastRounds : 1;\n  }\n}\n","import GradioBot from \"@/bots/huggingface/GradioBot\";\nimport AsyncLock from \"async-lock\";\nimport axios from \"axios\";\nimport store from \"@/store\";\n\nexport default class Falcon180bBot extends GradioBot {\n  static _brandId = \"falcon\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Falcon180bBot\"; // Class name of the bot\n  static _logoFilename = \"falcon-180b-logo.jpeg\"; // Place it in public/bots/\n  static _loginUrl = \"https://tiiuae-falcon-180b-demo.hf.space/\"; // Any Gradio URL\n  static _settingsComponent = \"Falcon180bBotSettings\"; // Vue component filename for settings\n  static _model = \"falcon-180b\";\n  static _lock = new AsyncLock(); // Send requests in queue to save LMSYS\n  static _fnIndexes = [3]; // Indexes of the APIs to call in order. Sniffer it by devtools.\n\n  static _predictUrl = Falcon180bBot._loginUrl + \"run/predict\";\n\n  constructor() {\n    super();\n  }\n\n  sendPredict(fn_index, session_hash, payload) {\n    return axios.post(Falcon180bBot._predictUrl, {\n      fn_index,\n      data: [],\n      event_data: null,\n      session_hash: session_hash,\n      ...payload,\n    });\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    try {\n      const session_hash = await this.getChatContext();\n      await axios.all([\n        this.sendPredict(4, session_hash),\n        this.sendPredict(1, session_hash, {\n          data: [prompt],\n        }),\n      ]);\n      await this.sendPredict(2, session_hash, { data: [null, null] });\n      await super._sendPrompt(prompt, onUpdateResponse, callbackParam);\n      await this.sendPredict(5, session_hash);\n    } catch (error) {\n      throw Error(error);\n    }\n  }\n\n  /* eslint-disable no-unused-vars */\n  makeData(fn_index, prompt) {\n    let r = null;\n    if (fn_index === this.constructor._fnIndexes[0]) {\n      r = [\n        null,\n        null,\n        \"\",\n        store.state.falcon.temperature,\n        store.state.falcon.maxNewTokens,\n        store.state.falcon.topP,\n        store.state.falcon.repetitionPenalty,\n      ];\n    }\n    return r;\n  }\n\n  parseData(fn_index, data) {\n    let r = undefined;\n    if (fn_index === this.constructor._fnIndexes[0]) {\n      r = data[0][data[0].length - 1][1];\n    }\n    return r;\n  }\n\n  parseError(errorMsg) {\n    return errorMsg;\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport GradioBot from \"./GradioBot\";\nimport store from \"@/store\";\n\nexport default class GradioAppBot extends GradioBot {\n  static _className = \"GradioAppBot\"; // Class name of the bot\n  static _loginUrl = \"\";\n  static _settingsComponent = \"GradioAppBotSettings\"; // Vue component filename for settings\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n    this.constructor._loginUrl = store.state.gradio.url;\n    this.constructor._fnIndexes[0] = store.state.gradio.fnIndex;\n  }\n\n  _checkAvailability() {\n    this.constructor._loginUrl = store.state.gradio.url;\n    this.constructor._fnIndexes[0] = store.state.gradio.fnIndex;\n    return super._checkAvailability();\n  }\n\n  makeData(fn_index, prompt) {\n    return Array(prompt);\n  }\n\n  parseData(fn_index, data) {\n    return data[0];\n  }\n}\n","import axios from \"axios\";\nimport Bot from \"@/bots/Bot\";\nimport i18n from \"@/i18n\";\nimport { SSE } from \"sse.js\";\n\nexport default class GradioBot extends Bot {\n  static _brandId = \"gradio\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"GradioBot\"; // Class name of the bot\n  static _logoFilename = \"gradio-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"\"; // Any Gradio URL\n  static _fnIndexes = [0]; // Indexes of the APIs to call in order. Sniffer it by devtools.\n\n  config = {};\n  eventListeners = new Map();\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    let available = false;\n    if (this.constructor._loginUrl !== \"\") {\n      try {\n        // Remove trailing slash\n        this.constructor._loginUrl = this.constructor._loginUrl.replace(\n          /\\/$/,\n          \"\",\n        );\n\n        const response = await axios.get(\n          this.constructor._loginUrl + \"/config\",\n        );\n        this.config = response.data;\n        this.config.path = response.data.path ?? \"\";\n        this.config.root = this.constructor._loginUrl;\n\n        available = true;\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    return available;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    for (const key in this.constructor._fnIndexes) {\n      const fn_index = this.constructor._fnIndexes[key];\n      await this._sendFnIndex(\n        fn_index,\n        prompt,\n        onUpdateResponse,\n        callbackParam,\n      );\n    }\n  }\n\n  async _sendFnIndex(fn_index, prompt, onUpdateResponse, callbackParam) {\n    const config = this.config;\n    const session_hash = await this.getChatContext();\n\n    const joinUrl = new URL(config.root + config.path + \"/queue/join\");\n    const data = this.makeData(fn_index, prompt);\n\n    const streamData = {\n      data,\n      event_data: null,\n      fn_index,\n      session_hash,\n      trigger_id: this._triggerId ?? 0,\n    };\n    const streamContext = await axios.post(joinUrl.toString(), streamData);\n\n    if (streamContext.status !== 200 || !streamContext.data.event_id) {\n      return Promise.reject(\n        i18n.global.t(\"error.failedConnectUrl\", { url: joinUrl }),\n      );\n    }\n\n    return new Promise((resolve, reject) => {\n      try {\n        const dataUrl = new URL(config.root + config.path + \"/queue/data\");\n        dataUrl.searchParams.set(\"session_hash\", session_hash);\n\n        const source = new SSE(dataUrl.toString());\n\n        const onMessageEventHandler = (event) => {\n          const data = JSON.parse(event.data);\n\n          if (data.msg === \"estimation\") {\n            if (data.rank > 0) {\n              // Waiting in queue\n              data.rank_eta = Math.floor(data.rank_eta);\n              onUpdateResponse(callbackParam, {\n                content: i18n.global.t(\"gradio.waiting\", { ...data }),\n                done: false,\n              });\n            }\n          } else if (data.msg === \"process_generating\") {\n            // Generating data\n            if (data.success && data.output.data) {\n              onUpdateResponse(callbackParam, {\n                content: this.parseData(fn_index, data.output.data),\n                done: false,\n              });\n            } else {\n              reject(new Error(data.output.error));\n            }\n          } else if (data.msg === \"process_completed\") {\n            // Done\n            if (data.success && data.output.data) {\n              if (\n                typeof data.output.data[2] !== \"string\" ||\n                data.output.data[2] === \"\"\n              ) {\n                onUpdateResponse(callbackParam, {\n                  content: this.parseData(fn_index, data.output.data),\n                  done: fn_index == this.constructor._fnIndexes.slice(-1), // Only the last one is done\n                });\n              } else {\n                const errorMsg = this.parseError(data.output.data[2]);\n                reject(new Error(errorMsg));\n              }\n            }\n\n            this.removeAllEventListeners(source);\n            source.close();\n            resolve();\n          } else if (data.msg === \"queue_full\") {\n            reject(i18n.global.t(\"gradio.queueFull\"));\n          }\n        };\n\n        const onAbortEventHandler = (event) => {\n          console.log(\"Server-Sent Event closed:\", event);\n          this.removeAllEventListeners(source);\n          source.close();\n          reject(new Error(i18n.global.t(\"error.closedByServer\")));\n        };\n\n        const onErrorEventHandler = (event) => {\n          this.removeAllEventListeners(source);\n          source.close();\n          reject(\n            i18n.global.t(\"error.failedConnectUrl\", { url: event.target.url }),\n          );\n        };\n\n        this.eventListeners.set(\"message\", onMessageEventHandler);\n        this.eventListeners.set(\"error\", onErrorEventHandler);\n        this.eventListeners.set(\"abort\", onAbortEventHandler);\n\n        for (const [eventName, eventHandler] of this.eventListeners) {\n          source.addEventListener(eventName, eventHandler);\n        }\n\n        source.stream();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return Math.random().toString(36).substring(2);\n  }\n\n  parseError(errorMsg) {\n    return errorMsg;\n  }\n\n  removeAllEventListeners(source) {\n    for (const [eventName, eventHandler] of this.eventListeners) {\n      source.removeEventListener(eventName, eventHandler);\n    }\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Bot, { LoginError } from \"@/bots/Bot\";\nimport i18n from \"@/i18n\";\n\nexport default class HuggingChatBot extends Bot {\n  static _brandId = \"huggingChat\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"HuggingChatBot\"; // Class name of the bot\n  static _logoFilename = \"huggingchat-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://huggingface.co/chat/\";\n  static _model = \"OpenAssistant/oasst-sft-6-llama-30b-xor\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    return true; // Support anonymous chat\n  }\n\n  packRequest(prompt) {\n    return {\n      inputs: prompt,\n      id: uuidv4(),\n      is_retry: false,\n      response_id: uuidv4(),\n      web_search: false,\n    };\n  }\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const conversationId = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      (async () => {\n        if (!conversationId) {\n          reject(new Error(i18n.global.t(\"bot.failedToCreateConversation\")));\n        }\n\n        try {\n          const response = await fetch(\n            `${this.constructor._loginUrl}conversation/${conversationId}`,\n            {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify(this.packRequest(prompt)),\n            },\n          );\n\n          if (!response.ok) {\n            const errorData = await response.json();\n            if (\n              errorData.message === \"Exceeded number of messages before login\"\n            ) {\n              reject(new LoginError(errorData.message));\n            } else {\n              reject(new Error(errorData.message || \"Unknown error\"));\n            }\n            return;\n          }\n\n          const reader = response.body.getReader();\n          let text = \"\";\n\n          const processStream = async () => {\n            const { done, value } = await reader.read();\n            if (done) {\n              return;\n            }\n\n            const dataChunk = new TextDecoder().decode(value);\n            // Split the chunk into individual JSON strings\n            const jsonDataArray = dataChunk.split(\"\\n\").filter(Boolean); // filter(Boolean) removes any empty strings\n\n            for (let i = 0; i < jsonDataArray.length; i++) {\n              const jsonData = jsonDataArray[i];\n              const data = JSON.parse(jsonData);\n\n              if (data.type === \"stream\") {\n                text += data.token;\n                onUpdateResponse(callbackParam, { content: text, done: false });\n              } else if (data.type === \"finalAnswer\") {\n                onUpdateResponse(callbackParam, {\n                  content: data.text,\n                  done: true,\n                });\n                return;\n              }\n            }\n            await processStream(); // Continue processing stream\n          };\n\n          await processStream(); // Start processing stream\n          resolve();\n        } catch (error) {\n          if (error.message === \"network error\") {\n            // ignore network error\n          } else {\n            reject(new Error(error.message));\n          }\n        }\n      })();\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let conversationId = \"\";\n    await axios\n      .post(`${this.constructor._loginUrl}conversation`, {\n        model: this.constructor._model,\n      })\n      .then(({ data: resp }) => {\n        conversationId = resp.conversationId;\n      })\n      .catch((error) => {\n        console.error(error);\n        throw error;\n      });\n    return conversationId;\n  }\n}\n","import GeminiAPIBot from \"./GeminiAPIBot\";\n\nexport default class Gemini15ProAPIBot extends GeminiAPIBot {\n  static _className = \"Gemini15ProAPIBot\";\n  static _logoFilename = \"gemini-1.5-logo.png\"; // Place it in public/bots/\n  static _model = \"gemini-1.5-pro-latest\";\n\n  constructor() {\n    super();\n  }\n}\n","import GeminiAPIBot from \"./GeminiAPIBot\";\n\nexport default class Gemini15FlashAPIBot extends GeminiAPIBot {\n  static _className = \"Gemini15FlashAPIBot\";\n  static _logoFilename = \"gemini-1.5-flash-logo.png\";\n  static _model = \"gemini-1.5-flash-latest\";\n\n  constructor() {\n    super();\n  }\n}\n","import ChatGPTBot from \"./ChatGPTBot\";\n\nexport default class ChatGPT35Bot extends ChatGPTBot {\n  static _className = \"ChatGPT35Bot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-35-logo.png\"; // Place it in public/bots/\n  static _model = \"text-davinci-002-render-sha\";\n\n  constructor() {\n    super();\n  }\n}\n","import axios from \"axios\";\nimport ChatGPTBot from \"./ChatGPTBot\";\n\nexport default class ChatGPT4Bot extends ChatGPTBot {\n  static _className = \"ChatGPT4Bot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-4-logo.png\"; // Place it in public/bots/\n  static _model = \"gpt-4\";\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = await super._checkAvailability();\n\n    if (available) {\n      try {\n        const headers = {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${this.accessToken}`,\n        };\n        const response = await axios.get(\n          \"https://chat.openai.com/backend-api/accounts/check\",\n          { headers },\n        );\n        const isPaidSubscriptionActive =\n          response.data.account_plan.is_paid_subscription_active;\n        available = isPaidSubscriptionActive;\n      } catch (error) {\n        console.error(\"Error fetching paid status:\", error);\n        available = false;\n      }\n    }\n\n    return available;\n  }\n}\n","import CohereAPIBot from \"./CohereAPIBot\";\n\nexport default class CohereAPICommandBot extends CohereAPIBot {\n  static _className = \"CohereAPICommandBot\";\n  static _logoFilename = \"cohere-logo.png\";\n  static _model = \"command\";\n  constructor() {\n    super();\n  }\n}\n","import CohereAPIBot from \"./CohereAPIBot\";\n\nexport default class CohereAPICommandLightBot extends CohereAPIBot {\n  static _className = \"CohereAPICommandLightBot\";\n  static _logoFilename = \"cohere-logo.png\";\n  static _model = \"command-light\";\n  constructor() {\n    super();\n  }\n}\n","import CohereAPIBot from \"./CohereAPIBot\";\n\nexport default class CohereAPICommandRBot extends CohereAPIBot {\n  static _className = \"CohereAPICommandRBot\";\n  static _logoFilename = \"cohere-logo.png\";\n  static _model = \"command-r\";\n  constructor() {\n    super();\n  }\n}\n","import CohereAPIBot from \"./CohereAPIBot\";\n\nexport default class CohereAPICommandRPlusBot extends CohereAPIBot {\n  static _className = \"CohereAPICommandRPlusBot\";\n  static _logoFilename = \"cohere-logo.png\";\n  static _model = \"command-r-plus\";\n  constructor() {\n    super();\n  }\n}\n","import CohereAPIBot from \"./CohereAPIBot\";\n\nexport default class CohereAPIAya23Bot extends CohereAPIBot {\n  static _className = \"CohereAPIAya23Bot\";\n  static _logoFilename = \"cohere-logo.png\";\n  static _model = \"c4ai-aya-23\";\n  constructor() {\n    super();\n  }\n}\n","import AsyncLock from \"async-lock\";\n\nimport BingChatBot from \"./BingChatBot\";\n\nexport default class BingChatPreciseBot extends BingChatBot {\n  static _className = \"BingChatPreciseBot\"; // Class name of the bot\n  static _logoFilename = \"bing-precise-logo.png\"; // Place it in public/bots/\n  static _model = \"h3precise\"; // Bing styles: h3imaginative, harmonyv3, h3precise\n  static _lock = new AsyncLock(); // Must process requests in queue\n\n  static _optionsSets = [\n    \"nlu_direct_response_filter\",\n    \"deepleo\",\n    \"disable_emoji_spoken_text\",\n    \"responsible_ai_policy_235\",\n    \"enablemm\",\n    \"dv3sugg\",\n    \"autosave\",\n    \"iyxapbing\",\n    \"iycapbing\",\n    \"h3precise\",\n    \"bicfluxv2\",\n    \"memmidlat\",\n    \"langdtwb\",\n    \"014CB21D\",\n    \"clgalileo\",\n    \"gencontentv3\",\n    \"fluxmemcst\",\n    \"enable_user_consent\",\n  ];\n  static _tone = \"Precise\";\n\n  constructor() {\n    super();\n  }\n}\n","import AsyncLock from \"async-lock\";\n\nimport BingChatBot from \"./BingChatBot\";\n\nexport default class BingChatBalancedBot extends BingChatBot {\n  static _className = \"BingChatBalancedBot\"; // Class name of the bot\n  static _logoFilename = \"bing-balanced-logo.png\"; // Place it in public/bots/\n  static _model = \"galileo\"; // Bing styles: h3imaginative, harmonyv3, h3precise\n  static _lock = new AsyncLock(); // Must process requests in queue\n\n  static _optionsSets = [\n    \"nlu_direct_response_filter\",\n    \"deepleo\",\n    \"disable_emoji_spoken_text\",\n    \"responsible_ai_policy_235\",\n    \"enablemm\",\n    \"dv3sugg\",\n    \"autosave\",\n    \"iyxapbing\",\n    \"iycapbing\",\n    \"galileo\",\n    \"bicfluxv2\",\n    \"memmidlat\",\n    \"langdtwb\",\n    \"014CB21D\",\n    \"saharagenconv5\",\n  ];\n  static _tone = \"Balanced\";\n\n  constructor() {\n    super();\n  }\n}\n","import AsyncLock from \"async-lock\";\n\nimport BingChatBot from \"./BingChatBot\";\n\nexport default class BingChatCreativeBot extends BingChatBot {\n  static _className = \"BingChatCreativeBot\"; // Class name of the bot\n  static _logoFilename = \"bing-creative-logo.png\"; // Place it in public/bots/\n  static _model = \"h3imaginative\"; // Bing styles: h3imaginative, harmonyv3, h3precise\n  static _lock = new AsyncLock(); // Must process requests in queue\n\n  static _optionsSets = [\n    \"nlu_direct_response_filter\",\n    \"deepleo\",\n    \"disable_emoji_spoken_text\",\n    \"responsible_ai_policy_235\",\n    \"enablemm\",\n    \"dv3sugg\",\n    \"autosave\",\n    \"iyxapbing\",\n    \"iycapbing\",\n    \"enable_user_consent\",\n    \"fluxmemcst\",\n    \"h3imaginative\",\n    \"bicfluxv2\",\n    \"memmidlat\",\n    \"langdtwb\",\n    \"014CB21D\",\n    \"clgalileo\",\n    \"gencontentv3\",\n  ];\n  static _tone = \"Creative\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class SageBot extends PoeBot {\n  static _className = \"SageBot\"; // Class name of the bot\n  static _logoFilename = \"sage-logo.webp\"; // Place it in public/bots/\n  static _model = \"capybara\";\n\n  constructor() {\n    super();\n  }\n}\n","import OpenAIAPIBot from \"./OpenAIAPIBot\";\n\nexport default class OpenAIAPI35Bot extends OpenAIAPIBot {\n  static _className = \"OpenAIAPI35Bot\"; // Class name of the bot\n  static _logoFilename = \"openai-35-logo.png\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _model = \"gpt-3.5-turbo\";\n\n  constructor() {\n    super();\n  }\n}\n","import OpenAIAPIBot from \"./OpenAIAPIBot\";\n\nexport default class OpenAIAPI4Bot extends OpenAIAPIBot {\n  static _className = \"OpenAIAPI4Bot\"; // Class name of the bot\n  static _logoFilename = \"openai-4-logo.png\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _model = \"gpt-4\";\n\n  constructor() {\n    super();\n  }\n}\n","import OpenAIAPIBot from \"./OpenAIAPIBot\";\n\nexport default class OpenAIAPI4128KBot extends OpenAIAPIBot {\n  static _className = \"OpenAIAPI4128KBot\"; // Class name of the bot\n  static _logoFilename = \"openai-4-128k-logo.png\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _model = \"gpt-4-turbo\";\n\n  constructor() {\n    super();\n  }\n}\n","import OpenAIAPIBot from \"./OpenAIAPIBot\";\n\nexport default class OpenAIAPI4oBot extends OpenAIAPIBot {\n  static _className = \"OpenAIAPI4oBot\"; // Class name of the bot\n  static _logoFilename = \"openai-4o-logo.png\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _model = \"gpt-4o\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class VicunaBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"VicunaBot\"; // Class name of the bot\n  static _logoFilename = \"vicuna-33b-logo.png\"; // Place it in public/bots/\n  static _model = \"vicuna-33b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class AlpacaBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"AlpacaBot\"; // Class name of the bot\n  static _logoFilename = \"alpaca-logo.png\"; // Place it in public/bots/\n  static _model = \"alpaca-13b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class ClaudeBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"ClaudeBot\"; // Class name of the bot\n  static _logoFilename = \"claude-logo.png\"; // Place it in public/bots/\n  static _model = \"claude-1\";\n\n  constructor() {\n    super();\n  }\n}\n","import Bot from \"@/bots/Bot\";\n\nexport default class DevBot extends Bot {\n  static _brandId = \"dev\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"DevBot\"; // Class name of the bot\n  static _logoFilename = \"default-logo.svg\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _loginUrl = \"http://chatall.ai\";\n  static _isAvailable = true;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    return true;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    return new Promise((resolve, reject) => {\n      // Send the prompt to the bot and call onUpdateResponse() when the response is ready\n      // onUpdateResponse(callbackParam, {content, done})\n      //   callbackParam: Just pass it to onUpdateResponse() as is\n      //   Object.content: Response text from the bot, even if it's not fully complete\n      //   Object.done: true if the response is completed, false otherwise\n      //\n      // When everything is done, call resolve()\n      // If there is an error, call reject(error)\n\n      try {\n        onUpdateResponse(callbackParam, {\n          content: prompt,\n          done: true,\n        });\n        resolve();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return null;\n  }\n}\n","import GroqAPIBot from \"./GroqAPIBot\";\n\nexport default class Gemma7bGroqAPIBot extends GroqAPIBot {\n  static _className = \"Gemma7bGroqAPIBot\";\n  static _logoFilename = \"gemma-7b-it-groq-logo.png\";\n  static _model = \"gemma-7b-it\";\n  constructor() {\n    super();\n  }\n}\n","import GroqAPIBot from \"./GroqAPIBot\";\n\nexport default class Llama38bGroqAPIBot extends GroqAPIBot {\n  static _className = \"Llama38bGroqAPIBot\";\n  static _logoFilename = \"llama-3-8b-groq-logo.png\";\n  static _model = \"llama3-8b-8192\";\n  constructor() {\n    super();\n  }\n}\n","import GroqAPIBot from \"./GroqAPIBot\";\n\nexport default class Llama370bGroqAPIBot extends GroqAPIBot {\n  static _className = \"Llama370bGroqAPIBot\";\n  static _logoFilename = \"llama-3-70b-groq-logo.png\";\n  static _model = \"llama3-70b-8192\";\n  constructor() {\n    super();\n  }\n}\n","import GroqAPIBot from \"./GroqAPIBot\";\n\nexport default class Mixtral8x7bGroqAPIBot extends GroqAPIBot {\n  static _className = \"Mixtral8x7bGroqAPIBot\";\n  static _logoFilename = \"mistral-8x7b-groq-logo.png\";\n  static _model = \"mixtral-8x7b-32768\";\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class ChatGPT35PoeBot extends PoeBot {\n  static _className = \"ChatGPT35PoeBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-35-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"chinchilla\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class ChatGPT4PoeBot extends PoeBot {\n  static _className = \"ChatGPT4PoeBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-4-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"beaver\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class ClaudeInstantPoeBot extends PoeBot {\n  static _className = \"ClaudeInstantPoeBot\"; // Class name of the bot\n  static _logoFilename = \"claude-instant-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"a2\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class ClaudeInstant100kPoeBot extends PoeBot {\n  static _className = \"ClaudeInstant100kPoeBot\"; // Class name of the bot\n  static _logoFilename = \"claude-100k-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"a2_100k\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class ClaudePlusPoeBot extends PoeBot {\n  static _className = \"ClaudePlusPoeBot\"; // Class name of the bot\n  static _logoFilename = \"claude-plus-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"a2_2\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class ChatGPT432kPoeBot extends PoeBot {\n  static _className = \"ChatGPT432kPoeBot\"; // Class name of the bot\n  static _logoFilename = \"gpt-4-32k-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"vizcacha\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class Llama270bPoeBot extends PoeBot {\n  static _className = \"Llama270bPoeBot\"; // Class name of the bot\n  static _logoFilename = \"llama-2-70b-logo.png\"; // Place it in public/bots/\n  static _model = \"llama_2_70b_chat\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class GooglePalm2PoeBot extends PoeBot {\n  static _className = \"GooglePalm2PoeBot\"; // Class name of the bot\n  static _logoFilename = \"google-palm-2.png\"; // Place it in public/bots/\n  static _model = \"acouchy\";\n\n  constructor() {\n    super();\n  }\n}\n","import PoeBot from \"@/bots/poe/PoeBot\";\n\nexport default class CodeLlama34bPoeBot extends PoeBot {\n  static _className = \"CodeLlama34bPoeBot\"; // Class name of the bot\n  static _logoFilename = \"codellama-poe-logo.png\"; // Place it in public/bots/\n  static _model = \"code_llama_34b_instruct\";\n\n  constructor() {\n    super();\n  }\n}\n","import ChatGPT4Bot from \"./ChatGPT4Bot\";\n\nexport default class ChatGPT4MobileBot extends ChatGPT4Bot {\n  static _className = \"ChatGPT4MobileBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-4-mobile-logo.png\"; // Place it in assets/bots/\n  static _model = \"gpt-4-mobile\";\n\n  constructor() {\n    super();\n  }\n}\n","import OpenAIAPIBot from \"./OpenAIAPIBot\";\n\nexport default class OpenAIAPI3516KBot extends OpenAIAPIBot {\n  static _className = \"OpenAIAPI3516KBot\"; // Class name of the bot\n  static _logoFilename = \"openai-35-16k-logo.png\"; // Place it in public/bots/\n  static _isDarkLogo = true; // The main color of logo is dark\n  static _model = \"gpt-3.5-turbo-16k\";\n\n  constructor() {\n    super();\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport WenxinQianfanBot from \"./WenxinQianfanBot\";\n\nexport default class WenxinQianfanTurboBot extends WenxinQianfanBot {\n  static _className = \"WenxinQianfanTurboBot\"; // Class name of the bot\n  static _logoFilename = \"wenxin-qianfan-turbo-logo.png\"; // Place it in public/bots/\n  static _model = \"ERNIE-Bot-turbo\"; // Model name\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n}\n","import HuggingChatBot from \"@/bots/huggingface/HuggingChatBot\";\n\nexport default class Llama2HC70bBot extends HuggingChatBot {\n  static _className = \"Llama2HC70bBot\"; // Class name of the bot\n  static _logoFilename = \"llama-huggingchat-logo.png\"; // Place it in public/bots/\n  static _model = \"meta-llama/Llama-2-70b-chat-hf\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class Llama213bBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Llama213bBot\"; // Class name of the bot\n  static _logoFilename = \"llama-2-13b-logo.png\"; // Place it in public/bots/\n  static _model = \"llama-2-13b-chat\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class Llama27bBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Llama27bBot\"; // Class name of the bot\n  static _logoFilename = \"llama-2-7b-logo.png\"; // Place it in public/bots/\n  static _model = \"llama-2-7b-chat\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class Llama270bBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Llama270bBot\"; // Class name of the bot\n  static _logoFilename = \"llama-2-70b-logo.png\"; // Place it in public/bots/\n  static _model = \"llama-2-70b-chat\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class ChatGLM6bBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"ChatGLM6bBot\"; // Class name of the bot\n  static _logoFilename = \"chatglm2-logo.png\"; // Place it in public/bots/\n  static _model = \"chatglm2-6b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class ChatGLM36bBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"ChatGLM36bBot\"; // Class name of the bot\n  static _logoFilename = \"chatglm3-logo.png\"; // Place it in public/bots/\n  static _model = \"chatglm3-6b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class CodeLlamaBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"CodeLlamaBot\"; // Class name of the bot\n  static _logoFilename = \"codellama-logo.png\"; // Place it in public/bots/\n  static _model = \"codellama-34b-instruct\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class Vicuna7bBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Vicuna7bBot\"; // Class name of the bot\n  static _logoFilename = \"vicuna-7b-logo.png\"; // Place it in public/bots/\n  static _model = \"vicuna-7b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class Vicuna13bBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Vicuna13bBot\"; // Class name of the bot\n  static _logoFilename = \"vicuna-13b-logo.png\"; // Place it in public/bots/\n  static _model = \"vicuna-13b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class Wizardlm13bBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Wizardlm13bBot\"; // Class name of the bot\n  static _logoFilename = \"wizardlm-13b-logo.png\"; // Place it in public/bots/\n  static _model = \"wizardlm-13b\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class Wizardlm70bBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Wizardlm70bBot\"; // Class name of the bot\n  static _logoFilename = \"wizardlm-70b-logo.png\"; // Place it in public/bots/\n  static _model = \"wizardlm-70b\";\n\n  constructor() {\n    super();\n  }\n}\n","import HuggingChatBot from \"@/bots/huggingface/HuggingChatBot\";\n\nexport default class FalconHC180bBot extends HuggingChatBot {\n  static _className = \"FalconHC180bBot\"; // Class name of the bot\n  static _logoFilename = \"falcon-180b-hc-logo.png\"; // Place it in public/bots/\n  static _model = \"tiiuae/falcon-180B-chat\";\n\n  constructor() {\n    super();\n  }\n}\n","import HuggingChatBot from \"@/bots/huggingface/HuggingChatBot\";\n\nexport default class CodeLlamaHCBot extends HuggingChatBot {\n  static _className = \"CodeLlamaHCBot\"; // Class name of the bot\n  static _logoFilename = \"codellama-hc-logo.png\"; // Place it in public/bots/\n  static _model = \"codellama/CodeLlama-34b-Instruct-hf\";\n\n  constructor() {\n    super();\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport WenxinQianfanBot from \"./WenxinQianfanBot\";\n\nexport default class WenxinQianfan4Bot extends WenxinQianfanBot {\n  static _className = \"WenxinQianfan4Bot\"; // Class name of the bot\n  static _logoFilename = \"wenxin-qianfan-4-logo.png\"; // Place it in public/bots/\n  static _model = \"ERNIE-Bot-4\"; // Model name\n  static _lock = new AsyncLock();\n\n  constructor() {\n    super();\n  }\n}\n","import HuggingChatBot from \"@/bots/huggingface/HuggingChatBot\";\n\nexport default class Zephyr7bBot extends HuggingChatBot {\n  static _className = \"Zephyr7bBot\"; // Class name of the bot\n  static _logoFilename = \"zephyr-7b-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://huggingfaceh4-zephyr-chat.hf.space/\";\n  static _model = \"HuggingFaceH4/zephyr-7b-beta\";\n\n  constructor() {\n    super();\n  }\n\n  getFullname() {\n    return \"Zephyr-7B-β\";\n  }\n}\n","import BardBot from \"./BardBot\";\n\nexport default class GeminiAdvBot extends BardBot {\n  static _brandId = \"bard\";\n  static _className = \"GeminiAdvBot\"; // Class name of the bot\n  static _model = \"gemini-ultra\"; // gemini-pro or gemini-ultra\n  static _logoFilename = \"gemini-chat-adv-logo.svg\"; // Place it in public/bots/\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class Gemma7bItBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Gemma7bItBot\"; // Class name of the bot\n  static _logoFilename = \"gemma-7b-it-logo.png\"; // Place it in public/bots/\n  static _model = \"gemma-7b-it\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class Gemma2bItBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Gemma2bItBot\"; // Class name of the bot\n  static _logoFilename = \"gemma-2b-it-logo.png\"; // Place it in public/bots/\n  static _model = \"gemma-2b-it\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class Claude3SonnetBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Claude3SonnetBot\"; // Class name of the bot\n  static _logoFilename = \"claude-3-sonnet-logo.png\"; // Place it in public/bots/\n  static _model = \"claude-3-sonnet-20240229\";\n\n  constructor() {\n    super();\n  }\n}\n","import LMSYSBot from \"./LMSYSBot\";\n\nexport default class Claude3OpusBot extends LMSYSBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"Claude3OpusBot\"; // Class name of the bot\n  static _logoFilename = \"claude-3-opus-logo.png\"; // Place it in public/bots/\n  static _model = \"claude-3-opus-20240229\";\n\n  constructor() {\n    super();\n  }\n}\n","import ChatGLMBot from \"./ChatGLMBot\";\nimport { SSE } from \"sse.js\";\n\nexport default class ChatGLM4Bot extends ChatGLMBot {\n  static _brandId = \"chatGlm\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"ChatGLM4Bot\"; // Class name of the bot\n  static _logoFilename = \"chatglm-4-logo.png\"; // Place it in public/bots/\n  static _model = \"GLM-4\"; // Model name\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    let context = await this.getChatContext();\n    if (context.user_id == null || context.user_id == undefined) {\n      await this._checkAvailability();\n      context = await this.getChatContext();\n    }\n\n    return new Promise((resolve, reject) => {\n      try {\n        const headers = this.getAuthHeader().headers;\n        headers.accept = \"text/event-stream\";\n        headers[\"Content-Type\"] = \"application/json\";\n\n        const source = new SSE(\n          \"https://chatglm.cn/chatglm/backend-api/assistant/stream\",\n          {\n            headers,\n            payload: JSON.stringify({\n              assistant_id: \"65940acff94777010aa6b796\",\n              conversation_id: context.conversation_id || \"\",\n              meta_data: {\n                is_test: false,\n                input_question_type: \"xxxx\",\n                channel: \"\",\n                draft_id: \"\",\n              },\n              messages: [\n                { role: \"user\", content: [{ type: \"text\", text: prompt }] },\n              ],\n            }),\n            withCredentials: true,\n          },\n        );\n\n        let beginning = \"\";\n        source.addEventListener(\"message\", (event) => {\n          let body = \"\";\n          let ending = \"\";\n          let data = JSON.parse(event.data);\n\n          if (!context.conversation_id && data.conversation_id) {\n            context.conversation_id = data.conversation_id;\n            this.setChatContext(context);\n          }\n\n          const response = data.parts?.[0];\n          if (!response || response.role !== \"assistant\") return;\n          const content = response.content[0];\n          if (!content) return;\n\n          // Parse search tool calls\n          if (content.type === \"tool_calls\" && response.status === \"init\") {\n            if (content.tool_calls.name === \"browser\") {\n              const info = content.tool_calls.arguments;\n              if (info.startsWith(\"search\")) {\n                beginning += `> ${info}\\n`;\n              }\n            }\n          } else if (content.type === \"text\") {\n            body = content.text;\n            response.meta_data?.citations?.forEach((citation) => {\n              ending += `> 1. [${citation.metadata.title}](${citation.metadata.url})\\n`;\n            });\n          }\n\n          const done = data.status === \"finish\";\n          onUpdateResponse(callbackParam, {\n            content: `${beginning}\\n${body}\\n${ending}`,\n            done,\n          });\n          done && resolve();\n        });\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return { conversation_id: \"\" };\n  }\n}\n","import ClaudeAPIBot from \"./ClaudeAPIBot\";\n\nexport default class ClaudeAPIOpusBot extends ClaudeAPIBot {\n  static _className = \"ClaudeAPIOpusBot\";\n  static _logoFilename = \"claudeapi-opus-logo.png\";\n  static _model = \"claude-3-opus-20240229\";\n  constructor() {\n    super();\n  }\n}\n","import ClaudeAPIBot from \"./ClaudeAPIBot\";\n\nexport default class ClaudeAPI20Bot extends ClaudeAPIBot {\n  static _className = \"ClaudeAPI20Bot\";\n  static _logoFilename = \"claudeapi-20-logo.png\";\n  static _model = \"claude-2.0\";\n  constructor() {\n    super();\n  }\n}\n","import ClaudeAPIBot from \"./ClaudeAPIBot\";\n\nexport default class ClaudeAPI21Bot extends ClaudeAPIBot {\n  static _className = \"ClaudeAPI21Bot\";\n  static _logoFilename = \"claudeapi-21-logo.png\";\n  static _model = \"claude-2.1\";\n  constructor() {\n    super();\n  }\n}\n","import ClaudeAPIBot from \"./ClaudeAPIBot\";\n\nexport default class ClaudeAPISonnetBot extends ClaudeAPIBot {\n  static _className = \"ClaudeAPISonnetBot\";\n  static _logoFilename = \"claudeapi-sonnet-logo.png\";\n  static _model = \"claude-3-sonnet-20240229\";\n  constructor() {\n    super();\n  }\n}\n","import ClaudeAPIBot from \"./ClaudeAPIBot\";\n\nexport default class ClaudeAPI35SonnetBot extends ClaudeAPIBot {\n  static _className = \"ClaudeAPI35SonnetBot\";\n  static _logoFilename = \"claudeapi-sonnet-logo.png\";\n  static _model = \"claude-3-5-sonnet-20240620\";\n  constructor() {\n    super();\n  }\n}\n","import ClaudeAPIBot from \"./ClaudeAPIBot\";\n\nexport default class ClaudeAPIHaikuBot extends ClaudeAPIBot {\n  static _className = \"ClaudeAPIHaikuBot\";\n  static _logoFilename = \"claudeapi-haiku-logo.png\";\n  static _model = \"claude-3-haiku-20240307\";\n  constructor() {\n    super();\n  }\n}\n","import ClaudeAPIBot from \"./ClaudeAPIBot\";\n\nexport default class ClaudeAPIInstant12Bot extends ClaudeAPIBot {\n  static _className = \"ClaudeAPIInstant12Bot\";\n  static _logoFilename = \"claudeapi-instant-12-logo.png\";\n  static _model = \"claude-instant-1.2\";\n  constructor() {\n    super();\n  }\n}\n","// Bots\nimport GeminiAPIBot from \"@/bots/google/GeminiAPIBot\";\nimport Gemini15ProAPIBot from \"@/bots/google/Gemini15ProAPIBot\";\nimport Gemini15FlashAPIBot from \"@/bots/google/Gemini15FlashAPIBot\";\nimport ChatGPT35Bot from \"@/bots/openai/ChatGPT35Bot\";\nimport ChatGPT4Bot from \"@/bots/openai/ChatGPT4Bot\";\nimport CohereAPICommandBot from \"@/bots/cohere/CohereAPICommandBot\";\nimport CohereAPICommandLightBot from \"@/bots/cohere/CohereAPICommandLightBot\";\nimport CohereAPICommandRBot from \"@/bots/cohere/CohereAPICommandRBot\";\nimport CohereAPICommandRPlusBot from \"@/bots/cohere/CohereAPICommandRPlusBot\";\nimport CohereAPIAya23Bot from \"@/bots/cohere/CohereAPIAya23Bot\";\nimport BingChatPreciseBot from \"@/bots/microsoft/BingChatPreciseBot\";\nimport BingChatBalancedBot from \"@/bots/microsoft/BingChatBalancedBot\";\nimport BingChatCreativeBot from \"@/bots/microsoft/BingChatCreativeBot\";\nimport SageBot from \"@/bots/poe/SageBot\";\nimport SparkBot from \"@/bots/SparkBot\";\nimport BardBot from \"@/bots/google/BardBot\";\nimport OpenAIAPI35Bot from \"@/bots/openai/OpenAIAPI35Bot\";\nimport OpenAIAPI4Bot from \"@/bots/openai/OpenAIAPI4Bot\";\nimport OpenAIAPI4128KBot from \"@/bots/openai/OpenAIAPI4128KBot\";\nimport OpenAIAPI4oBot from \"@/bots/openai/OpenAIAPI4oBot\";\nimport MistralBot from \"./MistralBot\";\nimport MOSSBot from \"@/bots/MOSSBot\";\nimport WenxinQianfanBot from \"@/bots/baidu/WenxinQianfanBot\";\nimport VicunaBot from \"@/bots/lmsys/VicunaBot\";\nimport ChatGLMBot from \"@/bots/zhipu/ChatGLMBot\";\nimport AlpacaBot from \"@/bots/lmsys/AlpacaBot\";\nimport ClaudeBot from \"@/bots/lmsys/ClaudeBot\";\nimport DevBot from \"@/bots/DevBot\";\nimport GradioAppBot from \"@/bots/huggingface/GradioAppBot\";\nimport Gemma7bGroqAPIBot from \"@/bots/groq/Gemma7bGroqAPIBot\";\nimport Llama38bGroqAPIBot from \"@/bots/groq/Llama38bGroqAPIBot\";\nimport Llama370bGroqAPIBot from \"@/bots/groq/Llama370bGroqAPIBot\";\nimport Mixtral8x7bGroqAPIBot from \"@/bots/groq/Mixtral8x7bGroqAPIBot\";\nimport HuggingChatBot from \"@/bots/huggingface/HuggingChatBot\";\nimport QianWenBot from \"./QianWenBot\";\nimport ChatGPT35PoeBot from \"./poe/ChatGPT35PoeBot\";\nimport ChatGPT4PoeBot from \"./poe/ChatGPT4PoeBot\";\nimport ClaudeInstantPoeBot from \"./poe/ClaudeInstantPoeBot\";\nimport ClaudeInstant100kPoeBot from \"./poe/ClaudeInstant100kPoeBot\";\nimport ClaudePlusPoeBot from \"./poe/ClaudePlusPoeBot\";\nimport ChatGPT432kPoeBot from \"./poe/ChatGPT432kPoeBot\";\nimport Llama270bPoeBot from \"./poe/Llama270bPoeBot\";\nimport GooglePalm2PoeBot from \"./poe/GooglePalm2PoeBot\";\nimport CodeLlama34bPoeBot from \"./poe/CodeLlama34bPoeBot\";\nimport SkyWorkBot from \"./SkyWorkBot\";\nimport ChatGPT4MobileBot from \"./openai/ChatGPT4MobileBot\";\nimport OpenAIAPI3516KBot from \"./openai/OpenAIAPI3516KBot\";\nimport AzureOpenAIAPIBot from \"./microsoft/AzureOpenAIAPIBot\";\nimport WenxinQianfanTurboBot from \"./baidu/WenxinQianfanTurboBot\";\nimport YouChatBot from \"./YouChatBot\";\nimport PerplexityBot from \"./PerplexityBot\";\nimport PhindBot from \"./PhindBot\";\nimport PiBot from \"./PiBot\";\nimport Qihoo360AIBrainBot from \"./Qihoo360AIBrainBot\";\nimport CharacterAIBot from \"./CharacterAIBot\";\nimport ClaudeAIBot from \"./ClaudeAIBot\";\nimport Llama2HC70bBot from \"./huggingface/Llama2HC70bBot\";\nimport Llama213bBot from \"./lmsys/Llama213bBot\";\nimport Llama27bBot from \"./lmsys/Llama27bBot\";\nimport Llama270bBot from \"./lmsys/Llama270bBot\";\nimport Falcon180bBot from \"./huggingface/Falcon180bBot\";\nimport ChatGLM6bBot from \"./lmsys/ChatGLM6bBot\";\nimport ChatGLM36bBot from \"./lmsys/ChatGLM36bBot\";\nimport CodeLlamaBot from \"./lmsys/CodeLlamaBot\";\nimport Vicuna7bBot from \"./lmsys/Vicuna7bBot\";\nimport Vicuna13bBot from \"./lmsys/Vicuna13bBot\";\nimport Wizardlm13bBot from \"./lmsys/Wizardlm13bBot\";\nimport Wizardlm70bBot from \"./lmsys/Wizardlm70bBot\";\nimport FalconHC180bBot from \"./huggingface/FalconHC180bBot\";\nimport CodeLlamaHCBot from \"./huggingface/CodeLlamaHCBot\";\nimport WenxinQianfan4Bot from \"./baidu/WenxinQianfan4Bot\";\nimport Zephyr7bBot from \"./huggingface/Zephyr7bBot\";\nimport GeminiAdvBot from \"./google/GeminiAdvBot\";\nimport Gemma7bItBot from \"./lmsys/Gemma7bItBot\";\nimport Gemma2bItBot from \"./lmsys/Gemma2bItBot\";\nimport Claude3SonnetBot from \"./lmsys/Claude3SonnetBot\";\nimport Claude3OpusBot from \"./lmsys/Claude3OpusBot\";\nimport ChatGLM4Bot from \"./zhipu/ChatGLM4Bot\";\nimport KimiBot from \"./moonshot/KimiBot\";\nimport ClaudeAPIOpusBot from \"./anthropic/ClaudeAPIOpusBot\";\nimport ClaudeAPI20Bot from \"./anthropic/ClaudeAPI20Bot\";\nimport ClaudeAPI21Bot from \"./anthropic/ClaudeAPI21Bot\";\nimport ClaudeAPISonnetBot from \"./anthropic/ClaudeAPISonnetBot\";\nimport ClaudeAPI35SonnetBot from \"./anthropic/ClaudeAPI35SonnetBot\";\nimport ClaudeAPIHaikuBot from \"./anthropic/ClaudeAPIHaikuBot\";\nimport ClaudeAPIInstant12Bot from \"./anthropic/ClaudeAPIInstant12Bot\";\n\nconst all = [\n  Qihoo360AIBrainBot.getInstance(),\n  AlpacaBot.getInstance(),\n  SageBot.getInstance(), // Assistant@Poe\n  BingChatCreativeBot.getInstance(),\n  BingChatBalancedBot.getInstance(),\n  BingChatPreciseBot.getInstance(),\n  CharacterAIBot.getInstance(),\n  ChatGLM6bBot.getInstance(),\n  ChatGLM36bBot.getInstance(),\n  ChatGLMBot.getInstance(),\n  ChatGLM4Bot.getInstance(),\n  ClaudeInstantPoeBot.getInstance(),\n  ClaudeInstant100kPoeBot.getInstance(),\n  ClaudeBot.getInstance(),\n  ClaudeAIBot.getInstance(),\n  ClaudePlusPoeBot.getInstance(),\n  Claude3OpusBot.getInstance(),\n  Claude3SonnetBot.getInstance(),\n  ClaudeAPIOpusBot.getInstance(),\n  ClaudeAPISonnetBot.getInstance(),\n  ClaudeAPI35SonnetBot.getInstance(),\n  ClaudeAPIHaikuBot.getInstance(),\n  ClaudeAPI20Bot.getInstance(),\n  ClaudeAPI21Bot.getInstance(),\n  ClaudeAPIInstant12Bot.getInstance(),\n  CodeLlama34bPoeBot.getInstance(),\n  CodeLlamaHCBot.getInstance(),\n  CodeLlamaBot.getInstance(),\n  CohereAPICommandBot.getInstance(),\n  CohereAPICommandLightBot.getInstance(),\n  CohereAPICommandRBot.getInstance(),\n  CohereAPICommandRPlusBot.getInstance(),\n  CohereAPIAya23Bot.getInstance(),\n  WenxinQianfanBot.getInstance(),\n  WenxinQianfanTurboBot.getInstance(),\n  WenxinQianfan4Bot.getInstance(),\n  Falcon180bBot.getInstance(),\n  FalconHC180bBot.getInstance(),\n  BardBot.getInstance(),\n  GeminiAdvBot.getInstance(),\n  GeminiAPIBot.getInstance(),\n  Gemini15ProAPIBot.getInstance(),\n  Gemini15FlashAPIBot.getInstance(),\n  Gemma2bItBot.getInstance(),\n  Gemma7bItBot.getInstance(),\n  AzureOpenAIAPIBot.getInstance(),\n  ChatGPT35Bot.getInstance(),\n  ChatGPT35PoeBot.getInstance(),\n  OpenAIAPI35Bot.getInstance(),\n  OpenAIAPI3516KBot.getInstance(),\n  ChatGPT4Bot.getInstance(),\n  ChatGPT4MobileBot.getInstance(),\n  ChatGPT4PoeBot.getInstance(),\n  OpenAIAPI4Bot.getInstance(),\n  OpenAIAPI4128KBot.getInstance(),\n  OpenAIAPI4oBot.getInstance(),\n  ChatGPT432kPoeBot.getInstance(),\n  GradioAppBot.getInstance(),\n  Gemma7bGroqAPIBot.getInstance(),\n  Llama38bGroqAPIBot.getInstance(),\n  Llama370bGroqAPIBot.getInstance(),\n  Mixtral8x7bGroqAPIBot.getInstance(),\n  KimiBot.getInstance(),\n  Llama27bBot.getInstance(),\n  Llama213bBot.getInstance(),\n  Llama270bPoeBot.getInstance(),\n  Llama270bBot.getInstance(),\n  Llama2HC70bBot.getInstance(),\n  MistralBot.getInstance(),\n  MOSSBot.getInstance(),\n  HuggingChatBot.getInstance(),\n  GooglePalm2PoeBot.getInstance(),\n  PerplexityBot.getInstance(),\n  PhindBot.getInstance(),\n  PiBot.getInstance(),\n  QianWenBot.getInstance(),\n  SkyWorkBot.getInstance(),\n  SparkBot.getInstance(),\n  Vicuna7bBot.getInstance(),\n  Vicuna13bBot.getInstance(),\n  VicunaBot.getInstance(),\n  Wizardlm13bBot.getInstance(),\n  Wizardlm70bBot.getInstance(),\n  Zephyr7bBot.getInstance(),\n  YouChatBot.getInstance(),\n];\n\nconst disabled = [\n  \"ClaudeBot\",\n  \"AlpacaBot\",\n  \"HuggingChatBot\",\n  \"Falcon180bBot\",\n  \"ChatGLM6bBot\",\n  \"ChatGLM36bBot\",\n  \"CodeLlamaBot\",\n  \"Vicuna7bBot\",\n  \"Wizardlm13bBot\",\n];\n\nif (process.env.NODE_ENV !== \"production\") {\n  all.push(DevBot.getInstance());\n}\n\nconst bots = {\n  all,\n  getBotByClassName(className) {\n    return all.find((bot) => bot.getClassname() === className);\n  },\n};\n\ndisabled.forEach((className) => {\n  const bot = bots.getBotByClassName(className);\n  bot?.disable();\n});\n\nexport const botTags = {\n  free: [\n    bots.getBotByClassName(\"BardBot\"),\n    bots.getBotByClassName(\"BingChatBalancedBot\"),\n    bots.getBotByClassName(\"BingChatCreativeBot\"),\n    bots.getBotByClassName(\"BingChatPreciseBot\"),\n    bots.getBotByClassName(\"ChatGLMBot\"),\n    bots.getBotByClassName(\"ChatGLM4Bot\"),\n    bots.getBotByClassName(\"ChatGLM6bBot\"),\n    bots.getBotByClassName(\"ChatGLM36bBot\"),\n    bots.getBotByClassName(\"ChatGPT35Bot\"),\n    bots.getBotByClassName(\"ChatGPT35PoeBot\"),\n    bots.getBotByClassName(\"ClaudeBot\"),\n    bots.getBotByClassName(\"ClaudeInstantPoeBot\"),\n    bots.getBotByClassName(\"GooglePalm2PoeBot\"),\n    bots.getBotByClassName(\"CodeLlama34bPoeBot\"),\n    bots.getBotByClassName(\"HuggingChatBot\"),\n    bots.getBotByClassName(\"Llama27bBot\"),\n    bots.getBotByClassName(\"Llama213bBot\"),\n    bots.getBotByClassName(\"Llama270bBot\"),\n    bots.getBotByClassName(\"Llama2HC70bBot\"),\n    bots.getBotByClassName(\"CodeLlamaBot\"),\n    bots.getBotByClassName(\"CodeLlamaHCBot\"),\n    bots.getBotByClassName(\"MistralBot\"),\n    bots.getBotByClassName(\"MOSSBot\"),\n    bots.getBotByClassName(\"Qihoo360AIBrainBot\"),\n    bots.getBotByClassName(\"QianWenBot\"),\n    bots.getBotByClassName(\"SkyWorkBot\"),\n    bots.getBotByClassName(\"SparkBot\"),\n    bots.getBotByClassName(\"YouChatBot\"),\n    bots.getBotByClassName(\"GradioAppBot\"),\n    bots.getBotByClassName(\"AlpacaBot\"),\n    bots.getBotByClassName(\"VicunaBot\"),\n    bots.getBotByClassName(\"Vicuna7bBot\"),\n    bots.getBotByClassName(\"Vicuna13bBot\"),\n    bots.getBotByClassName(\"CharacterAIBot\"),\n    bots.getBotByClassName(\"ClaudeAIBot\"),\n    bots.getBotByClassName(\"PerplexityBot\"),\n    bots.getBotByClassName(\"PhindBot\"),\n    bots.getBotByClassName(\"PiBot\"),\n    bots.getBotByClassName(\"SageBot\"),\n    bots.getBotByClassName(\"Falcon180bBot\"),\n    bots.getBotByClassName(\"Wizardlm13bBot\"),\n    bots.getBotByClassName(\"Wizardlm70bBot\"),\n    bots.getBotByClassName(\"FalconHC180bBot\"),\n    bots.getBotByClassName(\"Zephyr7bBot\"),\n    bots.getBotByClassName(\"Gemma2bItBot\"),\n    bots.getBotByClassName(\"Gemma7bItBot\"),\n    bots.getBotByClassName(\"Claude3SonnetBot\"),\n    bots.getBotByClassName(\"Claude3OpusBot\"),\n    bots.getBotByClassName(\"KimiBot\"),\n  ],\n  paid: [\n    bots.getBotByClassName(\"ChatGPT4Bot\"),\n    bots.getBotByClassName(\"ChatGPT4MobileBot\"),\n    bots.getBotByClassName(\"ChatGPT4PoeBot\"),\n    bots.getBotByClassName(\"ClaudeInstant100kPoeBot\"),\n    bots.getBotByClassName(\"ClaudePlusPoeBot\"),\n    bots.getBotByClassName(\"ChatGPT432kPoeBot\"),\n    bots.getBotByClassName(\"GeminiAdvBot\"),\n  ],\n  openSource: [\n    bots.getBotByClassName(\"AlpacaBot\"),\n    bots.getBotByClassName(\"HuggingChatBot\"),\n    bots.getBotByClassName(\"Llama27bBot\"),\n    bots.getBotByClassName(\"Llama213bBot\"),\n    bots.getBotByClassName(\"Llama270bBot\"),\n    bots.getBotByClassName(\"Llama270bPoeBot\"),\n    bots.getBotByClassName(\"Llama2HC70bBot\"),\n    bots.getBotByClassName(\"MOSSBot\"),\n    bots.getBotByClassName(\"VicunaBot\"),\n    bots.getBotByClassName(\"Vicuna7bBot\"),\n    bots.getBotByClassName(\"Vicuna13bBot\"),\n    bots.getBotByClassName(\"Falcon180bBot\"),\n    bots.getBotByClassName(\"ChatGLM6bBot\"),\n    bots.getBotByClassName(\"ChatGLM36bBot\"),\n    bots.getBotByClassName(\"CodeLlamaBot\"),\n    bots.getBotByClassName(\"CodeLlamaHCBot\"),\n    bots.getBotByClassName(\"CodeLlama34bPoeBot\"),\n    bots.getBotByClassName(\"Wizardlm13bBot\"),\n    bots.getBotByClassName(\"Wizardlm70bBot\"),\n    bots.getBotByClassName(\"FalconHC180bBot\"),\n    bots.getBotByClassName(\"Zephyr7bBot\"),\n    bots.getBotByClassName(\"Gemma2bItBot\"),\n    bots.getBotByClassName(\"Gemma7bItBot\"),\n    bots.getBotByClassName(\"Claude3SonnetBot\"),\n    bots.getBotByClassName(\"Claude3OpusBot\"),\n  ],\n  api: [\n    bots.getBotByClassName(\"GeminiAPIBot\"),\n    bots.getBotByClassName(\"Gemini15ProAPIBot\"),\n    bots.getBotByClassName(\"Gemini15FlashAPIBot\"),\n    bots.getBotByClassName(\"AzureOpenAIAPIBot\"),\n    bots.getBotByClassName(\"OpenAIAPI35Bot\"),\n    bots.getBotByClassName(\"OpenAIAPI3516KBot\"),\n    bots.getBotByClassName(\"OpenAIAPI4Bot\"),\n    bots.getBotByClassName(\"OpenAIAPI4128KBot\"),\n    bots.getBotByClassName(\"OpenAIAPI4oBot\"),\n    bots.getBotByClassName(\"WenxinQianfanBot\"),\n    bots.getBotByClassName(\"WenxinQianfanTurboBot\"),\n    bots.getBotByClassName(\"WenxinQianfan4Bot\"),\n    bots.getBotByClassName(\"ClaudeAPI20Bot\"),\n    bots.getBotByClassName(\"ClaudeAPI21Bot\"),\n    bots.getBotByClassName(\"ClaudeAPIHaikuBot\"),\n    bots.getBotByClassName(\"ClaudeAPIInstant12Bot\"),\n    bots.getBotByClassName(\"ClaudeAPIOpusBot\"),\n    bots.getBotByClassName(\"ClaudeAPISonnetBot\"),\n    bots.getBotByClassName(\"ClaudeAPI35SonnetBot\"),\n    bots.getBotByClassName(\"CohereAPICommandBot\"),\n    bots.getBotByClassName(\"CohereAPICommandLightBot\"),\n    bots.getBotByClassName(\"CohereAPICommandRBot\"),\n    bots.getBotByClassName(\"CohereAPICommandRPlusBot\"),\n    bots.getBotByClassName(\"CohereAPIAya23Bot\"),\n    bots.getBotByClassName(\"Gemma7bGroqAPIBot\"),\n    bots.getBotByClassName(\"Llama38bGroqAPIBot\"),\n    bots.getBotByClassName(\"Llama370bGroqAPIBot\"),\n    bots.getBotByClassName(\"Mixtral8x7bGroqAPIBot\"),\n  ],\n  madeInChina: [\n    bots.getBotByClassName(\"Qihoo360AIBrainBot\"),\n    bots.getBotByClassName(\"QianWenBot\"),\n    bots.getBotByClassName(\"SkyWorkBot\"),\n    bots.getBotByClassName(\"SparkBot\"),\n    bots.getBotByClassName(\"WenxinQianfanBot\"),\n    bots.getBotByClassName(\"WenxinQianfanTurboBot\"),\n    bots.getBotByClassName(\"WenxinQianfan4Bot\"),\n    bots.getBotByClassName(\"MOSSBot\"),\n    bots.getBotByClassName(\"ChatGLMBot\"),\n    bots.getBotByClassName(\"ChatGLM4Bot\"),\n    bots.getBotByClassName(\"ChatGLM6bBot\"),\n    bots.getBotByClassName(\"ChatGLM36bBot\"),\n    bots.getBotByClassName(\"KimiBot\"),\n  ],\n};\nexport default bots;\n","import AsyncLock from \"async-lock\";\nimport GradioBot from \"@/bots/huggingface/GradioBot\";\n\nexport default class LMSYSBot extends GradioBot {\n  static _brandId = \"lmsys\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"LMSYSBot\"; // Class name of the bot\n  static _logoFilename = \"lmsys-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://chat.lmsys.org/\"; // Any Gradio URL\n  static _settingsComponent = \"LMSYSBotSettings\"; // Vue component filename for settings\n  static _model = \"\";\n  static _outputFormat = \"html\"; // \"markdown\" or \"html\"\n  static _lock = new AsyncLock(); // Send requests in queue to save LMSYS\n\n  static _fnIndexes = [41, 42]; // Indexes of the APIs to call in order. Sniffer it by devtools.\n  _triggerId = 93; // From devtools\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = await super._checkAvailability();\n    if (available) {\n      this._sendFnIndex(43, \"\", () => {}, 0); // Refresh the session\n    }\n    return available;\n  }\n\n  makeData(fn_index, prompt) {\n    let r = null;\n    if (fn_index === this.constructor._fnIndexes[0]) {\n      r = [null, this.constructor._model, prompt, null];\n    } else if (fn_index === this.constructor._fnIndexes[1]) {\n      r = [null, 0.7, 1, 512];\n    } else if (fn_index === 43) {\n      r = [{}];\n    }\n    return r;\n  }\n\n  parseData(fn_index, data) {\n    let r = undefined;\n    if (fn_index === this.constructor._fnIndexes[1]) {\n      const dataOne = data[1];\n\n      if (dataOne.length > 0) {\n        const dataTwo = dataOne[dataOne.length - 1];\n        const dataThree = dataTwo[dataTwo.length - 1];\n        r = dataThree;\n      }\n    }\n    if (!r) r = \"\"; // Sometimes the result from data[] is null\n    return r;\n  }\n\n  parseError(errorMsg) {\n    if (errorMsg.includes(\"REFRESH THIS PAGE\")) {\n      errorMsg = errorMsg.replace(\n        \"REFRESH THIS PAGE\",\n        `<a href=\"${this.constructor._loginUrl}\" target=\"innerWindow\">REFRESH THIS PAGE</a>`,\n      );\n\n      // Refresh the session too\n      const context = this.createChatContext();\n      this.setChatContext(context);\n    }\n    return errorMsg;\n  }\n}\n","import LangChainBot from \"@/bots/LangChainBot\";\nimport store from \"@/store\";\nimport { ChatOpenAI } from \"@langchain/openai\";\n\nexport default class AzureOpenAIAPIBot extends LangChainBot {\n  static _brandId = \"azureOpenaiApi\";\n  static _className = \"AzureOpenAIAPIBot\";\n  static _logoFilename = \"azure-openai-logo.png\";\n  static _isDarkLogo = true; // The main color of logo is dark\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = false;\n    if (\n      store.state.azureOpenaiApi.azureApiKey &&\n      store.state.azureOpenaiApi.azureApiInstanceName &&\n      store.state.azureOpenaiApi.azureOpenAIApiDeploymentName &&\n      store.state.azureOpenaiApi.azureOpenAIApiVersion\n    ) {\n      this.setupModel();\n      available = true;\n    }\n    return available;\n  }\n\n  _setupModel() {\n    const chatModel = new ChatOpenAI({\n      azureOpenAIApiKey: store.state.azureOpenaiApi.azureApiKey,\n      azureOpenAIApiInstanceName:\n        store.state.azureOpenaiApi.azureApiInstanceName,\n      azureOpenAIApiDeploymentName:\n        store.state.azureOpenaiApi.azureOpenAIApiDeploymentName,\n      azureOpenAIApiVersion: store.state.azureOpenaiApi.azureOpenAIApiVersion,\n      temperature: store.state.azureOpenaiApi.temperature,\n      streaming: true,\n    });\n    return chatModel;\n  }\n\n  getPastRounds() {\n    return store.state.azureOpenaiApi.pastRounds;\n  }\n}\n","import Bot, { LoginError } from \"@/bots/Bot\";\nimport axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport WebSocketAsPromised from \"websocket-as-promised\";\nimport i18n from \"@/i18n\";\n\nexport default class BingChatBot extends Bot {\n  static _brandId = \"bingChat\";\n  static _className = \"BingChatBot\"; // Class name of the bot\n  static _model = \"h3precise\"; // Bing styles: h3imaginative, harmonyv3, h3precise\n  static _logoFilename = \"bing-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://copilot.microsoft.com/\";\n  static _optionsSets = null; // Set by the subclass\n  static _tone = \"\"; // Set by the subclass\n\n  constructor() {\n    super();\n  }\n\n  async createChatContext() {\n    const headers = {\n      \"x-ms-client-request-id\": uuidv4(),\n      \"x-ms-useragent\":\n        \"azsdk-js-api-client-factory/1.0.0-beta.1 core-rest-pipeline/1.12.3 OS/macOS\",\n    };\n    let conversation = null;\n\n    const response = await axios.get(\n      \"https://copilot.microsoft.com/turing/conversation/create\",\n      { headers },\n    );\n    if (response.status == 200 && response.data?.result?.value == \"Success\") {\n      // Save the conversation context\n      conversation = {\n        clientId: response.data.clientId,\n        conversationId: response.data.conversationId,\n        conversationSignature:\n          response.data.conversationSignature ??\n          response.headers[\"x-sydney-conversationsignature\"],\n        secAccessToken:\n          response.headers[\"x-sydney-encryptedconversationsignature\"],\n        invocationId: 0,\n      };\n    } else {\n      console.error(\"Error creating Copilot conversation:\", response);\n      throw new Error(\n        i18n.global.t(\"bot.failedToCreateConversation\") + \" \" + response.data,\n      );\n    }\n\n    return conversation;\n  }\n\n  async _checkAvailability() {\n    let available = false;\n\n    await axios\n      .get(\"https://copilot.microsoft.com/turing/conversation/chats\")\n      .then((response) => {\n        available =\n          response.data?.result?.value == \"Success\" &&\n          !this.isAnonymous(response.data?.clientId); // Anonymous user is not supported any more\n\n        // If login user is changed, clear the chat context\n        const context = this.getChatContext(false);\n        if (response.data?.clientId != context?.clientId) {\n          this.setChatContext(null);\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error checking Copilot login status:\", error);\n      });\n\n    return available;\n  }\n\n  async makePromptRequest(prompt) {\n    const context = await this.getChatContext();\n    const uuid = uuidv4();\n    return {\n      arguments: [\n        {\n          source: \"cib\",\n          optionsSets: this.constructor._optionsSets,\n          allowedMessageTypes: [\"Chat\", \"InternalSearchQuery\"],\n          sliceIds: [\n            \"tnamobcf\",\n            \"adssqovr\",\n            \"inlineadsv2\",\n            \"inlineadscont\",\n            \"1542\",\n            \"1211enbackfix\",\n            \"cmcallcf\",\n            \"ctvismctrl\",\n            \"sydtransview\",\n            \"exptonecf\",\n            \"bgstream\",\n            \"abv2cl\",\n            \"1215persc\",\n            \"0212boptpsc\",\n            \"14bicfluxv2\",\n            \"111mem\",\n            \"116langwb\",\n            \"0124dv1s0\",\n            \"0126hpctas0\",\n            \"1pgptwdess0\",\n          ],\n          verbosity: \"verbose\",\n          scenario: \"SERP\",\n          plugins: [],\n          isStartOfSession: context.invocationId === 0,\n          requestId: uuid,\n          message: {\n            timestamp: new Date().toISOString(),\n            author: \"user\",\n            inputMethod: \"Keyboard\",\n            text: prompt,\n            messageType: \"Chat\",\n            requestId: uuid,\n            messageId: uuid,\n          },\n          tone: this.constructor._tone,\n          conversationSignature: context.conversationSignature, // TODO: test if this is needed when secAccessToken is set\n          participant: { id: context.clientId },\n          spokenTextMode: \"None\",\n          conversationId: context.conversationId,\n        },\n      ],\n      invocationId: context.invocationId.toString(),\n      target: \"chat\",\n      type: 4,\n    };\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    let context = await this.getChatContext();\n    return new Promise((resolve, reject) => {\n      try {\n        const seperator = String.fromCharCode(30);\n        // If secAccessToken is not set, use the old way to pass conversationSignature\n        const url = context.secAccessToken\n          ? `wss://sydney.bing.com/sydney/ChatHub?sec_access_token=${encodeURIComponent(\n              context.secAccessToken,\n            )}`\n          : \"wss://sydney.bing.com/sydney/ChatHub\";\n        const wsp = new WebSocketAsPromised(url, {\n          packMessage: (data) => {\n            return JSON.stringify(data) + seperator;\n          },\n          unpackMessage: (data) => {\n            return data\n              .toString()\n              .split(seperator)\n              .filter(Boolean)\n              .map((r) => JSON.parse(r));\n          },\n        });\n\n        wsp.onOpen.addListener(() => {\n          wsp.sendPacked({ protocol: \"json\", version: 1 });\n        });\n\n        let beginning = \"\";\n        let body = \"\";\n        let ending = \"\";\n        wsp.onUnpackedMessage.addListener(async (events) => {\n          try {\n            for (const event of events) {\n              if (JSON.stringify(event) === \"{}\") {\n                wsp.sendPacked({ type: 6 });\n                wsp.sendPacked(await this.makePromptRequest(prompt));\n                context.invocationId += 1;\n                this.setChatContext(context);\n              } else if (event.type === 6) {\n                wsp.sendPacked({ type: 6 });\n              } else if (event.type === 3) {\n                onUpdateResponse(callbackParam, { done: true });\n                wsp.removeAllListeners();\n                wsp.close();\n                resolve();\n              } else if (event.type === 2) {\n                if (event.item.result.value !== \"Success\") {\n                  console.error(\"Error sending prompt to Copilot:\", event);\n                  if (event.item.result.value === \"InvalidSession\") {\n                    // Create a new conversation and retry\n                    context = await this.createChatContext();\n                    this.setChatContext(context);\n                    this._sendPrompt(prompt, onUpdateResponse, callbackParam);\n                    reject(\n                      new Error(i18n.global.t(\"bot.creatingConversation\")),\n                    );\n                  } else if (event.item.result.value === \"Throttled\") {\n                    if (this.isAnonymous(context.clientId)) {\n                      reject(new LoginError(event.item.result.message));\n                      this.setChatContext(null);\n                    } else {\n                      reject(new Error(event.item.result.message));\n                    }\n                  } else if (event.item.result.value === \"CaptchaChallenge\") {\n                    const url = \"https://www.bing.com/turing/captcha/challenge\";\n                    onUpdateResponse(callbackParam, {\n                      content: i18n.global.t(\"bingChat.solveCaptcha\", {\n                        attributes: `href=\"${url}\" title=\"${url}\" target=\"innerWindow\"`,\n                      }),\n                      format: \"html\",\n                      done: false,\n                    });\n                  } else {\n                    reject(\n                      new Error(\n                        `${event.item.result.message} (${event.item.result.value})`,\n                      ),\n                    );\n                  }\n                } else if (\n                  event.item.throttling.maxNumUserMessagesInConversation ===\n                  event.item.throttling.numUserMessagesInConversation\n                ) {\n                  // Max number of messages reached\n                  context = await this.createChatContext();\n                  this.setChatContext(context);\n                }\n                wsp.removeAllListeners();\n                wsp.close();\n                resolve();\n              } else if (event.type === 1) {\n                // Content response\n                if (event.arguments[0].messages?.length > 0) {\n                  const message = event.arguments[0].messages[0];\n                  if (message.messageType === \"InternalSearchQuery\") {\n                    beginning += \"> \" + message.text + \"\\n\";\n                  } else {\n                    body = message.adaptiveCards[0]?.body[0]?.text;\n                    const moreLinks = message.adaptiveCards[0]?.body[1]?.text;\n                    if (moreLinks !== undefined) {\n                      ending = `> ${moreLinks}`;\n                    }\n                  }\n                  onUpdateResponse(callbackParam, {\n                    content: `${beginning}\\n${body}\\n${ending}`,\n                    done: false,\n                  });\n                }\n              } else if (event.type === 7) {\n                wsp.removeAllListeners();\n                wsp.close();\n                reject(new Error(event.error));\n              } else {\n                console.warn(\"Unknown Copilot response:\", event);\n              }\n            }\n          } catch (error) {\n            reject(error);\n          }\n        });\n\n        wsp.onError.addListener((event) => {\n          wsp.removeAllListeners();\n          wsp.close();\n          reject(\n            new Error(\n              i18n.global.t(\"error.failedConnectUrl\", {\n                url: event.target.url,\n              }),\n            ),\n          );\n        });\n\n        wsp.onClose.addListener(() => {\n          onUpdateResponse(callbackParam, { done: true });\n        });\n\n        wsp.open();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  isAnonymous(clientId) {\n    return clientId.length > 30; // TODO: find a better way to check if anonymous\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport Bot from \"@/bots/Bot\";\nimport axios from \"axios\";\nimport store from \"@/store\";\nimport { SSE } from \"sse.js\";\nimport i18n from \"@/i18n\";\n\nexport default class KimiBot extends Bot {\n  static _brandId = \"kimi\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"KimiBot\"; // Class name of the bot\n  static _logoFilename = \"kimi-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://kimi.moonshot.cn/\";\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  getAuthHeader() {\n    return {\n      headers: {\n        Authorization: `Bearer ${store.state.kimi?.access_token}`,\n      },\n    };\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    let available = false;\n    try {\n      await this.refreshTokens();\n      available = true;\n    } catch (e) {\n      available = false;\n      console.error(\"Error checking Kimi login status:\", e);\n    }\n    return available;\n  }\n\n  async refreshTokens() {\n    let refreshUrl = \"https://kimi.moonshot.cn/api/auth/token/refresh\";\n    return await axios\n      .get(refreshUrl, {\n        headers: {\n          Authorization: `Bearer ${store.state.kimi?.refresh_token}`,\n        },\n      })\n      .then((response) => {\n        store.commit(\"setKimi\", {\n          access_token: response.data?.access_token,\n          refresh_token: response.data?.refresh_token,\n        });\n      });\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    let context = await this.getChatContext();\n\n    return new Promise((resolve, reject) => {\n      const headers = this.getAuthHeader().headers;\n      headers[\"Content-Type\"] = \"application/json\";\n      try {\n        const source = new SSE(\n          `https://kimi.moonshot.cn/api/chat/${context.chat}/completion/stream`,\n          {\n            headers,\n            payload: JSON.stringify({\n              messages: [\n                {\n                  role: \"user\",\n                  content: prompt,\n                },\n              ],\n              refs: [],\n              use_search: true,\n            }),\n            withCredentials: true,\n          },\n        );\n\n        let beginning = \"\";\n        let body = \"\";\n        source.addEventListener(\"message\", (event) => {\n          const data = JSON.parse(event.data);\n\n          if (data.event === \"search_plus\") {\n            if (data.msg?.type == \"start_res\")\n              beginning += `> ${i18n.global.t(\"kimi.searching\")}\\n`;\n            else if (data.msg?.type === \"get_res\")\n              beginning += `> ${i18n.global.t(\"kimi.found\", { num: data.msg.successNum })}[${data.msg.title}](${data.msg.url})\\n`;\n          } else if (data.event === \"cmpl\") {\n            body += data.text;\n          }\n\n          if (data.event === \"all_done\") {\n            onUpdateResponse(callbackParam, {\n              content: `${beginning}\\n${body}`,\n              done: true,\n            });\n            resolve();\n          } else {\n            onUpdateResponse(callbackParam, {\n              content: `${beginning}\\n${body}`,\n              done: false,\n            });\n          }\n        });\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    await axios\n      .post(\n        \"https://kimi.moonshot.cn/api/chat\",\n        {\n          is_example: false,\n          name: \"ChatALL\",\n        },\n        this.getAuthHeader(),\n      )\n      .then((response) => {\n        context = {\n          chat: response.data?.id,\n        };\n      })\n      .catch((error) => {\n        console.error(\"Error Kimi createChatContext \", error);\n      });\n    return context;\n  }\n}\n","import axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { SSE } from \"sse.js\";\nimport AsyncLock from \"async-lock\";\n\nimport Bot from \"@/bots/Bot\";\nimport store from \"@/store\";\n\n// Inspired by https://v2ex.com/t/926890\nconst REFRESH_SESSION_URL =\n  \"https://chat.openai.com/_next/static/k9OKjvwgjWES7JT3k-6g9/_ssgManifest.js\";\n\nexport default class ChatGPTBot extends Bot {\n  static _brandId = \"chatGpt\";\n  static _className = \"ChatGPTBot\"; // Class name of the bot\n  static _logoFilename = \"chatgpt-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://chat.openai.com/\";\n  // Remove Electron from the user agent to avoid blank login screen of Google\n  static _userAgent =\n    \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) chatall/1.29.40 Chrome/114.0.5735.134 Safari/537.36\";\n  static _model = \"\";\n  static _lock = new AsyncLock(); // All ChatGPT bots share the same lock\n\n  static _sessionRefreshing = {\n    interval: 0,\n    id: null,\n  };\n\n  static _arkoseScriptLoaded = false;\n  static _myEnforcement = null;\n  static _arkosePromise = null;\n\n  accessToken = \"\";\n\n  constructor() {\n    super();\n    this.setRefreshCycle(store.state.chatgpt.refreshCycle);\n  }\n\n  async _checkAvailability() {\n    let available = false;\n\n    try {\n      const response = await axios.get(\n        \"https://chat.openai.com/api/auth/session\",\n      );\n      if (!response.data?.error && response.data?.accessToken) {\n        this.accessToken = response.data.accessToken;\n        available = true;\n      }\n    } catch (error) {\n      console.error(\"Error checking ChatGPT login status:\", error);\n    }\n\n    if (available) {\n      this.loadArkoseScript();\n    }\n    // Toggle periodic session refreshing based on login status\n    this.toggleSessionRefreshing(available);\n\n    return available;\n  }\n\n  async createChatContext() {\n    return { conversationId: undefined, parentMessageId: uuidv4() };\n  }\n\n  refreshSession() {\n    axios.get(REFRESH_SESSION_URL).catch((error) => {\n      // the REFRESH_SESSION_URL always returns a 404 error\n      // if 403, then the session has expired\n      if (error.response && error.response.status === 403) {\n        this.constructor._isAvailable = false;\n        this.toggleSessionRefreshing(false);\n      }\n    });\n  }\n\n  /**\n   * @param {int} cycle - Refresh cycle in seconds\n   */\n  setRefreshCycle(cycle) {\n    const sr = this.constructor._sessionRefreshing;\n    sr.interval = cycle * 1000;\n    this.toggleSessionRefreshing(sr.interval > 0);\n  }\n\n  toggleSessionRefreshing(shouldRefresh) {\n    const sr = this.constructor._sessionRefreshing;\n\n    if (sr.id) {\n      clearInterval(sr.id);\n      sr.id = null;\n    }\n\n    if (shouldRefresh && sr.interval > 0) {\n      this.refreshSession();\n      sr.id = setInterval(this.refreshSession.bind(this), sr.interval);\n    }\n  }\n\n  loadArkoseScript() {\n    // Append the Arkose JS tag to the Document Body. Reference https://github.com/ArkoseLabs/arkose-examples/blob/main/vue-example/src/components/Arkose.vue\n    if (!ChatGPTBot._arkoseScriptLoaded) {\n      ChatGPTBot._arkoseScriptLoaded = true;\n      console.log(\"Loading Arkose API Script\", this.getFullname());\n      const script = document.createElement(\"script\");\n      script.type = \"text/javascript\";\n      script.src =\n        \"https://tcr9i.chat.openai.com/v2/35536E1E-65B4-4D96-9D97-6ADB7EFF8147/api.js\";\n      script.setAttribute(\"data-callback\", \"setupEnforcement\");\n      script.async = true;\n      script.defer = true;\n      document.body.appendChild(script);\n\n      script.onload = () => {\n        console.log(\"Arkose API Script loaded\");\n        window.setupEnforcement = this.setupEnforcement.bind(this);\n      };\n      script.onerror = () => {\n        console.log(\"Could not load the Arkose API Script!\");\n      };\n    }\n  }\n\n  setupEnforcement(myEnforcement) {\n    ChatGPTBot._myEnforcement = myEnforcement;\n    ChatGPTBot._myEnforcement.setConfig({\n      onReady: () => {},\n      onShown: () => {},\n      onShow: () => {},\n      onSuppress: () => {},\n      onCompleted: (response) => {\n        ChatGPTBot._arkosePromise.resolve(response.token);\n      },\n      onReset: () => {},\n      onHide: () => {},\n      onError: (response) => {\n        console.log(\"Arkose error:\", response);\n        ChatGPTBot._arkosePromise.reject(response);\n      },\n      onFailed: (response) => {\n        console.log(\"Arkose failed:\", response);\n        ChatGPTBot._arkosePromise.reject(response);\n      },\n    });\n  }\n\n  async getArkoseToken() {\n    if (ChatGPTBot._myEnforcement) {\n      return new Promise((resolve, reject) => {\n        ChatGPTBot._arkosePromise = { resolve, reject };\n        ChatGPTBot._myEnforcement.run();\n      });\n    } else {\n      return null;\n    }\n  }\n\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    // Make sure the access token is available\n    if (!this.accessToken) await this.checkAvailability();\n\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${this.accessToken}`,\n    };\n\n    let requirement;\n    try {\n      const result = await axios.post(\n        \"https://chat.openai.com/backend-api/sentinel/chat-requirements\",\n        undefined,\n        { headers },\n      );\n      if (result) {\n        requirement = result.data;\n      }\n    } catch (error) {\n      console.error(\"Error get chat-requirements token:\", error);\n      console.error(\"ChatGPT response:\", event);\n    }\n\n    if (requirement.token) {\n      headers[\"Openai-Sentinel-Chat-Requirements-Token\"] = requirement.token;\n    }\n\n    // Send the prompt to the ChatGPT API\n    const context = await this.getChatContext();\n    const payload = JSON.stringify({\n      action: \"next\",\n      conversation_mode: {\n        kind: \"primary_assistant\",\n      },\n      arkose_token: requirement?.arkose?.required\n        ? await this.getArkoseToken()\n        : undefined,\n      messages: [\n        {\n          id: uuidv4(),\n          author: { role: \"user\" },\n          content: {\n            content_type: \"text\",\n            parts: [prompt],\n          },\n          metadata: {},\n        },\n      ],\n      conversation_id: context.conversationId,\n      parent_message_id: context.parentMessageId,\n      model: this.constructor._model,\n      history_and_training_disabled: false, // allow training\n    });\n\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\n          \"https://chat.openai.com/backend-api/conversation\",\n          {\n            headers: {\n              ...headers,\n              accept: \"text/event-stream\",\n            },\n            payload,\n          },\n        );\n\n        let preInfo = [];\n        source.addEventListener(\"message\", (event) => {\n          const regex = /^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}\\.\\d{6}$/;\n          if (event.data.trim() === \"[DONE]\") {\n            onUpdateResponse(callbackParam, { done: true });\n            source.close();\n            resolve();\n          } else if (regex.test(event.data)) {\n            // Ignore the timestamp\n            return;\n          } else\n            try {\n              const data = JSON.parse(event.data);\n\n              // Ignore messages which includes repeated content\n              if (data.message?.metadata?.is_complete) return;\n\n              this.setChatContext({\n                conversationId: data.conversation_id,\n                parentMessageId: data.message_id,\n              });\n              const content = data.message?.content;\n              if (\n                content?.content_type === \"code\" ||\n                content?.content_type === \"system_error\"\n              ) {\n                // Preprocessing info\n                onUpdateResponse(callbackParam, {\n                  content:\n                    \"```python\\n\" +\n                    preInfo.join(\"\\n\") +\n                    (preInfo.length > 0 ? \"\\n\" : \"\") +\n                    content.text +\n                    \"\\n```\",\n                  done: false,\n                });\n                if (data.message.status === \"finished_successfully\")\n                  preInfo.push(content.text);\n              } else if (content?.content_type === \"text\") {\n                // The final response\n                let text = content.parts[0];\n\n                if (preInfo.length > 0)\n                  text = \"```python\\n\" + preInfo.join(\"\\n\") + \"\\n```\\n\" + text;\n\n                const citations = data.message.metadata?.citations;\n                if (citations) {\n                  citations.forEach((element) => {\n                    text += `\\n> 1. [${element.metadata.title}](${element.metadata.url})`;\n                  });\n                }\n\n                onUpdateResponse(callbackParam, {\n                  content: text,\n                  done: false,\n                });\n              }\n            } catch (error) {\n              console.error(\"Error parsing ChatGPT response:\", error);\n              console.error(\"ChatGPT response:\", event);\n              reject(error);\n            }\n        });\n\n        source.addEventListener(\"error\", (error) => {\n          source.close();\n\n          let message = \"\";\n          if (error.data) {\n            try {\n              const data = JSON.parse(error.data);\n              message = data.detail?.message || data.detail;\n            } catch (e) {\n              const parser = new DOMParser();\n              const doc = parser.parseFromString(error.data, \"text/html\");\n              const msg = doc.querySelector(\".message p\");\n              message = msg ? msg.textContent + \". \" : \"\";\n              const explanation = doc.querySelector(\".explanation\");\n              message += explanation ? explanation.textContent : \"\";\n            }\n          } else {\n            message = error.source.url;\n          }\n\n          reject(new Error(message));\n        });\n\n        source.addEventListener(\"readystatechange\", (event) => {\n          if (event.readyState === source.CLOSED) {\n            // after stream closed, done\n            onUpdateResponse(callbackParam, {\n              done: true,\n            });\n            resolve();\n          }\n        });\n\n        source.stream();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n}\n","import LangChainBot from \"@/bots/LangChainBot\";\nimport store from \"@/store\";\nimport { ChatOpenAI } from \"@langchain/openai\";\n\nexport default class OpenAIAPIBot extends LangChainBot {\n  static _brandId = \"openaiApi\";\n  static _className = \"OpenAIAPIBot\";\n\n  constructor() {\n    super();\n  }\n\n  async _checkAvailability() {\n    let available = false;\n\n    if (store.state.openaiApi.apiKey) {\n      this.setupModel();\n      available = true;\n    }\n    return available;\n  }\n\n  _setupModel() {\n    const chatModel = new ChatOpenAI({\n      configuration: {\n        basePath: store.state.openaiApi.alterUrl\n          ? store.state.openaiApi.alterUrl\n          : \"\",\n      },\n      openAIApiKey: store.state.openaiApi.apiKey,\n      modelName: this.constructor._model ? this.constructor._model : \"\",\n      temperature: store.state.openaiApi.temperature,\n      streaming: true,\n    });\n    return chatModel;\n  }\n\n  getPastRounds() {\n    return store.state.openaiApi.pastRounds;\n  }\n}\n","import Bot from \"@/bots/Bot\";\nimport axios from \"axios\";\nimport md5 from \"md5\";\nimport WebSocketAsPromised from \"websocket-as-promised\";\nimport AsyncLock from \"async-lock\";\nimport store from \"@/store\";\n\nexport default class PoeBot extends Bot {\n  static _brandId = \"poe\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"PoeBot\"; // Class name of the bot\n  static _logoFilename = \"default-logo.svg\"; // Place it in public/bots/\n  static _loginUrl = \"https://poe.com/\";\n  static _lock = new AsyncLock();\n\n  context = {\n    buildId: \"\",\n    chatId: 0,\n    settings: null,\n    lastMessageId: 0,\n  };\n\n  constructor() {\n    super();\n  }\n\n  async gqlPost(queryName, variables) {\n    const { settings } = this.context;\n    const formkey = store.state.poe.formkey;\n    const queryHashs = {\n      AnnotateWithIdsProviderQuery:\n        \"b4e6992c3af8f208ab2b3979dce48889835736ed29f623ea9f609265018d0d8f\",\n      chatHelpers_sendMessageMutation_Mutation:\n        \"dc684d8e0aab4cee82ed40ef7381b40cc31b1dd3afdf0e5c0a500364994fed8b\",\n      ChatListPaginationQuery:\n        \"c2e523bd328fee74768a0356481ba24da372b2e54d07820bcd0d439b2bd60495\",\n      subscriptionsMutation:\n        \"61c1bfa1ba167fd0857e3f6eaf9699e847e6c3b09d69926b12b5390076fe36e6\",\n    };\n\n    const payload = {\n      extensions: { hash: queryHashs[queryName] },\n      queryName,\n      variables,\n    };\n    const tagId = md5(JSON.stringify(payload) + formkey + \"4LxgHM6KpFqokX0Ox\");\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"poe-formkey\": formkey,\n      \"poe-tchannel\": settings.tchannelData.channel,\n      \"poe-tag-id\": tagId,\n    };\n\n    const response = await axios.post(\"https://poe.com/api/gql_POST\", payload, {\n      headers,\n    });\n\n    return response.data;\n  }\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    let available = false;\n\n    const modelHandles = {\n      a2: \"Claude-instant\",\n      a2_100k: \"Claude-instant-100k\",\n      a2_2: \"Claude-2-100k\",\n      capybara: \"Assistant\",\n      chinchilla: \"ChatGPT\",\n      beaver: \"GPT-4\",\n      vizcacha: \"GPT-4-32k\",\n      code_llama_34b_instruct: \"Code-Llama-34b\",\n      acouchy: \"Google-PaLM-2\",\n      llama_2_70b_chat: \"Llama-2-70b\",\n    };\n    const url =\n      this.constructor._loginUrl + modelHandles[this.constructor._model];\n\n    try {\n      const response = await axios.get(url);\n\n      // Parse buildId\n      const buildId = response.data.match(/\"buildId\":\"(.*?)\",/);\n      this.context.buildId = buildId[1];\n\n      // Parse chatId\n      const chatId = response.data.match(/\"chatId\":(\\d+),/);\n      this.context.chatId = chatId[1];\n\n      available = true;\n    } catch (error) {\n      console.error(\"Error checking Poe login status:\", error);\n    }\n\n    return available;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    const ctx = this.context;\n\n    // Get settings\n    if (!ctx.settings) {\n      await axios.get(\"https://poe.com/api/settings\").then((response) => {\n        ctx.settings = response.data;\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      try {\n        const subDomain = \"tch\" + Math.floor(Math.random() * 1000000);\n        const tchannel = ctx.settings.tchannelData;\n        const url = `wss://${subDomain}.tch.${tchannel.baseHost}/up/${tchannel.boxName}/updates?min_seq=${tchannel.minSeq}&channel=${tchannel.channel}&hash=${tchannel.channelHash}`;\n        const wsp = new WebSocketAsPromised(url, {\n          packMessage: (data) => {\n            return JSON.stringify(data);\n          },\n          unpackMessage: (data) => {\n            return JSON.parse(data);\n          },\n        });\n\n        // Subscribe to messageAdded\n        this.gqlPost(\"subscriptionsMutation\", {\n          subscriptions: [\n            {\n              subscriptionName: \"messageAdded\",\n              query: null,\n              queryHash:\n                \"b6ce35c2b568d42105983f4025b279fdbda53f842e1e13c6a9b69710272a0129\",\n            },\n          ],\n        });\n\n        console.debug(\"context\", ctx);\n\n        wsp.onUnpackedMessage.addListener((message) => {\n          if (message.error) {\n            reject(new Error(message.error));\n            return;\n          }\n          ctx.settings.tchannelData.minSeq = message.min_seq;\n          const messages = message.messages.map((m) => JSON.parse(m));\n          for (const m of messages) {\n            if (m.message_type === \"subscriptionUpdate\") {\n              const messageAdded = m.payload.data.messageAdded;\n              if (!messageAdded) {\n                console.debug(m);\n                continue;\n              }\n              if (\n                ctx.lastMessageId >= messageAdded.messageId ||\n                messageAdded.author !== this.constructor._model\n              ) {\n                // Skip old messages and messages from other bots\n                continue;\n              }\n\n              const done = messageAdded.state === \"complete\";\n              onUpdateResponse(callbackParam, {\n                content: messageAdded.text,\n                done,\n              });\n              if (done) {\n                ctx.lastMessageId = messageAdded.messageId;\n                wsp.removeAllListeners();\n                resolve();\n              }\n            } else {\n              console.log(\"Unknown message type:\", m.message_type, m);\n            }\n          }\n        });\n\n        wsp.onError.addListener((error) => {\n          wsp.removeAllListeners();\n          wsp.close();\n          reject(error);\n        });\n\n        wsp.open();\n\n        this.gqlPost(\"chatHelpers_sendMessageMutation_Mutation\", {\n          bot: this.constructor._model,\n          chatId: ctx.chatId,\n          query: prompt,\n          source: null,\n          withChatBreak: false,\n        })\n          .then((response) => {\n            const status = response.data.messageEdgeCreate.status;\n            if (response.errors) {\n              let msg = \"\";\n              for (const error of response.errors) {\n                msg += error.message + \"\\n\";\n              }\n              reject(new Error(msg));\n            } else if (status !== \"success\") {\n              reject(new Error(status));\n            }\n            console.debug(\"response\", response);\n          })\n          .catch((error) => {\n            reject(error);\n          });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    return null;\n  }\n}\n","import AsyncLock from \"async-lock\";\nimport Bot from \"@/bots/Bot\";\nimport axios from \"axios\";\nimport store from \"@/store\";\nimport { SSE } from \"sse.js\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default class ChatGLMBot extends Bot {\n  static _brandId = \"chatGlm\"; // Brand id of the bot, should be unique. Used in i18n.\n  static _className = \"ChatGLMBot\"; // Class name of the bot\n  static _logoFilename = \"chatglm-3-logo.png\"; // Place it in public/bots/\n  static _loginUrl = \"https://chatglm.cn/main/detail\";\n  static _model = \"GLM-3\"; // Model name\n  static _lock = new AsyncLock(); // AsyncLock for prompt requests\n\n  constructor() {\n    super();\n  }\n\n  getAuthHeader() {\n    return {\n      headers: {\n        Authorization: `Bearer ${store.state.chatGlm?.token}`,\n      },\n    };\n  }\n\n  /**\n   * Check whether the bot is logged in, settings are correct, etc.\n   * @returns {boolean} - true if the bot is available, false otherwise.\n   */\n  async _checkAvailability() {\n    let available = false;\n    let userInfoUrl = \"https://chatglm.cn/chatglm/backend-api/v3/user/info\";\n    const context = await this.getChatContext();\n    await axios\n      .get(userInfoUrl, this.getAuthHeader())\n      .then((response) => {\n        available = response.data?.message == \"success\";\n        this.setChatContext({\n          ...context,\n          user_id: response.data?.result._id,\n        });\n      })\n      .catch((error) => {\n        console.error(\"Error checking ChatGLM login status:\", error);\n      });\n\n    return available;\n  }\n\n  /**\n   * Send a prompt to the bot and call onResponse(response, callbackParam)\n   * when the response is ready.\n   * @param {string} prompt\n   * @param {function} onUpdateResponse params: callbackParam, Object {content, done}\n   * @param {object} callbackParam - Just pass it to onUpdateResponse() as is\n   */\n  async _sendPrompt(prompt, onUpdateResponse, callbackParam) {\n    let context = await this.getChatContext();\n    if (context.user_id == null || context.user_id == undefined) {\n      await this._checkAvailability();\n      context = await this.getChatContext();\n    }\n    const uuid = uuidv4();\n    const streamContext = await axios.post(\n      `https://chatglm.cn/chatglm/backend-api/v1/stream_context?__requestid=${uuid}`,\n      {\n        prompt: prompt,\n        seed: Math.floor(Math.random() * 100000),\n        max_tokens: 512,\n        conversation_task_id: context.conversation_task_id,\n        retry: false,\n        retry_history_task_id: null,\n        institution: \"\",\n        __userid: context.user_id,\n      },\n      this.getAuthHeader(),\n    );\n\n    if (streamContext.status !== 200) {\n      throw new Error(streamContext);\n    }\n\n    const context_id = streamContext.data.result.context_id;\n    return new Promise((resolve, reject) => {\n      try {\n        const source = new SSE(\n          `https://chatglm.cn/chatglm/backend-api/v1/stream?App-Name=chatglm&context_id=${context_id}&institution=`,\n          this.getAuthHeader(),\n        );\n        let text = \"\";\n        source.addEventListener(\"add\", (event) => {\n          try {\n            text = event.data;\n            onUpdateResponse(callbackParam, { content: text, done: false });\n          } catch {\n            console.error(\"Error ChatGLM JSON.parse message:\", event.data);\n            return;\n          }\n        });\n        source.addEventListener(\"finish\", () => {\n          // after stream closed, done\n          onUpdateResponse(callbackParam, {\n            content: text,\n            done: true,\n          });\n          resolve();\n        });\n        source.addEventListener(\"sse_error\", (event) => {\n          console.error(event);\n          reject(this.getSSEDisplayError(event));\n        });\n        source.stream();\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * Should implement this method if the bot supports conversation.\n   * The conversation structure is defined by the subclass.\n   * @param null\n   * @returns {any} - Conversation structure. null if not supported.\n   */\n  async createChatContext() {\n    let context = null;\n    await axios\n      .post(\n        `https://chatglm.cn/chatglm/backend-api/v1/conversation`,\n        {},\n        this.getAuthHeader(),\n      )\n      .then((response) => {\n        context = {\n          conversation_task_id: response.data?.result.task_id,\n        };\n      })\n      .catch((error) => {\n        console.error(\"Error ChatGLM createChatContext \", error);\n      });\n    return context;\n  }\n}\n","export const Type = {\n  Text: 0,\n  Slider: 1,\n  Select: 2,\n  Combobox: 3,\n  Checkbox: 4,\n};\n","import { ref, onUnmounted } from \"vue\";\n\nexport function getMatomo() {\n  return window.Piwik?.getAsyncTracker();\n}\n\nexport function useMatomo() {\n  const matomo = ref(null);\n\n  const instance = getMatomo();\n  if (instance) {\n    matomo.value = instance;\n  } else {\n    const interval = 50;\n    const timeout = 10000;\n    const start = Date.now();\n\n    const timer = setInterval(() => {\n      const instance = getMatomo();\n      if (instance) {\n        clearInterval(timer);\n        matomo.value = instance;\n        return;\n      }\n\n      if (Date.now() - start > timeout) {\n        clearInterval(timer);\n        console.warn(`Matomo not loaded after waiting for ${timeout}ms`);\n      }\n    }, interval);\n\n    onUnmounted(() => {\n      clearInterval(timer);\n    });\n  }\n\n  return matomo;\n}\n","import { createI18n } from \"vue-i18n\";\n\n// Import stored language\nimport store from \"../store\";\nvar lang = store.state.lang;\nif (lang == \"auto\") {\n  lang = navigator.language || navigator.userLanguage || \"en\";\n  lang = lang.substr(0, 2); // Only use the first two characters (e.g. \"en\")\n}\n\n// Import translation files here\nimport enMessages from \"./locales/en.json\";\nimport zhMessages from \"./locales/zh.json\";\nimport zhtwMessages from \"./locales/zhtw.json\";\nimport deMessages from \"./locales/de.json\";\nimport ruMessages from \"./locales/ru.json\";\nimport viMessages from \"./locales/vi.json\";\nimport frMessages from \"./locales/fr.json\";\nimport itMessages from \"./locales/it.json\";\nimport koMessages from \"./locales/ko.json\";\nimport esMessages from \"./locales/es.json\";\nimport jaMessages from \"./locales/ja.json\";\n\nconst messages = {\n  en: enMessages,\n  zh: zhMessages,\n  zhtw: zhtwMessages,\n  de: deMessages,\n  ru: ruMessages,\n  vi: viMessages,\n  it: itMessages,\n  fr: frMessages,\n  ko: koMessages,\n  es: esMessages,\n  ja: jaMessages,\n};\n\nconst i18n = createI18n({\n  legacy: false, // Vuetify does not support the legacy mode of vue-i18n\n  locale: lang,\n  fallbackLocale: \"en\",\n  messages,\n});\n\nexport default i18n;\n","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport i18n from \"./i18n\";\nimport store from \"./store\";\nimport Chats from \"@/store/chats\";\nimport { migrateChatsMessagesThreads } from \"@/store/migration\";\nimport { createVueI18nAdapter } from \"vuetify/locale/adapters/vue-i18n\";\nimport { useI18n } from \"vue-i18n\";\nimport \"material-design-icons/iconfont/material-icons.css\";\nimport VueMatomo from \"vue-matomo\";\nimport VueShortkey from \"vue3-shortkey\";\nimport { resolveTheme, applyTheme } from \"./theme\";\n\n// Vuetify\nimport \"vuetify/styles\";\nimport { createVuetify } from \"vuetify\";\nimport * as components from \"vuetify/components\";\nimport * as directives from \"vuetify/directives\";\n\n// VMdPreview\nimport VMdPreview from \"@kangc/v-md-editor/lib/preview\";\nimport \"@kangc/v-md-editor/lib/style/preview.css\";\nimport \"@kangc/v-md-editor/lib/theme/style/vuepress.css\";\nimport createLineNumbertPlugin from \"@kangc/v-md-editor/lib/plugins/line-number/index\";\nimport createCopyCodePlugin from \"@kangc/v-md-editor/lib/plugins/copy-code/index\";\nimport \"@kangc/v-md-editor/lib/plugins/copy-code/copy-code.css\";\nimport \"@kangc/v-md-editor/lib/style/base-editor.css\";\nimport vuepressTheme from \"@kangc/v-md-editor/lib/theme/vuepress.js\";\nimport \"@kangc/v-md-editor/lib/theme/style/github.css\";\nimport Prism from \"prismjs\";\nimport createKatexPlugin from \"@kangc/v-md-editor/lib/plugins/katex/npm\";\n\nVMdPreview.use(vuepressTheme, {\n  Prism,\n})\n  .use(createLineNumbertPlugin())\n  .use(createCopyCodePlugin())\n  .use(createKatexPlugin());\n\nconst { ipcRenderer } = window.require(\"electron\");\n\nawait store.restored; // wait for state to be restore\ni18n.global.locale.value = store.state.lang;\nstore.commit(\"migrateSettingsPrompts\");\nstore.commit(\"migrateSettingArrayIndexUseUUID\");\nawait migrateChatsMessagesThreads();\nawait Chats.addFirstChatIfEmpty();\n\nconst defaultTheme = await resolveTheme(store.state.mode, ipcRenderer);\nstore.commit(\"setTheme\", defaultTheme);\napplyTheme(defaultTheme);\nipcRenderer.invoke(\"set-is-show-menu-bar\", store.state.general.isShowMenuBar);\nipcRenderer.on(\"commit\", (e, mutation, value) => {\n  store.commit(mutation, value);\n});\n\nconst vuetify = createVuetify({\n  components: { ...components },\n  directives,\n  locale: {\n    adapter: createVueI18nAdapter({ i18n, useI18n }),\n  },\n  theme: {\n    defaultTheme,\n    themes: {\n      light: {\n        colors: {\n          primary: \"#062AAA\",\n          surface: \"#FFFFFF\",\n          background: \"#f3f3f3\",\n          \"surface-variant\": \"#fff\",\n          \"on-surface-variant\": \"#212121\",\n          header: \"#fff\",\n          prompt: \"#95ec69\",\n          response: \"#fff\",\n          font: \"#212121\",\n          \"table-tr-2n\": \"#F6F8FA\",\n          \"code-font\": \"#476582\",\n          \"code-background\": \"#F3F4F4\",\n        },\n      },\n      dark: {\n        dark: true,\n        colors: {\n          primary: \"#ececf1\",\n          surface: \"#292a2d\",\n          background: \"#1a1a20\",\n          \"surface-variant\": \"#131419\",\n          \"on-surface-variant\": \"#fff\",\n          header: \"#292a2d\",\n          prompt: \"#222329\",\n          response: \"#131419\",\n          font: \"#fff\",\n          \"table-tr-2n\": \"#1d1e20\",\n          \"code-font\": \"#cbdae6\",\n          \"code-background\": \"#292a2d\",\n        },\n      },\n    },\n  },\n});\n\n// Inject geetest script for iFlytek Spark\nfetch(\"https://static.geetest.com/g5/gd.js\")\n  .then((response) => response.text())\n  .then((text) => {\n    const script = document.createElement(\"script\");\n    script.textContent = text;\n    document.head.appendChild(script);\n  });\n\ncreateApp(App)\n  .use(i18n)\n  .use(store)\n  .use(vuetify)\n  .use(VMdPreview)\n  .use(VueShortkey)\n  .use(VueMatomo, {\n    // Configure your matomo server and site by providing\n    host: \"https://matomo.chatall.ai/\",\n    siteId: 1,\n\n    // Changes the default .js and .php endpoint's filename\n    // Default: 'matomo'\n    trackerFileName: \"matomo\",\n\n    // Overrides the autogenerated tracker endpoint entirely\n    // Default: undefined\n    // trackerUrl: 'https://example.com/whatever/endpoint/you/have',\n\n    // Overrides the autogenerated tracker script path entirely\n    // Default: undefined\n    // trackerScriptUrl: 'https://example.com/whatever/script/path/you/have',\n\n    // Enables automatically registering pageviews on the router\n    router: null,\n\n    // Enables link tracking on regular links. Note that this won't\n    // work for routing links (ie. internal Vue router links)\n    // Default: true\n    enableLinkTracking: true,\n\n    // Require consent before sending tracking information to matomo\n    // Default: false\n    requireConsent: false,\n\n    // Whether to track the initial page view\n    // Default: true\n    trackInitialView: true,\n\n    // Run Matomo without cookies\n    // Default: false\n    disableCookies: true,\n\n    // Require consent before creating matomo session cookie\n    // Default: false\n    requireCookieConsent: false,\n\n    // Enable the heartbeat timer (https://developer.matomo.org/guides/tracking-javascript-guide#accurately-measure-the-time-spent-on-each-page)\n    // Default: false\n    enableHeartBeatTimer: false,\n\n    // Set the heartbeat timer interval\n    // Default: 15\n    heartBeatTimerInterval: 15,\n\n    // Whether or not to log debug information\n    // Default: false\n    debug: false,\n\n    // UserID passed to Matomo (see https://developer.matomo.org/guides/tracking-javascript-guide#user-id)\n    // Default: undefined\n    userId: undefined,\n\n    // Share the tracking cookie across subdomains (see https://developer.matomo.org/guides/tracking-javascript-guide#measuring-domains-andor-sub-domains)\n    // Default: undefined, example '*.example.com'\n    cookieDomain: undefined,\n    // setDomains: [\".\", \"localhost\", \"127.0.0.1\"],\n    // enableCrossDomainLinking: true,\n\n    // Tell Matomo the website domain so that clicks on these domains are not tracked as 'Outlinks'\n    // Default: undefined, example: '*.example.com'\n    domains: \"*\",\n\n    // A list of pre-initialization actions that run before matomo is loaded\n    // Default: []\n    // Example: [\n    //   ['API_method_name', parameter_list],\n    //   ['setCustomVariable','1','VisitorType','Member'],\n    //   ['appendToTrackingUrl', 'new_visit=1'],\n    //   etc.\n    // ]\n    preInitActions: [\n      [\n        \"setCustomVariable\",\n        \"1\",\n        \"AppVersion\",\n        require(\"../package.json\").version,\n        \"visit\",\n      ],\n    ],\n\n    // A function to determine whether to track an interaction as a site search\n    // instead of as a page view. If not a function, all interactions will be\n    // tracked as page views. Receives the new route as an argument, and\n    // returns either an object of keyword, category (optional) and resultsCount\n    // (optional) to track as a site search, or a falsey value to track as a page\n    // view.\n    // Default: false, i.e. track all interactions as page views\n    // Example: (to) => {\n    //   if (to.query.q && to.name === 'search') {\n    //     return { keyword: to.query.q, category: to.params.category }\n    //   } else {\n    //    return null\n    //   }\n    // }\n    trackSiteSearch: false,\n\n    // Set this to include crossorigin attribute on the matomo script import\n    // Default: undefined, possible values : 'anonymous', 'use-credentials'\n    crossOrigin: undefined,\n  })\n  .mount(\"#app\");\n","import db from \"@/store/db\";\nimport store from \"@/store/index\";\nimport i18n from \"@/i18n\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass Chats {\n  static get table() {\n    return db.table(\"chats\");\n  }\n\n  static async addFirstChatIfEmpty() {\n    const count = await Chats.table.count();\n    if (count === 0) {\n      store.commit(\n        \"selectChat\",\n        await Chats.add({\n          favBots: [\n            // default bots\n            { classname: \"ChatGPT35Bot\", selected: true },\n            { classname: \"ChatGPT4Bot\", selected: true },\n            { classname: \"BingChatCreativeBot\", selected: true },\n            { classname: \"BingChatBalancedBot\", selected: true },\n            { classname: \"BingChatPreciseBot\", selected: true },\n            { classname: \"BardBot\", selected: true },\n            { classname: \"ClaudeInstantPoeBot\", selected: true },\n            { classname: \"FalconHC180bBot\", selected: true },\n            { classname: \"Llama270bBot\", selected: true },\n            { classname: \"VicunaBot\", selected: true },\n          ],\n        }),\n      );\n    }\n  }\n\n  static async getCurrentChat() {\n    return await Chats.table.get(store.state.currentChatIndex);\n  }\n\n  static async add(payload) {\n    const currentChat = await Chats.getCurrentChat();\n    const count = await Chats.table.count();\n    const newKey = await Chats.table.add({\n      index: uuidv4(),\n      contexts: {},\n      favBots: currentChat ? currentChat.favBots : [],\n      createdTime: new Date().getTime(),\n      modifiedTime: new Date().getTime(),\n      title: `${i18n.global.t(\"chat.newChat\")} ${count + 1}`,\n      ...payload,\n    });\n    return newKey;\n  }\n\n  static async update(index, payload) {\n    return await Chats.table.update(index, {\n      modifiedTime: new Date().getTime(),\n      ...payload,\n    });\n  }\n}\n\nexport default Chats;\n","import Dexie from \"dexie\";\n\nconst db = new Dexie(\"ChatALL\");\ndb.version(1).stores({\n  chats: \"index, title, modifiedTime, selectedTime\",\n  messages: \"index, chatIndex, createdTime, modifiedTime\",\n  threads: \"index, chatIndex, messageIndex, createdTime, modifiedTime\",\n});\n\nexport default db;\n","import { getMatomo } from \"@/composables/matomo\";\nimport i18n from \"@/i18n\";\nimport localForage from \"localforage\";\nimport { isProxy, isReactive, isRef, toRaw } from \"vue\";\nimport { createStore } from \"vuex\";\nimport VuexPersistence from \"vuex-persist\";\nimport Chats from \"@/store/chats\";\nimport Messages from \"@/store/messages\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Threads from \"./threads\";\nimport { messageQueue, threadMessageQueue } from \"./queue\";\n\nconst vuexPersist = new VuexPersistence({\n  key: \"chatall-app\",\n  storage: localForage,\n  asyncStorage: true,\n  reducer: (state) => {\n    /* eslint-disable no-unused-vars */\n    const { updateCounter, selectedResponses, ...persistedState } = state;\n    /* eslint-enable no-unused-vars */\n    return deepToRaw(persistedState);\n  },\n});\n\nexport default createStore({\n  state: {\n    uuid: \"\",\n    lang: \"auto\",\n    columns: 2,\n    geminiApi: {\n      apiKey: \"\",\n      temperature: 0.7,\n      pastRounds: 5,\n      topK: 16,\n      topP: 0.95,\n    },\n    claudeApi: {\n      apiKey: \"\",\n      temperature: 0,\n      alterUrl: \"\",\n      maxTokens: 1000,\n    },\n    cohereApi: {\n      apiKey: \"\",\n      temperature: 0.8,\n      pastRounds: 5,\n    },\n    openaiApi: {\n      apiKey: \"\",\n      temperature: 1,\n      pastRounds: 5,\n      alterUrl: \"\",\n    },\n    azureOpenaiApi: {\n      azureApiKey: \"\",\n      temperature: 1,\n      pastRounds: 5,\n      azureApiInstanceName: \"\",\n      azureOpenAIApiDeploymentName: \"\",\n      azureOpenAIApiVersion: \"\",\n    },\n    chatgpt: {\n      refreshCycle: 0,\n      riskConfirmed: false,\n    },\n    gradio: {\n      url: \"\",\n      fnIndex: 0,\n    },\n    mistral: {\n      model: \"mistral-large\",\n    },\n    groqApi: {\n      apiKey: \"\",\n      temperature: 0,\n      maxTokens: 1000,\n      pastRounds: 1,\n    },\n    moss: {\n      token: \"\",\n    },\n    chatGlm: {\n      token: \"\",\n    },\n    kimi: {\n      access_token: \"\",\n      refresh_token: \"\",\n    },\n    qianWen: {\n      xsrfToken: \"\",\n    },\n    skyWork: {\n      inviteToken: \"\",\n      token: \"\",\n    },\n    wenxinQianfan: {\n      apiKey: \"\",\n      secretKey: \"\",\n      pastRounds: 5,\n    },\n    characterAI: {\n      characterId: \"YntB_ZeqRq2l_aVf2gWDCZl4oBttQzDvhj9cXafWcF8\",\n      version: \"\",\n      username: \"\",\n      id: \"\",\n    },\n    claudeAi: {\n      org: \"\",\n    },\n    perplexity: {\n      version: \"2.5\",\n    },\n    poe: {\n      formkey: \"\",\n    },\n    falcon: {\n      temperature: 0.9,\n      maxNewTokens: 256,\n      topP: 0.9,\n      repetitionPenalty: 1.2,\n    },\n    phind: {\n      model: \"Phind Model\",\n    },\n    currentChatIndex: 0,\n    updateCounter: 0,\n    theme: undefined,\n    mode: \"system\",\n    isChatDrawerOpen: true,\n    prompts: [],\n    actions: [\n      {\n        name: \"Summarize 1\",\n        prefix:\n          \"Summarize the data below in a markdown table with the bot name, difference, and response rating (1-5) columns.\\nDo not include the response' value column in your table.\\nSimplify the data and identify the differences.\\nEach response is delimited by the `resp` tag.\\nInside every response, the bot's name is delimited by the `name` tag, and the bot's response is delimited by the `value` tag.\",\n        template:\n          \"<resp>\\n  <name>{botName}</name>\\n  <value>{botResponse}</value>\\n</resp>\",\n        suffix: \"Give me the best response.\",\n        index: 0,\n      },\n    ],\n    selectedResponses: [],\n    chat: {\n      updateDebounceInterval: 100,\n    },\n    general: {\n      isShowMenuBar: true,\n      isShowAppBar: true,\n    },\n  },\n  mutations: {\n    changeColumns(state, n) {\n      state.columns = n;\n    },\n    setUuid(state, uuid) {\n      state.uuid = uuid;\n    },\n    async setBotSelected(state, { botClassname, selected }) {\n      const currentChat = await Chats.getCurrentChat();\n      for (let i = 0; i < currentChat.favBots.length; i++) {\n        const bot = currentChat.favBots[i];\n        if (bot.classname === botClassname) {\n          bot.selected = selected;\n          await Chats.table.update(currentChat.index, {\n            favBots: currentChat.favBots,\n          });\n          return;\n        }\n      }\n    },\n    async setFavBotOrder(state, newOrder) {\n      const currentChat = await Chats.getCurrentChat();\n      newOrder.forEach((botClassname, order) => {\n        const bot = currentChat.favBots.find(\n          (bot) => bot.classname === botClassname,\n        );\n        if (bot) bot.order = order;\n      });\n      Chats.table.update(currentChat.index, { favBots: currentChat.favBots });\n    },\n    async addFavoriteBot(state, botClassname) {\n      const currentChat = await Chats.getCurrentChat();\n      const favBots = currentChat.favBots;\n      currentChat.favBots.push({ classname: botClassname, selected: true });\n      Chats.table.update(currentChat.index, {\n        favBots,\n      });\n    },\n    async setFavoriteBot(state, favBots) {\n      const currentChat = await Chats.getCurrentChat();\n      Chats.table.update(currentChat.index, {\n        favBots,\n      });\n    },\n    async removeFavoriteBot(state, botClassname) {\n      const currentChat = await Chats.getCurrentChat();\n      for (let i = 0; i < currentChat.favBots.length; i++) {\n        const bot = currentChat.favBots[i];\n        if (bot.classname === botClassname) {\n          currentChat.favBots.splice(i, 1);\n\n          await Chats.table.update(currentChat.index, {\n            favBots: currentChat.favBots,\n          });\n          return;\n        }\n      }\n    },\n    setCurrentLanguage(state, language) {\n      state.lang = language;\n      i18n.global.locale = language;\n    },\n    setChatgpt(state, refreshCycle) {\n      state.chatgpt.refreshCycle = refreshCycle;\n    },\n    setGeminiApi(state, values) {\n      state.geminiApi = { ...state.geminiApi, ...values };\n    },\n    setOpenaiApi(state, values) {\n      state.openaiApi = { ...state.openaiApi, ...values };\n    },\n    setAzureOpenaiApi(state, values) {\n      state.azureOpenaiApi = { ...state.azureOpenaiApi, ...values };\n    },\n    setMoss(state, token) {\n      state.moss.token = token;\n    },\n    setChatGLM(state, token) {\n      state.chatGlm = { ...state.chatGlm, ...token };\n    },\n    setQianWenToken(state, token) {\n      state.qianWen.xsrfToken = token;\n    },\n    setSkyWork(state, tokens) {\n      state.skyWork = { ...state.skyWork, ...tokens };\n    },\n    setKimi(state, tokens) {\n      state.kimi = { ...state.kimi, ...tokens };\n    },\n    setWenxinQianfan(state, values) {\n      state.wenxinQianfan = { ...state.wenxinQianfan, ...values };\n    },\n    setGradio(state, values) {\n      state.gradio = { ...state.gradio, ...values };\n    },\n    setGroq(state, values) {\n      state.groq = { ...state.groq, ...values };\n    },\n    setCharacterAI(state, values) {\n      state.characterAI = { ...state.characterAI, ...values };\n    },\n    setClaudeAi(state, values) {\n      state.claudeAi = { ...state.claudeAi, ...values };\n    },\n    setClaudeApi(state, values) {\n      state.claudeApi = { ...state.claudeApi, ...values };\n    },\n    setCohereApi(state, values) {\n      state.cohereApi = { ...state.cohereApi, ...values };\n    },\n    setPerplexity(state, values) {\n      state.perplexity = { ...state.perplexity, ...values };\n    },\n    setPoe(state, values) {\n      state.poe = { ...state.poe, ...values };\n    },\n    setPhind(state, values) {\n      state.phind = { ...state.phind, ...values };\n    },\n    setMistral(state, values) {\n      state.mistral = { ...state.mistral, ...values };\n    },\n    setLatestPromptIndex(state, promptIndex) {\n      Chats.table.update(state.currentChatIndex, {\n        latestPromptIndex: promptIndex,\n      });\n    },\n    setLatestThreadPromptIndex(state, { promptIndex, messageIndex }) {\n      Chats.table.update(state.currentChatIndex, {\n        latestThreadPromptIndex: promptIndex,\n      });\n      Messages.table.update(messageIndex, {\n        hasThread: true,\n      });\n    },\n    setResponseThreadIndex(state, { responseIndex, threadIndex }) {\n      const currentChat = state.chats[state.currentChatIndex];\n      currentChat.messages[responseIndex].threadIndex = threadIndex;\n    },\n    setMessages(state, messages) {\n      const currentChat = state.chats[state.currentChatIndex];\n      currentChat.messages = messages;\n    },\n    incrementUpdateCounter(state) {\n      state.updateCounter += 1;\n    },\n    setChatContext(state, { botClassname, context }) {\n      Chats.table.update(state.currentChatIndex, {\n        [`contexts.${botClassname}`]: context,\n      });\n    },\n    clearMessages(state) {\n      Chats.table.where(\"index\").equals(state.currentChatIndex).modify({\n        contexts: {},\n      });\n      Messages.table.where(\"chatIndex\").equals(state.currentChatIndex).delete();\n    },\n    setTheme(state, theme) {\n      state.theme = theme;\n    },\n    setMode(state, mode) {\n      state.mode = mode;\n    },\n    setGeneral(state, values) {\n      state.general = { ...state.general, ...values };\n    },\n    createChat(state) {\n      const { favBots } = state.chats[state.currentChatIndex];\n      const chatIndex =\n        state.chats.push({\n          favBots,\n          contexts: {},\n          messages: [],\n          threads: [],\n          createdTime: new Date().getTime(),\n        }) - 1;\n      state.chats[chatIndex].index = chatIndex;\n      state.chats[chatIndex].title = `${i18n.global.t(\"chat.newChat\")} ${\n        chatIndex + 1\n      }`;\n    },\n    selectChat(state, index) {\n      state.currentChatIndex = index;\n      Chats.table.update(index, { selectedTime: new Date().getTime() });\n    },\n    hideChat(state) {\n      state.chats[state.currentChatIndex].hide = true;\n    },\n    async editChatTitle(state, { index, payload }) {\n      const currentChat = await Chats.table.get(index);\n      if (currentChat) {\n        if (\n          payload.isEditedByUser ||\n          (!currentChat.isTitleUserEdited && !payload.isEditedByUser)\n        ) {\n          Chats.update(index, {\n            ...payload,\n            isTitleUserEdited: payload.isEditedByUser\n              ? true\n              : currentChat.isTitleUserEdited,\n          });\n        }\n      }\n    },\n    setIsChatDrawerOpen(state, isChatDrawerOpen) {\n      state.isChatDrawerOpen = isChatDrawerOpen;\n    },\n    async deleteChats(state) {\n      const currentChat = await Chats.getCurrentChat();\n      await Chats.table.clear();\n      await Messages.table.clear();\n      await Threads.table.clear();\n      state.currentChatIndex = await Chats.add({\n        favBots: currentChat ? currentChat.favBots : [],\n      });\n      Chats.table.update(state.currentChatIndex, {\n        selectedTime: new Date().getTime(),\n      });\n    },\n    addPrompt(state, values) {\n      state.prompts.push({ ...values, index: uuidv4() });\n    },\n    editPrompt(state, values) {\n      const { index } = values;\n      const prompt = state.prompts.find((item) => item.index === index);\n      for (const key in values) {\n        prompt[key] = values[key];\n      }\n    },\n    deletePrompt(state, values) {\n      const { index } = values;\n      let prompt = state.prompts.find((item) => item.index === index);\n      prompt.hide = true;\n    },\n    addAction(state, values) {\n      state.actions.push({ ...values, index: uuidv4() });\n    },\n    editAction(state, values) {\n      const { index } = values;\n      const action = state.actions.find((item) => item.index === index);\n      for (const key in values) {\n        action[key] = values[key];\n      }\n    },\n    deleteAction(state, values) {\n      const { index } = values;\n      let action = state.actions.find((item) => item.index === index);\n      action.hide = true;\n    },\n    addSelectedResponses(state, value) {\n      value.selectedIndex = state.selectedResponses.push(value) - 1;\n    },\n    deleteSelectedResponses(state, value) {\n      const index = state.selectedResponses.findIndex(\n        (r) => r.selectedIndex === value,\n      );\n      state.selectedResponses.splice(index, 1);\n    },\n    deleteAllSelectedResponses(state) {\n      state.selectedResponses = [];\n    },\n    migrateSettingsPrompts(state) {\n      if (localStorage.getItem(\"isMigratedSettingsPrompts\") === \"true\") {\n        return;\n      }\n      const app = JSON.parse(localStorage.getItem(\"chatall-app\"));\n      const promptsData = JSON.parse(localStorage.getItem(\"chatall-prompts\"));\n      for (const key in app) {\n        state[key] = app[key];\n      }\n      state.prompts = promptsData ? promptsData.prompts : [];\n      localStorage.setItem(\"isMigratedSettingsPrompts\", true);\n    },\n    updateSetting(state, { key, value }) {\n      state[key] = value;\n    },\n    updateSettingArray(state, { key, value, index }) {\n      for (const prop in state[key][index]) {\n        state[key][index][prop] = value[prop];\n      }\n    },\n    pushSettingArray(state, { key, value }) {\n      state[key].push(value);\n    },\n    migrateSettingArrayIndexUseUUID(state) {\n      if (\n        localStorage.getItem(\"isMigrateSettingArrayIndexUseUUID\") === \"true\"\n      ) {\n        return;\n      }\n      const settings = toRaw(state);\n      for (const key in settings) {\n        if (Array.isArray(state[key])) {\n          for (const item of state[key]) {\n            if (typeof item.index === \"number\" || !item.index) {\n              item.index = uuidv4();\n            }\n          }\n        }\n      }\n      localStorage.setItem(\"isMigrateSettingArrayIndexUseUUID\", true);\n    },\n    setChat(state, values) {\n      values = {\n        ...values,\n        updateDebounceInterval: parseInt(values.updateDebounceInterval),\n      };\n      state.chat = { ...state.chat, ...values };\n    },\n  },\n  actions: {\n    async setBotSelected(_, { botClassname, selected }) {\n      const currentChat = await Chats.getCurrentChat();\n      for (let i = 0; i < currentChat.favBots.length; i++) {\n        const bot = currentChat.favBots[i];\n        if (bot.classname === botClassname) {\n          bot.selected = selected;\n          await Chats.table.update(currentChat.index, {\n            favBots: currentChat.favBots,\n          });\n          return;\n        }\n      }\n    },\n    async sendPrompt({ commit, dispatch }, { prompt, bots, promptIndex }) {\n      const currentChat = await Chats.getCurrentChat();\n      if (promptIndex === undefined) {\n        // if promptIndex not found, not resend, push to messages array\n        const promptMessage = {\n          type: \"prompt\",\n          content: prompt,\n          done: true,\n        };\n        // add message\n        promptIndex = await Messages.add(currentChat.index, promptMessage);\n      }\n      commit(\"setLatestPromptIndex\", promptIndex); // to keep track of the latest prompt index for hiding old prompt's resend button\n\n      const msgs = [];\n      for (const bot of bots) {\n        const msg = {\n          index: uuidv4(),\n          promptIndex: promptIndex,\n          chatIndex: currentChat.index,\n          type: \"response\",\n          content: \"\",\n          format: bot.getOutputFormat(),\n          model: bot.constructor._model,\n          className: bot.getClassname(),\n          createdTime: new Date().getTime(),\n        };\n        await Messages.table.add(msg);\n        msgs.push(msg);\n      }\n      for (let i = 0; i < bots.length; i++) {\n        const bot = bots[i];\n        const message = msgs[i];\n        bot.sendPrompt(\n          prompt,\n          (index, values) =>\n            dispatch(\"updateMessage\", { index, message: values }),\n          message.index,\n        );\n\n        getMatomo()?.trackEvent(\n          \"prompt\",\n          \"sendTo\",\n          message.className,\n          prompt.length,\n        );\n      }\n    },\n    async sendPromptInThread(\n      { commit, state, dispatch },\n      { prompt, bot, messageIndex, promptIndex },\n    ) {\n      if (!promptIndex) {\n        // not resend\n        const threadPromptMessage = {\n          type: \"prompt\",\n          content: prompt,\n        };\n        promptIndex = await Threads.add(\n          state.currentChatIndex,\n          messageIndex,\n          threadPromptMessage,\n        );\n      }\n      commit(\"setLatestThreadPromptIndex\", { promptIndex, messageIndex }); // to keep track of the latest prompt index for hiding old prompt's resend button\n\n      const threadResponseMessage = {\n        type: \"response\",\n        content: \"\",\n        format: bot.getOutputFormat(),\n        model: bot.constructor._model,\n        className: bot.getClassname(),\n        promptIndex: promptIndex,\n      };\n      threadResponseMessage.index = await Threads.add(\n        state.currentChatIndex,\n        messageIndex,\n        threadResponseMessage,\n      );\n\n      bot.sendPrompt(\n        prompt,\n        (index, values) =>\n          dispatch(\"updateThreadMessage\", { index, message: values }),\n        threadResponseMessage.index,\n      );\n\n      getMatomo()?.trackEvent(\n        \"prompt\",\n        \"replyTo\",\n        bot.getClassname(),\n        prompt.length,\n      );\n    },\n    async updateMessage(_, { index, message: values }) {\n      messageQueue.queue.push({ index, message: values });\n      if (values.done) {\n        const chat = await Messages.table.get(index);\n        const message = { ...chat, ...values };\n        getMatomo()?.trackEvent(\n          \"prompt\",\n          \"received\",\n          message.className,\n          message.content.length,\n        );\n      }\n    },\n    async updateThreadMessage(_, { index, message: values }) {\n      threadMessageQueue.queue.push({ index, message: values });\n      if (values.done) {\n        const thread = await Threads.table.get(index);\n        let message = { ...thread, ...values };\n        getMatomo()?.trackEvent(\n          \"prompt\",\n          \"received\",\n          message.className,\n          message.content.length,\n        );\n      }\n    },\n    addSelectedResponses({ commit, state }, value) {\n      commit(\"addSelectedResponses\", value);\n      return state.selectedResponses.length - 1;\n    },\n  },\n  getters: {\n    currentChat: async (state) => {\n      const currentChat = await Chats.table.get(state.currentChatIndex);\n      return currentChat;\n    },\n    // get current chat prompt\n    getCurrentChatPrompt: (state, getters) => {\n      const messages = getters.currentChat.messages;\n      return messages.filter((message) => message?.type === \"prompt\");\n    },\n  },\n  modules: {},\n  plugins: [vuexPersist.plugin],\n});\n\n// call toRaw to nested array before storing with localForage\nfunction deepToRaw(sourceObj) {\n  const objectIterator = (input) => {\n    if (Array.isArray(input)) {\n      const result = [];\n      for (const item of input) {\n        result.push(objectIterator(item));\n      }\n      return result;\n    }\n    if (isRef(input) || isReactive(input) || isProxy(input)) {\n      return objectIterator(toRaw(input));\n    }\n    if (input && typeof input === \"object\") {\n      return Object.keys(input).reduce((acc, key) => {\n        acc[key] = objectIterator(input[key]);\n        return acc;\n      }, {});\n    }\n    return input;\n  };\n\n  return objectIterator(sourceObj);\n}\n","import db from \"@/store/db\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass Messages {\n  static get table() {\n    return db.table(\"messages\");\n  }\n\n  static async add(chatIndex, payload) {\n    const newKey = await Messages.table.add({\n      chatIndex,\n      index: uuidv4(),\n      createdTime: new Date().getTime(),\n      ...payload,\n    });\n    return newKey;\n  }\n\n  static async update(index, payload) {\n    return await Messages.table.update(index, {\n      modifiedTime: new Date().getTime(),\n      ...payload,\n    });\n  }\n\n  static async getMessages(index) {\n    return await Messages.table\n      .where({ chatIndex: index })\n      .sortBy(\"createdTime\");\n  }\n\n  static async getMessagesCount(index) {\n    return await Messages.table.where({ chatIndex: index }).count();\n  }\n}\n\nexport default Messages;\n","import Chats from \"@/store/chats\";\nimport Messages from \"@/store/messages\";\nimport Threads from \"@/store/threads\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst migrateChatsMessagesThreads = async () => {\n  const chatIndexMap = {};\n  let messageIndexMap = {};\n  let threadIndexMap = {};\n  const chatsMigrateData = [];\n  const messagesMigrateData = [];\n  const threadsMigrateData = [];\n  try {\n    if (localStorage.getItem(\"isMigratedChatsMessagesThreads\") === \"true\") {\n      if (localStorage.getItem(\"isMigratedHasThread\") !== \"true\") {\n        migrateHasThread();\n      }\n      return;\n    }\n    const data = JSON.parse(localStorage.getItem(\"chatall-messages\"));\n    if (data === null) {\n      localStorage.setItem(\"isMigratedChatsMessagesThreads\", true);\n      return;\n    }\n    const chats = data.chats;\n    for (let i = 0; i < chats.length; i++) {\n      const chat = chats[i];\n      if (!chat) {\n        continue;\n      }\n      chat.index = getIndex(chatIndexMap, chat.index);\n      chat.index = getAndGenerateUuidIfNotExist(chatIndexMap, chat.index);\n      chat.modifiedTime = chat.createdTime;\n      let createdTime = chat.createdTime || 0;\n      for (let j = 0; j < chat.messages.length; j++) {\n        const message = chat.messages[j];\n        if (!message) {\n          continue;\n        }\n        message.index = getIndex(messageIndexMap, message.index);\n        message.index = getAndGenerateUuidIfNotExist(\n          messageIndexMap,\n          message.index,\n        );\n        message.chatIndex = chat.index;\n        message.createdTime = createdTime + j;\n        if (chat.threads && chat.threads.length) {\n          message.hasThread = true;\n        }\n        messagesMigrateData.push(message);\n      }\n      if (!chat.threads) {\n        // skip for old version do not have threads array\n        continue;\n      }\n      for (let q = 0; q < chat.threads.length; q++) {\n        const thread = chat.threads[q];\n        if (!thread) {\n          continue;\n        }\n        const messageIndex = getAndGenerateUuidIfNotExist(\n          messageIndexMap,\n          thread.responseIndex,\n        );\n        let createdTime = chat.createdTime || 0;\n        for (let p = 0; p < thread.messages.length; p++) {\n          const threadMessage = thread.messages[p];\n          if (!threadMessage) {\n            continue;\n          }\n          threadMessage.index = getIndex(threadIndexMap, threadMessage.index);\n          threadMessage.index = getAndGenerateUuidIfNotExist(\n            threadIndexMap,\n            threadMessage.index,\n          );\n          threadMessage.messageIndex = messageIndex;\n          threadMessage.chatIndex = chat.index;\n          threadMessage.createdTime = createdTime + p;\n          if (threadMessage.type === \"response\") {\n            threadMessage.promptIndex = getAndGenerateUuidIfNotExist(\n              threadIndexMap,\n              threadMessage.promptIndex,\n            );\n          }\n          threadsMigrateData.push(threadMessage);\n        }\n      }\n      messageIndexMap = {};\n      threadIndexMap = {};\n      delete chat.messages;\n      chatsMigrateData.push(chat);\n    }\n    console.log(chatsMigrateData);\n    console.log(messagesMigrateData);\n    console.log(threadsMigrateData);\n    try {\n      await Chats.table.bulkAdd(chatsMigrateData);\n    } catch (error) {\n      console.error(\"Chats Migration error:\", error);\n    }\n    try {\n      await Messages.table.bulkAdd(messagesMigrateData);\n    } catch (error) {\n      console.error(\"Messages Migration error:\", error);\n    }\n    try {\n      await Threads.table.bulkAdd(threadsMigrateData);\n    } catch (error) {\n      console.error(\"Threads Migration error:\", error);\n    }\n    localStorage.setItem(\"isMigratedChatsMessagesThreads\", true);\n    localStorage.setItem(\"isMigratedHasThread\", true);\n    console.log(\"Migration done\");\n  } catch (error) {\n    console.error(\"Migration error:\", error);\n  }\n};\n\nfunction getAndGenerateUuidIfNotExist(map, key) {\n  if (map[key] === undefined) {\n    map[key] = uuidv4();\n  }\n  return map[key];\n}\n\nfunction getIndex(map, key) {\n  if (map[key] !== undefined) {\n    // duplicate key not allowed\n    return uuidv4();\n  }\n  return key;\n}\n\nasync function migrateHasThread() {\n  // update Message hasThread property to `true` if messageIndex existed in Thread\n  const messageIndexes = await Threads.table\n    .orderBy(\"messageIndex\")\n    .distinct()\n    .uniqueKeys();\n  for (const index of messageIndexes) {\n    try {\n      await Messages.table.update(index, { hasThread: true });\n    } catch (error) {\n      console.error(\"migrateHasThread error:\", error);\n    }\n  }\n  localStorage.setItem(\"isMigratedHasThread\", true);\n}\n\nexport { migrateChatsMessagesThreads };\n","import Messages from \"@/store/messages\";\nimport Threads from \"@/store/threads\";\n/* eslint-disable no-unused-vars */\nimport { Table, UpdateSpec, TKey } from \"dexie\";\nimport { Store } from \"vuex\";\n\n/** @type {Queue} */\nexport let messageQueue;\n/** @type {Queue} */\nexport let threadMessageQueue;\n\n/**\n * @param {Store} store\n */\nexport function initializeQueues(store) {\n  messageQueue = new Queue(store, Messages.table, \"messageQueue\");\n  threadMessageQueue = new Queue(store, Threads.table, \"threadMessageQueue\");\n}\n\nexport function startQueuesProcessing() {\n  messageQueue.processQueue();\n  threadMessageQueue.processQueue();\n}\n\nclass Queue {\n  /** @type {Store} */\n  store;\n  /** @type {Table} */\n  table;\n  _queue = [];\n  queueName = \"\";\n  isProcessing = false;\n\n  static DEFAULT_UPDATE_DEBOUNCE_INTERVAL = 100;\n  debounceTime = Queue.DEFAULT_UPDATE_DEBOUNCE_INTERVAL;\n\n  get queue() {\n    return this._queue;\n  }\n\n  /**\n   * @param {Store} store\n   * @param {Table} table\n   * @param {string} queueName\n   */\n  constructor(store, table, queueName = \"\") {\n    this.table = table;\n    this.store = store;\n    this.queueName = queueName;\n  }\n\n  async processQueue() {\n    if (!this.isProcessing && this.queue.length > 0) {\n      this.isProcessing = true;\n\n      this.setUpdateDebounceTime();\n\n      const mergedMessages = [];\n      /** @type {Array.<{key: TKey, changes: UpdateSpec}>} */\n      const indexMap = {};\n\n      // console.log(this.queueName);\n      // console.table(\n      //   this.queue.map((obj) => {\n      //     return {\n      //       index: obj.index,\n      //       content: obj.message.content,\n      //       done: obj.message.done,\n      //     };\n      //   }),\n      // );\n\n      const queueCopy = [...this.queue];\n      for (const item of queueCopy) {\n        const index = item.index;\n        if (!indexMap[index]) {\n          indexMap[index] = { key: index, changes: {} };\n          mergedMessages.push(indexMap[index]);\n        }\n        for (const propKey in item.message) {\n          indexMap[index].changes[propKey] = item.message[propKey];\n        }\n        this.queue.shift(); // remove from queue\n      }\n\n      // console.log(this.queueName + \" result\");\n      // console.table(\n      //   mergedMessages.map((obj) => {\n      //     return {\n      //       index: obj.key,\n      //       content: obj.changes.content,\n      //       done: obj.changes.done,\n      //     };\n      //   }),\n      // );\n\n      await this.table.bulkUpdate(mergedMessages);\n\n      this.isProcessing = false;\n    }\n    setTimeout(this.processQueue.bind(this), this.debounceTime);\n  }\n\n  setUpdateDebounceTime() {\n    if (typeof this.store.state.chat.updateDebounceInterval === \"number\") {\n      this.debounceTime = this.store.state.chat.updateDebounceInterval;\n    } else {\n      this.debounceTime = Queue.DEFAULT_UPDATE_DEBOUNCE_INTERVAL;\n    }\n  }\n}\n","import db from \"@/store/db\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass Threads {\n  static get table() {\n    return db.table(\"threads\");\n  }\n\n  static async add(chatIndex, messageIndex, payload) {\n    const newKey = await Threads.table.add({\n      chatIndex,\n      messageIndex,\n      index: uuidv4(),\n      createdTime: new Date().getTime(),\n      ...payload,\n    });\n    return newKey;\n  }\n\n  static async update(index, payload) {\n    return await Threads.table.update(index, {\n      modifiedTime: new Date().getTime(),\n      ...payload,\n    });\n  }\n}\n\nexport default Threads;\n","const SYSTEM = \"system\";\nconst DARK = \"dark\";\nconst LIGHT = \"light\";\nexport const Theme = { DARK, LIGHT };\nexport const Mode = { SYSTEM, ...Theme };\n\n/**\n * Determine the actual theme for system mode\n * @param {string} mode\n * @param {object} ipcRenderer\n * @returns {string} resolved theme\n */\nexport const resolveTheme = async (mode, ipcRenderer) => {\n  let resolvedTheme = mode;\n  if (mode === Mode.SYSTEM) {\n    const nativeTheme = await ipcRenderer.invoke(\"get-native-theme\");\n    resolvedTheme = nativeTheme.shouldUseDarkColors ? Theme.DARK : Theme.LIGHT;\n  }\n  return resolvedTheme;\n};\n\n/**\n * Apply theme to UI\n * @param {string} theme dark / light\n * @param {object} vuetifyTheme from veutify useTheme\n */\nexport const applyTheme = (theme, vuetifyTheme) => {\n  if (vuetifyTheme) {\n    vuetifyTheme.global.name.value = theme; // vuetify theme\n  }\n};\n","const is_mac = process.platform === \"darwin\";\nconst modifier = is_mac ? \"meta\" : \"ctrl\";\nexport const SHORTCUT_PROMPT_TEXTAREA = {\n  elementId: \"prompt-textarea\",\n  key: [modifier, \"k\"],\n  offset: {\n    top: 15,\n  },\n  alignHorizontallyCenter: true,\n};\n\nexport const SHORTCUT_PROMPT_PRE_NEXT = {\n  elementId: \"prompt-textarea\",\n  key: [modifier, \"up/down\"],\n  offset: {\n    top: 15,\n    left: 100,\n  },\n  alignHorizontallyCenter: true,\n};\n\nexport const SHORTCUT_FIND = {\n  elementId: \"find-btn\",\n  key: [modifier, \"f\"],\n  offset: {\n    top: 40,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_CLEAR_MESSAGES = {\n  elementId: \"clear-messages-btn\",\n  key: [modifier, \"e\"],\n  offset: {\n    top: 40,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_SETTINGS = {\n  elementId: \"settings-btn\",\n  key: [modifier, \",\"],\n  offset: {\n    top: 40,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_SHORTCUT_GUIDE = {\n  elementId: \"shortcut-guide-btn\",\n  key: [modifier, \"/\"],\n  offset: {\n    top: 40,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_BOTS_MENU = {\n  elementId: \"bots-menu-btn\",\n  key: [\"ctrl\", \"tab\"],\n  offset: {\n    top: -70,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_CHAT_DRAWER = {\n  elementId: \"chat-drawer-btn\",\n  key: [modifier, \"d\"],\n  offset: {\n    top: 40,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_NEW_CHAT = {\n  elementId: \"new-chat-list-item\",\n  key: [modifier, \"n\"],\n  offset: {\n    top: 12,\n    left: 20,\n  },\n  alignHorizontallyCenter: true,\n};\n\nexport const SHORTCUT_PROMPT_MANAGEMENT = {\n  elementId: \"prompt-btn\",\n  key: [modifier, \"p\"],\n  offset: {\n    top: -65,\n    left: 5,\n  },\n  flexDirection: \"column\",\n};\n\nexport const SHORTCUT_APP_BAR = {\n  elementId: \"app-bar\",\n  key: [modifier, \"f11\"],\n  offset: {\n    top: 20,\n    left: -200,\n  },\n  alignHorizontallyCenter: true,\n};\n\nexport const SHORTCUT_LIST = [\n  SHORTCUT_FIND,\n  SHORTCUT_SETTINGS,\n  SHORTCUT_BOTS_MENU,\n  SHORTCUT_SHORTCUT_GUIDE,\n  SHORTCUT_CLEAR_MESSAGES,\n  SHORTCUT_PROMPT_TEXTAREA,\n  SHORTCUT_CHAT_DRAWER,\n  SHORTCUT_NEW_CHAT,\n  SHORTCUT_PROMPT_MANAGEMENT,\n  SHORTCUT_PROMPT_PRE_NEXT,\n  SHORTCUT_APP_BAR,\n  {\n    elementId: \"column-1\",\n    key: [\"f1\"],\n    offset: {\n      top: 30,\n    },\n  },\n  {\n    elementId: \"column-2\",\n    key: [\"f2\"],\n    offset: {\n      top: 30,\n    },\n  },\n  {\n    elementId: \"column-3\",\n    key: [\"f3\"],\n    offset: {\n      top: 30,\n    },\n  },\n  {\n    elementId: \"fav-bot-1\",\n    key: [modifier, \"1\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-2\",\n    key: [modifier, \"2\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-3\",\n    key: [modifier, \"3\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-4\",\n    key: [modifier, \"4\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-5\",\n    key: [modifier, \"5\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-6\",\n    key: [modifier, \"6\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-7\",\n    key: [modifier, \"7\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-8\",\n    key: [modifier, \"8\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n  {\n    elementId: \"fav-bot-9\",\n    key: [modifier, \"9\"],\n    offset: {\n      top: -70,\n    },\n    flexDirection: \"column\",\n  },\n];\n","export const scrollToBottom = ({ immediately = false }) => {\n  window.scrollTo({\n    top: document.documentElement.scrollHeight,\n    behavior: immediately ? \"instant\" : \"smooth\",\n  });\n};\n\nexport const autoScrollToBottom = () => {\n  if (autoScroll) {\n    scrollToBottom({ immediately: true });\n  }\n};\n\nexport const onScroll = () => {\n  const scrollPosition = window.pageYOffset + window.innerHeight;\n  autoScroll = scrollPosition >= document.documentElement.scrollHeight - 40;\n};\n\nexport let autoScroll = false;\n","<template>\n  <v-list-item\n    density=\"comfortable\"\n    v-if=\"!isEditMode\"\n    :key=\"`chat-${props.chat.index}`\"\n    :active=\"props.currentChatIndex === props.chat.index\"\n    :title=\"props.chat.title\"\n    :value=\"props.chat.index\"\n    class=\"pa-3 pr-0\"\n    :style=\"{ cursor: isCursorWait ? 'wait' : 'pointer' }\"\n    @click=\"onSelectChat\"\n  >\n    <template v-slot:prepend>\n      <v-icon color=\"primary\" class=\"mr-4\"> mdi-message-outline </v-icon>\n    </template>\n    <template #append v-if=\"props.currentChatIndex === props.chat.index\">\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon=\"mdi-pencil-outline\"\n        @click=\"editChat\"\n        style=\"background-color: transparent\"\n      ></v-btn>\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon=\"mdi-delete-outline\"\n        @click=\"confirmHideChat\"\n        style=\"margin: 0; background-color: transparent\"\n      ></v-btn>\n    </template>\n  </v-list-item>\n  <v-text-field\n    autofocus\n    :key=\"`chat-${index}`\"\n    v-if=\"isEditMode\"\n    v-model=\"chatTitleEditModel\"\n    color=\"primary\"\n    density=\"compact\"\n    @keydown=\"onPressEnter\"\n    @focus=\"$event.target.select()\"\n    style=\"padding: 6px\"\n    class=\"pl-3 pr-0\"\n    hide-details\n  >\n    <template v-slot:prepend>\n      <v-icon color=\"primary\"> mdi-message-outline </v-icon>\n    </template>\n    <template v-slot:append>\n      <v-btn flat size=\"x-small\" icon=\"mdi-check\" @click=\"confirmEdit\"></v-btn>\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon=\"mdi-close\"\n        @click=\"isEditMode = false\"\n      ></v-btn>\n    </template>\n  </v-text-field>\n</template>\n\n<script setup>\nimport { ref } from \"vue\";\n\nconst emit = defineEmits([\n  \"hideChat\",\n  \"editChatTitle\",\n  \"selectChat\",\n  \"focusTextarea\",\n]);\nconst props = defineProps({\n  chat: {\n    type: Object,\n    required: true,\n  },\n  currentChatIndex: {\n    type: String,\n    required: true,\n  },\n});\n\nconst isEditMode = ref(false);\nconst isCursorWait = ref(false);\nconst chatTitleEditModel = ref(\"\");\n\nasync function onSelectChat() {\n  emit(\"selectChat\", props.chat.index);\n}\n\nasync function confirmHideChat() {\n  emit(\"hideChat\");\n}\n\nfunction editChat() {\n  isEditMode.value = true;\n  chatTitleEditModel.value = props.chat.title;\n}\n\nfunction confirmEdit() {\n  emit(\"editChatTitle\", {\n    title: chatTitleEditModel.value,\n    isEditedByUser: true,\n  });\n  isEditMode.value = false;\n}\n\nfunction onPressEnter(event) {\n  if (event.keyCode == 13) {\n    confirmEdit();\n  }\n}\n</script>\n\n<style scoped>\n:deep() .v-input__append {\n  margin-left: 0 !important;\n}\n\n:deep() .v-input__prepend {\n  margin-right: 0.25rem !important;\n}\n\n:deep() .v-field__input {\n  padding-left: 12px;\n  padding-right: 0;\n}\n\n:deep() i.v-icon {\n  color: rgb(var(--v-theme-primary));\n}\n\n:deep() div.v-list-item__prepend {\n  display: block;\n}\n</style>\n","import script from \"./ChatDrawerItem.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatDrawerItem.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatDrawerItem.vue?vue&type=style&index=0&id=d78952d6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-d78952d6\"]])\n\nexport default __exports__","<template>\n  <v-dialog\n    v-model=\"dialog\"\n    width=\"auto\"\n    max-width=\"80%\"\n    @click:outside=\"close(false)\"\n  >\n    <v-card :title=\"_title\">\n      <v-card-text>\n        <div v-html=\"_text\"></div>\n      </v-card-text>\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn variant=\"outlined\" color=\"primary\" @click=\"close(false)\">{{\n          $t(\"header.no\")\n        }}</v-btn>\n        <v-btn\n          ref=\"defaultButton\"\n          variant=\"flat\"\n          color=\"primary\"\n          class=\"bg-primary\"\n          @click=\"close(true)\"\n          >{{ $t(\"header.yes\") }}</v-btn\n        >\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script setup>\nimport { ref, watch, nextTick } from \"vue\";\n\nlet dialog = ref(false);\nlet _title = ref(\"\");\nlet _text = ref(\"\");\nconst defaultButton = ref(null);\n\nlet close;\n\nconst showModal = (title, text = \"\") => {\n  _title.value = title;\n  _text.value = text.replace(/\\n/g, \"<br />\");\n  return new Promise((resolve) => {\n    dialog.value = true;\n    close = (result) => {\n      resolve(result);\n      dialog.value = false;\n    };\n  });\n};\n\nwatch(\n  dialog,\n  () => {\n    if (dialog.value) {\n      nextTick(() => {\n        defaultButton.value.$el.focus();\n      });\n    }\n  },\n  { immediate: true },\n);\n\n// Using defineExpose to expose showModal and close methods to be accessible from outside and template\ndefineExpose({\n  showModal,\n  close,\n});\n</script>\n","import script from \"./ConfirmModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ConfirmModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <v-navigation-drawer permanent :model-value=\"props.open\">\n    <v-list nav>\n      <v-list-item\n        :id=\"SHORTCUT_NEW_CHAT.elementId\"\n        density=\"comfortable\"\n        class=\"mb-1 border\"\n        :title=\"$t('chat.newChat')\"\n        @click=\"onAddChat\"\n        @shortkey=\"onAddChat\"\n        v-shortkey=\"SHORTCUT_NEW_CHAT.key\"\n      >\n        <template v-slot:prepend>\n          <v-icon color=\"primary\"> mdi-plus </v-icon>\n        </template>\n      </v-list-item>\n    </v-list>\n\n    <template v-for=\"chat in drawerItems\">\n      <ChatDrawerItem\n        v-if=\"!chat.hide\"\n        :key=\"chat.index\"\n        :chat=\"chat\"\n        :current-chat-index=\"store.state.currentChatIndex\"\n        @hide-chat=\"hideChat\"\n        @select-chat=\"selectChat\"\n        @edit-chat-title=\"editChatTitle\"\n        @focus-textarea=\"focusTextarea\"\n      ></ChatDrawerItem>\n    </template>\n  </v-navigation-drawer>\n  <ConfirmModal ref=\"confirmModal\" />\n</template>\n\n<script setup>\nimport ChatDrawerItem from \"@/components/ChatDrawer/ChatDrawerItem.vue\";\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport { SHORTCUT_NEW_CHAT } from \"@/components/ShortcutGuide/shortcut.const\";\nimport i18n from \"@/i18n\";\nimport Chats from \"@/store/chats\";\nimport { useObservable } from \"@vueuse/rxjs\";\nimport { liveQuery } from \"dexie\";\nimport { nextTick, onUpdated, ref } from \"vue\";\nimport { useStore } from \"vuex\";\n\nconst store = useStore();\nconst props = defineProps([\"open\"]);\nconst emit = defineEmits([\"update:open\", \"focusTextarea\"]);\nonUpdated(setIsChatDrawerOpen);\n\nconst confirmModal = ref(null);\nconst drawerItems = useObservable(\n  liveQuery(() => Chats.table.orderBy(\"modifiedTime\").reverse().toArray()),\n);\n\nfunction setIsChatDrawerOpen() {\n  store.commit(\"setIsChatDrawerOpen\", props.open);\n}\n\nfunction selectChat(index) {\n  store.commit(\"selectChat\", index);\n  focusTextarea();\n}\n\nasync function onAddChat() {\n  store.commit(\"selectChat\", await Chats.add());\n  focusTextarea();\n}\n\nasync function hideChat() {\n  const confirm = await confirmModal.value.showModal(\n    i18n.global.t(\"modal.confirmHideChat\"),\n  );\n  if (confirm) {\n    await Chats.update(store.state.currentChatIndex, { hide: true });\n    selectLatestVisibleChat();\n  }\n}\n\nasync function editChatTitle(payload) {\n  store.commit(\"editChatTitle\", {\n    index: store.state.currentChatIndex,\n    payload,\n  });\n}\n\nasync function selectLatestVisibleChat() {\n  const latestChat = await Chats.table\n    .orderBy(\"modifiedTime\")\n    .reverse()\n    .filter((chat) => !chat.hide)\n    .first();\n  if (latestChat) {\n    store.commit(\"selectChat\", latestChat.index);\n    focusTextarea();\n  } else {\n    // if there is no visible chat, create a new chat\n    onAddChat();\n  }\n}\n\nfunction focusTextarea() {\n  nextTick().then(() => {\n    emit(\"focusTextarea\");\n  });\n}\n</script>\n<style scoped>\n:deep() .v-list-item-title {\n  font-size: 1rem !important;\n}\n</style>\n","import script from \"./ChatDrawer.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatDrawer.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatDrawer.vue?vue&type=style&index=0&id=55649f6e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-55649f6e\"]])\n\nexport default __exports__","<template>\n  <v-card\n    ref=\"root\"\n    class=\"message prompt\"\n    :class=\"isThread ? 'thread-prompt' : ''\"\n  >\n    <pre>{{ message ? message.content : \"\" }}</pre>\n  </v-card>\n</template>\n\n<script setup>\nimport { ref, onMounted, watch } from \"vue\";\n\nconst root = ref();\nconst props = defineProps({\n  message: {\n    type: Object,\n    required: true,\n  },\n  columns: {\n    type: Number,\n    required: true,\n  },\n  isThread: {\n    type: Boolean,\n    default: false,\n  },\n});\n\nwatch(\n  () => props.columns,\n  () => {\n    root.value.$el.style.setProperty(\"--columns\", props.columns);\n  },\n);\n\nonMounted(() => {\n  root.value.$el.style.setProperty(\"--columns\", props.columns);\n});\n</script>\n\n<style scoped>\n.message {\n  border-radius: 8px;\n  padding: 16px;\n  word-wrap: break-word;\n  text-align: left;\n}\n\n.prompt {\n  background-color: rgb(var(--v-theme-prompt));\n  width: fit-content;\n  grid-column: 1 / span var(--columns);\n}\n\n.prompt pre {\n  white-space: pre-wrap;\n  font-family: inherit;\n}\n\n.thread-prompt {\n  width: 100%;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n}\n</style>\n","import script from \"./ChatPrompt.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatPrompt.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatPrompt.vue?vue&type=style&index=0&id=4ce9f836&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4ce9f836\"]])\n\nexport default __exports__","<template>\n  <template v-for=\"(message, index) in currentChatMessages\" :key=\"index\">\n    <chat-prompt\n      v-if=\"message.type === 'prompt'\"\n      :message=\"message\"\n      :columns=\"1\"\n      :isThread=\"true\"\n    ></chat-prompt>\n    <chat-response\n      v-else\n      :chat=\"chat\"\n      :columns=\"1\"\n      :messages=\"message\"\n      :messagePromptIndex=\"messagePromptIndex\"\n      :isThread=\"true\"\n    ></chat-response>\n  </template>\n</template>\n\n<script setup>\nimport ChatPrompt from \"@/components/Messages/ChatPrompt.vue\";\nimport ChatResponse from \"@/components/Messages/ChatResponse.vue\";\nimport Threads from \"@/store/threads\";\nimport { useObservable } from \"@vueuse/rxjs\";\nimport { liveQuery } from \"dexie\";\nimport { nextTick } from \"vue\";\nimport { autoScrollToBottom } from \"@/helpers/scroll-helper\";\n\nconst props = defineProps({\n  chat: {\n    type: Object,\n  },\n  messageIndex: {\n    type: String,\n    required: true,\n  },\n  messagePromptIndex: {\n    type: String,\n    required: true,\n  },\n});\n\nconst currentChatMessages = useObservable(\n  liveQuery(async () => {\n    const keys = await Threads.table\n      .where(\"messageIndex\")\n      .equals(props.messageIndex)\n      .primaryKeys();\n    console.log(\"thread key count: \", keys.length);\n    const messages = await Threads.table.bulkGet(keys);\n    messages.sort((a, b) => a.createdTime - b.createdTime);\n\n    const groupedMessage = [];\n    let responses = Object.create(null);\n    for (let i = 0; i < messages.length; i++) {\n      const message = messages[i];\n      if (message.type === \"prompt\") {\n        if (Object.keys(responses).length !== 0) {\n          groupedMessage.push.apply(groupedMessage, Object.values(responses));\n        }\n        groupedMessage.push(message);\n        responses = Object.create(null);\n        continue;\n      }\n\n      if (message.hide !== true) {\n        if (!responses[message.className]) {\n          responses[message.className] = [];\n        }\n        responses[message.className].push(message);\n      }\n    }\n    if (Object.keys(responses).length !== 0) {\n      groupedMessage.push.apply(groupedMessage, Object.values(responses));\n    }\n\n    currentChatMessages.value = groupedMessage;\n    nextTick(() => autoScrollToBottom());\n    console.log(\"groupedMessage threads: \", groupedMessage);\n    return groupedMessage;\n  }),\n);\n</script>\n","import script from \"./ChatThread.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatThread.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <v-card\n    ref=\"root\"\n    :class=\"[\n      'message',\n      isHighlighted && isSelectedResponsesEmpty ? 'highlight-border' : '',\n      props.isThread ? 'response-thread' : 'response',\n      isSelectedResponsesEmpty ? 'cursor-auto' : 'cursor-pointer',\n      isSelected ? 'highlight-border' : '',\n    ]\"\n    :loading=\"isAllDone ? false : 'primary'\"\n    :flat=\"props.isThread\"\n    :ripple=\"!isSelectedResponsesEmpty\"\n    @click=\"!isSelectedResponsesEmpty && select($event)\"\n  >\n    <v-card-title class=\"title\">\n      <img\n        :src=\"botLogo\"\n        :class=\"{ invert: isBotLogoInverted }\"\n        :alt=\"botFullname\"\n      />\n      {{ botFullname }}\n      <v-spacer></v-spacer>\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon\n        @click=\"toggleHighlight\"\n        :color=\"isHighlighted ? 'primary' : ''\"\n        :class=\"getButtonClass\"\n        v-show=\"isSelectedResponsesEmpty\"\n      >\n        <v-icon>mdi-lightbulb-on-outline</v-icon>\n      </v-btn>\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon\n        @click=\"copyToClipboard\"\n        v-show=\"isSelectedResponsesEmpty\"\n        :class=\"getButtonClass\"\n      >\n        <v-icon>mdi-content-copy</v-icon>\n      </v-btn>\n      <v-btn\n        flat\n        size=\"x-small\"\n        v-show=\"isSelectedResponsesEmpty\"\n        icon\n        @click=\"hide\"\n        :class=\"getButtonClass\"\n      >\n        <v-icon>mdi-delete</v-icon>\n      </v-btn>\n      <v-btn\n        flat\n        size=\"x-small\"\n        icon\n        :class=\"getSelectButtonClass\"\n        @click=\"select($event)\"\n      >\n        <v-icon>{{\n          isSelected ? \"mdi-check-circle\" : \"mdi-check-circle-outline\"\n        }}</v-icon>\n      </v-btn>\n    </v-card-title>\n    <template v-if=\"messages && messages.length === 1\">\n      <v-md-preview :text=\"messages[0].content\" @click=\"handleClick\" />\n      <template v-if=\"!isThread && messages.length && messages[0].hasThread\">\n        <chat-thread\n          :chat=\"chat\"\n          :messageIndex=\"messages[0].index\"\n          :messagePromptIndex=\"messages[0].promptIndex\"\n        ></chat-thread>\n      </template>\n    </template>\n    <v-carousel\n      v-else\n      hide-delimiter-background\n      :hide-delimiters=\"true\"\n      height=\"auto\"\n      :show-arrows=\"false\"\n      v-model=\"carouselModel\"\n    >\n      <v-carousel-item v-for=\"(message, i) in messages\" :key=\"i\">\n        <v-md-preview :text=\"message.content\" @click=\"handleClick\" />\n        <template v-if=\"!isThread && message && message.hasThread\">\n          <chat-thread\n            :chat=\"chat\"\n            :messageIndex=\"message.index\"\n            :messagePromptIndex=\"messages[0].promptIndex\"\n          ></chat-thread>\n        </template>\n      </v-carousel-item>\n    </v-carousel>\n    <v-card class=\"response\" style=\"padding: 0; margin-top: 0.5rem\" flat>\n      <v-card-title style=\"display: flex; padding: 0\">\n        <v-spacer></v-spacer>\n        <v-btn\n          flat\n          icon\n          size=\"x-small\"\n          ref=\"pageLeftButton\"\n          v-if=\"isShowPagingButton\"\n          @click=\"pageLeft\"\n          :disabled=\"carouselModel === 0\"\n        >\n          <v-icon>mdi-menu-left</v-icon>\n        </v-btn>\n        <v-btn\n          flat\n          icon\n          size=\"x-small\"\n          ref=\"pageRightButton\"\n          v-if=\"isShowPagingButton\"\n          @click=\"pageRight\"\n          :disabled=\"carouselModel === maxPage\"\n        >\n          <v-icon>mdi-menu-right</v-icon>\n        </v-btn>\n        <v-btn\n          flat\n          icon\n          size=\"x-small\"\n          v-if=\"!(!isShowResendButton && !isShowReplyButton)\"\n          :style=\"{ visibility: isShowResendButton ? 'visible' : 'hidden' }\"\n          @click=\"resendPrompt(messages[0])\"\n        >\n          <v-icon>mdi-refresh</v-icon>\n        </v-btn>\n        <v-btn\n          flat\n          icon\n          size=\"x-small\"\n          v-if=\"isShowReplyButtonInDOM\"\n          :style=\"{ visibility: isShowReplyButton ? 'visible' : 'hidden' }\"\n          :color=\"isShowReplyTextField ? 'primary' : ''\"\n          @click=\"toggleReplyButton\"\n        >\n          <v-icon>mdi-reply</v-icon>\n        </v-btn>\n      </v-card-title>\n      <div\n        v-show=\"isShowReplyTextField && isShowReplyButton\"\n        style=\"display: flex; align-items: flex-end; margin-top: 1rem\"\n      >\n        <v-textarea\n          style=\"\n            padding-left: 0.1rem;\n            padding-right: 0.5rem;\n            padding-bottom: 0.1rem;\n          \"\n          ref=\"replyRef\"\n          v-model=\"replyModel\"\n          auto-grow\n          max-rows=\"8.5\"\n          rows=\"1\"\n          density=\"compact\"\n          hide-details\n          variant=\"solo\"\n          :placeholder=\"`${$t('footer.sendPrompt')} ${botFullname}`\"\n          @keydown=\"filterEnterKey\"\n        ></v-textarea>\n        <v-btn\n          :disabled=\"replyModel.trim() === ''\"\n          color=\"primary\"\n          size=\"small\"\n          @click=\"sendPromptToBot\"\n        >\n          <v-icon>mdi-send</v-icon>\n        </v-btn>\n      </div>\n    </v-card>\n  </v-card>\n  <ConfirmModal ref=\"confirmModal\" />\n</template>\n\n<script setup>\nimport bots from \"@/bots\";\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport { useMatomo } from \"@/composables/matomo\";\nimport i18n from \"@/i18n\";\nimport Messages from \"@/store/messages\";\nimport Threads from \"@/store/threads\";\nimport { Theme } from \"@/theme\";\nimport { computed, nextTick, onMounted, ref, toRaw, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport ChatThread from \"./ChatThread.vue\";\n\nconst props = defineProps({\n  chat: {\n    type: Object,\n  },\n  messages: {\n    type: Array,\n    required: true,\n  },\n  columns: {\n    type: Number,\n    required: true,\n  },\n  messagePromptIndex: {\n    type: String,\n  },\n  isThread: {\n    type: Boolean,\n    default: false,\n  },\n});\n\nconst matomo = useMatomo();\nconst store = useStore();\nconst messages = computed(() => props.messages);\nconst chat = computed(() => props.chat);\nwatch(\n  messages,\n  async () => {\n    carouselModel.value = maxPage.value;\n  },\n  { deep: true },\n);\n\nconst root = ref();\nconst replyModel = ref(\"\");\nconst replyRef = ref();\nconst pageLeftButton = ref();\nconst pageRightButton = ref();\nconst maxPage = computed(() => props.messages.length - 1);\nconst carouselModel = ref(maxPage.value);\nconst confirmModal = ref(null);\nconst isSelected = ref(false);\nconst isSelectedList = ref([]);\nconst isSelectedResponsesEmpty = ref(\n  store.state.selectedResponses.length === 0,\n);\nconst botInstance = computed(() => {\n  return messages.value && messages.value.length\n    ? bots.getBotByClassName(messages.value[0].className)\n    : undefined;\n});\n\nconst botLogo = computed(() => {\n  return botInstance.value ? botInstance.value.getLogo() : \"\";\n});\n\nconst botFullname = computed(() => {\n  return botInstance.value ? botInstance.value.getFullname() : \"\";\n});\n\nconst isBotLogoInverted = computed(() => {\n  return store.state.theme === Theme.DARK && botInstance.value?.isDarkLogo();\n});\n\nconst isHighlighted = computed(() =>\n  props.messages.length ? props.messages[maxPage.value].highlight : false,\n); // if last response is hightlighted, return true\nconst isAllDone = computed(() => !props.messages.some((m) => !m.done)); // if any message is not done, return false\nconst isLatestPrompt = computed(\n  // if the current message response to user latest prompt, return true\n  // this flag is used to determine whether to hide Resend button, hide it when is not latest prompt\n  // to ensure the prompt and response in messagesRef array is in correct order\n  () =>\n    props.messages.length &&\n    props.chat?.latestPromptIndex === props.messages[0].promptIndex,\n);\n\nconst isLatestPromptForThread = computed(() => {\n  if (props.isThread) {\n    // if the current thread is response latest prompt, return true\n    // this flag is used to determine whether to hide Resend button in thread, hide it when is not latest prompt\n    // to ensure the prompt and response in messagesRef array is in correct order\n    // const responseIndex = props.chat.threads[props.threadIndex].responseIndex; // get responseIndex, from current thread\n    const threadPromptIndex = messages.value?.length\n      ? messages.value[0].promptIndex\n      : undefined; // using responseIndex to get response from messagesRef, and in the repsonse we can retrieve promptIndex\n    return props.chat?.latestThreadPromptIndex === threadPromptIndex;\n  }\n  return false;\n});\nconst isShowReplyTextField = ref(false);\nconst isShowReplyButton = computed(() => {\n  return (\n    // show the thread text field when all conditions met\n    !props.isThread && // if current response is not a thread,\n    isAllDone.value && // if all response done,\n    messageBotIsSelected.value && // if responding bot selected,\n    isLatestPrompt.value // if current response is a response to latest prompt,\n  );\n});\nconst isShowReplyButtonInDOM = computed(() => {\n  if (props.isThread) {\n    return false;\n  } else {\n    return !(!isShowResendButton.value && !isShowReplyButton.value);\n  }\n});\nconst isSomeResponsesHasThread = computed(() =>\n  // if some responses contain threadIndex, return true\n  props.messages.some((m) => m.hasThread),\n);\n\nconst isShowResendButton = computed(() => {\n  // show the resend button when all conditions met\n  if (props.isThread) {\n    return (\n      props.chat &&\n      isAllDone.value && // if all response done\n      messageBotIsSelected.value && // if responding bot selected\n      props.messages[0].promptIndex && // if current threads is a response to latest prompt\n      props.chat.latestPromptIndex &&\n      props.chat.latestPromptIndex === props.messagePromptIndex &&\n      isLatestPromptForThread.value\n    );\n  } else {\n    return (\n      !isSomeResponsesHasThread.value && // if all responses don't have thread\n      isAllDone.value && // if all response done\n      messageBotIsSelected.value && // if responding bot selected\n      isLatestPrompt.value // if current response is a response to latest prompt\n    );\n  }\n});\nconst isShowPagingButton = computed(() => props.messages.length > 1);\nconst getButtonClass = computed(() => ({\n  \"hide-btn\": !props.isThread,\n  \"hide-thread-btn\": props.isThread,\n}));\nconst getSelectButtonClass = computed(() => ({\n  \"hide-btn\": !props.isThread && isSelectedResponsesEmpty.value,\n  \"hide-thread-btn\": props.isThread && isSelectedResponsesEmpty.value,\n}));\nconst messageBotIsSelected = computed(() => {\n  if (!messages.value.length) {\n    return false;\n  }\n  var favBot = chat.value?.favBots.find(\n    (b) => b.classname === props.messages[0].className,\n  );\n  return favBot?.selected;\n});\n\n// Send the prompt when the user presses enter and prevent the default behavior\n// But if the shift, ctrl, alt, or meta keys are pressed, do as default\nfunction filterEnterKey(event) {\n  if (\n    event.keyCode == 13 &&\n    !event.shiftKey &&\n    !event.ctrlKey &&\n    !event.altKey &&\n    !event.metaKey\n  ) {\n    event.preventDefault();\n    sendPromptToBot();\n  }\n}\n\nfunction sendPromptToBot() {\n  if (replyModel.value.trim() === \"\") return;\n\n  store.dispatch(\"sendPromptInThread\", {\n    messageIndex: messages.value[messages.value.length - 1].index, // always send prompt in thread to last page\n    prompt: replyModel.value,\n    bot: botInstance.value,\n  });\n\n  carouselModel.value = maxPage.value; // move to last page\n\n  // Clear the textarea after sending the prompt\n  replyModel.value = \"\";\n}\n\nwatch(\n  () => props.columns,\n  () => {\n    root.value.$el.style.setProperty(\"--columns\", props.columns);\n  },\n);\n\nwatch(\n  () => store.state.selectedResponses.length,\n  updateIsSelectedResponsesEmpty,\n);\n\nonMounted(() => {\n  root.value.$el.style.setProperty(\"--columns\", props.columns);\n});\n\nfunction copyToClipboard() {\n  let content = props.messages[carouselModel.value].content;\n  if (props.messages[carouselModel.value].format === \"html\") {\n    content = content.replace(/<[^>]*>?/gm, \"\");\n  }\n  navigator.clipboard.writeText(content);\n  matomo.value?.trackEvent(\"vote\", \"copy\", props.messages[0].className, 1);\n}\n\nfunction toggleHighlight() {\n  if (props.isThread) {\n    Threads.update(props.messages[maxPage.value].index, {\n      highlight: !isHighlighted.value,\n    });\n  } else {\n    Messages.update(props.messages[maxPage.value].index, {\n      highlight: !isHighlighted.value,\n    });\n  }\n  matomo.value?.trackEvent(\n    \"vote\",\n    \"highlight\",\n    props.messages[maxPage.value].className,\n    props.messages[maxPage.value].highlight ? -1 : 1,\n  );\n}\n\nasync function hide() {\n  const result = await confirmModal.value.showModal(\n    i18n.global.t(\"modal.confirmHide\"),\n  );\n  if (result) {\n    if (props.isThread) {\n      Threads.update(props.messages[carouselModel.value].index, {\n        hide: true,\n      });\n    } else {\n      Messages.update(props.messages[carouselModel.value].index, {\n        hide: true,\n      });\n    }\n    matomo.value?.trackEvent(\"vote\", \"hide\", props.messages[0].className, 1);\n  }\n}\n\nfunction handleClick(event) {\n  const target = event.target;\n  if (target.tagName !== \"A\" && target.parentElement.tagName !== \"A\") {\n    return;\n  }\n  if (target.target === \"innerWindow\") {\n    // Open in Electron inner window\n    return;\n  }\n  // Open in external browser\n  event.preventDefault();\n  const electron = window.require(\"electron\");\n  const url = target.href || target.parentElement.href;\n  electron.shell.openExternal(url);\n}\n\nasync function resendPrompt(responseMessage) {\n  matomo.value?.trackEvent(\"vote\", \"resend\", responseMessage.className, 1);\n\n  if (responseMessage.promptIndex === undefined) {\n    return;\n  }\n  if (props.isThread) {\n    const promptMessage = await Threads.table.get(responseMessage.promptIndex);\n    if (promptMessage) {\n      store.dispatch(\"sendPromptInThread\", {\n        prompt: promptMessage.content,\n        bot: botInstance.value,\n        promptIndex: responseMessage.promptIndex,\n        messageIndex: messages.value[maxPage.value].messageIndex, // always send prompt in thread to last page\n      });\n    } else {\n      // show not found\n    }\n  } else {\n    const promptMessage = await Messages.table.get(responseMessage.promptIndex);\n    if (promptMessage) {\n      store.dispatch(\"sendPrompt\", {\n        prompt: promptMessage.content,\n        bots: [botInstance.value],\n        promptIndex: responseMessage.promptIndex,\n      });\n    } else {\n      // show not found\n    }\n  }\n}\n\nfunction toggleReplyButton() {\n  isShowReplyTextField.value = !isShowReplyTextField.value;\n  if (isShowReplyTextField.value) {\n    nextTick().then(replyRef.value.focus);\n  }\n}\n\nlet selectedIndex = undefined;\nasync function select(event) {\n  event.stopPropagation();\n  if (\n    pageLeftButton.value?.$el.contains(event.target) ||\n    pageRightButton.value?.$el.contains(event.target)\n  ) {\n    // return when click on page left, right button\n    return;\n  }\n\n  if (isSelected.value) {\n    store.commit(\"deleteSelectedResponses\", selectedIndex);\n    isSelected.value = false;\n    const index = isSelectedList.value.indexOf(carouselModel.value);\n    isSelectedList.value.splice(index, 1);\n  } else {\n    selectedIndex = await store.dispatch(\"addSelectedResponses\", {\n      ...toRaw(props.messages[carouselModel.value]),\n    });\n    isSelected.value = true;\n    isSelectedList.value.push(carouselModel.value);\n  }\n}\n\nfunction updateIsSelectedResponsesEmpty() {\n  isSelectedResponsesEmpty.value = store.state.selectedResponses.length === 0;\n  if (isSelectedResponsesEmpty.value) {\n    isSelected.value = false;\n    isSelectedList.value = [];\n  }\n}\n\nfunction pageLeft() {\n  carouselModel.value = Math.max(carouselModel.value - 1, 0);\n  isSelected.value = isSelectedList.value.includes(carouselModel.value);\n}\n\nfunction pageRight() {\n  carouselModel.value = Math.min(carouselModel.value + 1, maxPage.value);\n  isSelected.value = isSelectedList.value.includes(carouselModel.value);\n}\n</script>\n\n<style scoped>\n:deep() .v-responsive__content {\n  overflow: auto;\n}\n\n.message {\n  border-radius: 8px;\n  padding: 16px;\n  word-wrap: break-word;\n  text-align: left;\n}\n\n.highlight-border {\n  box-shadow: 0 0 0 2px rgba(var(--v-theme-primary), 1);\n}\n\n.prompt {\n  background-color: rgb(var(--v-theme-prompt));\n  width: fit-content;\n  grid-column: 1 / span var(--columns);\n}\n\n.prompt pre {\n  white-space: pre-wrap;\n  font-family: inherit;\n}\n\n.response {\n  background-color: rgb(var(--v-theme-response));\n  width: 100%;\n  grid-column: auto / span 1;\n}\n\n.response-thread {\n  background-color: rgb(var(--v-theme-response));\n  width: 99%;\n  grid-column: auto / span 1;\n  margin: auto;\n  margin-bottom: 0.2rem;\n}\n\n.title {\n  display: flex;\n  align-items: center;\n  font-size: 1rem;\n  padding: 0;\n  margin-bottom: 8px;\n}\n\n.title img {\n  width: 20px;\n  height: 20px;\n  margin-right: 4px;\n  border-radius: 4px;\n}\n\n.v-btn {\n  background-color: inherit;\n}\n\n:deep() pre.error {\n  max-height: 200px;\n  white-space: inherit;\n  background-color: inherit;\n}\n\n.hide-btn,\n.hide-thread-btn {\n  transition: 0.3s;\n  opacity: 0;\n}\n\n.response:hover .hide-btn,\n.response-thread:hover .hide-thread-btn {\n  opacity: 1;\n}\n\n.invert {\n  filter: invert(100%);\n}\n\n.cursor-pointer {\n  cursor: pointer;\n}\n\n.cursor-auto {\n  cursor: auto;\n}\n</style>\n","import script from \"./ChatResponse.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatResponse.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatResponse.vue?vue&type=style&index=0&id=4a895324&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4a895324\"]])\n\nexport default __exports__","<template>\n  <v-container v-if=\"loading\" class=\"ma-0 position-fixed\" style=\"z-index: 1\">\n    <v-label class=\"bg-background\" style=\"opacity: 1\">{{\n      $t(\"chat.loading\")\n    }}</v-label>\n  </v-container>\n  <div class=\"messages\">\n    <div\n      class=\"message-grid\"\n      :style=\"{ gridTemplateColumns: gridTemplateColumns }\"\n    >\n      <template v-for=\"(message, index) in currentChatMessages\" :key=\"index\">\n        <chat-prompt\n          v-if=\"message.type === 'prompt'\"\n          :columns=\"columns\"\n          :message=\"message\"\n        ></chat-prompt>\n        <chat-response\n          v-else\n          :chat=\"chat\"\n          :columns=\"columns\"\n          :messages=\"message\"\n        ></chat-response>\n      </template>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport Messages from \"@/store/messages\";\nimport { liveQuery } from \"dexie\";\nimport { computed, nextTick, onMounted, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport ChatPrompt from \"./ChatPrompt.vue\";\nimport ChatResponse from \"./ChatResponse.vue\";\nimport { autoScrollToBottom, scrollToBottom } from \"@/helpers/scroll-helper\";\n\nconst store = useStore();\n\nconst props = defineProps({\n  columns: {\n    type: Number,\n    default: 3,\n  },\n  chat: {\n    type: Object,\n  },\n});\n\nconst loading = ref(false);\nconst gridTemplateColumns = computed(() => `repeat(${props.columns}, 1fr)`);\nconst currentChatMessages = ref([]);\nlet createChatMessageLiveQuery = (index) => {\n  return liveQuery(async () => {\n    const keys = await Messages.table\n      .where(\"chatIndex\")\n      .equals(index)\n      .primaryKeys();\n    const messages = await Messages.table.bulkGet(keys);\n    messages.sort((a, b) => a.createdTime - b.createdTime);\n    const groupedMessage = [];\n    let responses = Object.create(null);\n    for (let i = 0; i < messages.length; i++) {\n      const message = messages[i];\n      if (message.type === \"prompt\") {\n        if (Object.keys(responses).length !== 0) {\n          groupedMessage.push.apply(groupedMessage, Object.values(responses));\n        }\n        groupedMessage.push(message);\n        responses = Object.create(null);\n        continue;\n      }\n      if (message.hide !== true) {\n        if (!responses[message.className]) {\n          // group responses with same bot for carousel\n          responses[message.className] = [];\n        }\n        responses[message.className].push(message);\n      }\n    }\n    if (Object.keys(responses).length !== 0) {\n      groupedMessage.push.apply(groupedMessage, Object.values(responses));\n    }\n    currentChatMessages.value = groupedMessage;\n    nextTick(() => autoScrollToBottom());\n  });\n};\n\nconst currentChatIndex = computed(() => store.state.currentChatIndex);\nlet currentMessageSub;\nlet scrollToBottomFirst;\nwatch(\n  currentChatIndex,\n  (newChat, oldChat) => {\n    if (newChat !== oldChat) {\n      loading.value = true;\n      scrollToBottomFirst = true;\n      if (currentMessageSub) {\n        currentMessageSub.unsubscribe();\n      }\n      currentMessageSub = createChatMessageLiveQuery(\n        store.state.currentChatIndex,\n      ).subscribe(() => {\n        loading.value = false;\n        if (scrollToBottomFirst) {\n          scrollToBottomFirst = false;\n          nextTick(() => scrollToBottom({ immediately: true }));\n        }\n      });\n    }\n  },\n  { immediate: true },\n);\n\nonMounted(async () => {\n  await Messages.table\n    .filter((message) => message.done !== true)\n    .modify({ done: true });\n});\n</script>\n\n<style scoped>\n.messages {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  height: 100%;\n  overflow-y: auto;\n  gap: 16px;\n  padding: 0;\n}\n\n.message-grid {\n  display: grid;\n  grid-gap: 16px;\n  width: 100%;\n  padding: 2rem;\n}\n</style>\n","import script from \"./ChatMessages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatMessages.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatMessages.vue?vue&type=style&index=0&id=7d347add&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7d347add\"]])\n\nexport default __exports__","<template>\n  <v-list>\n    <v-list-item>\n      <v-list-item-title>{{ $t(\"proxy.enableProxy\") }}</v-list-item-title>\n      <v-checkbox\n        :label=\"$t('settings.enable')\"\n        v-model=\"proxySettings.enableProxy\"\n        hide-details\n      ></v-checkbox>\n    </v-list-item>\n\n    <v-list-item>\n      <v-list-item-title>{{ $t(\"proxy.proxyMode\") }} </v-list-item-title>\n      <v-radio-group inline hide-details v-model=\"proxySettings.proxyMode\">\n        <v-radio :label=\"$t('proxy.globalMode')\" value=\"normal\"></v-radio>\n        <v-radio :label=\"$t('proxy.pacFileMode')\" value=\"pacFile\"></v-radio>\n        <v-radio :label=\"$t('proxy.pacUrlMode')\" value=\"pacUrl\"></v-radio>\n      </v-radio-group>\n    </v-list-item>\n\n    <v-list-item v-if=\"proxySettings.proxyMode == 'normal'\">\n      <v-list-item-title>{{ $t(\"proxy.address\") }}</v-list-item-title>\n      <v-text-field\n        v-model=\"proxySettings.proxyServer\"\n        :hint=\"\n          $t('settings.forExample', { example: $t('proxy.addressExample') })\n        \"\n        persistent-hint\n      ></v-text-field>\n      <v-list-item-title>{{ $t(\"proxy.byPass\") }}</v-list-item-title>\n      <v-tabs fixed-tabs v-model=\"bypassSetMode\">\n        <v-tab value=\"quickSet\">\n          {{ $t(\"proxy.quickSet\") }}\n        </v-tab>\n        <v-tab value=\"fullSet\">\n          {{ $t(\"proxy.fullSet\") }}\n        </v-tab>\n      </v-tabs>\n      <v-card>\n        <v-row\n          class=\"align-content-start\"\n          v-if=\"bypassSetMode == 'quickSet'\"\n          dense\n        >\n          <template v-for=\"(bot, index) in bots\" :key=\"index\">\n            <v-col cols=\"auto\" class=\"pt-2\">\n              <v-checkbox\n                v-model=\"botsProxy\"\n                :label=\"bot.name\"\n                :value=\"bot.name\"\n                hide-details\n              ></v-checkbox>\n            </v-col>\n          </template>\n        </v-row>\n      </v-card>\n      <v-card v-if=\"bypassSetMode == 'fullSet'\">\n        <v-textarea\n          v-model=\"proxySettings.proxyBypassList\"\n          :hint=\"$t('proxy.byPassHint')\"\n          persistent-hint\n        ></v-textarea>\n      </v-card>\n    </v-list-item>\n\n    <v-list-item v-if=\"proxySettings.proxyMode == 'pacFile'\">\n      <v-list-item-title>{{ $t(\"proxy.pacFile\") }}</v-list-item-title>\n      <v-text-field\n        v-model=\"proxySettings.pacFile\"\n        :label=\"$t('proxy.pacFileUsing')\"\n        disabled\n      ></v-text-field>\n      <v-file-input\n        :label=\"$t('proxy.pacFileNew')\"\n        @change=\"onFileChange\"\n      ></v-file-input>\n    </v-list-item>\n\n    <v-list-item v-if=\"proxySettings.proxyMode == 'pacUrl'\">\n      <v-list-item-title>{{ $t(\"proxy.pacUrl\") }}</v-list-item-title>\n      <v-text-field\n        v-model=\"proxySettings.pacUrl\"\n        :label=\"$t('proxy.pacUrl')\"\n      ></v-text-field>\n    </v-list-item>\n\n    <v-list-item>\n      <v-btn color=\"primary\" @click=\"saveAndActive\" class=\"ma-2 pa-2\">\n        {{ $t(\"proxy.saveAndApply\") }}\n      </v-btn>\n      <v-btn variant=\"outlined\" color=\"primary\" @click=\"onlySave\">\n        {{ $t(\"proxy.onlySave\") }}\n      </v-btn>\n      <v-btn\n        variant=\"outlined\"\n        color=\"primary\"\n        @click=\"reload\"\n        class=\"ma-2 pa-2\"\n      >\n        {{ $t(\"proxy.reload\") }}\n      </v-btn>\n      <v-btn variant=\"outlined\" color=\"primary\" @click=\"resetAll\">\n        {{ $t(\"proxy.reset\") }}\n      </v-btn>\n    </v-list-item>\n\n    <v-list-item>\n      <v-divider></v-divider>\n    </v-list-item>\n    <v-list-item>\n      <v-list-item-title>{{ $t(\"proxy.proxyFilePath\") }}</v-list-item-title>\n      <v-text-field\n        v-model=\"userDataPath\"\n        disabled\n        :hint=\"$t('proxy.proxyFilePathHint')\"\n        persistent-hint\n      ></v-text-field>\n    </v-list-item>\n  </v-list>\n\n  <v-snackbar\n    v-model=\"snackbar.show\"\n    :timeout=\"snackbar.timeout\"\n    :color=\"snackbar.color\"\n  >\n    {{ snackbar.text }}\n  </v-snackbar>\n\n  <ConfirmModal ref=\"confirmModal\" />\n</template>\n\n<script setup>\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport i18n from \"@/i18n\";\nimport { onMounted, reactive, ref, watch } from \"vue\";\n\nconst electron = window.require(\"electron\");\nconst ipcRenderer = electron.ipcRenderer;\nconst confirmModal = ref(null);\n\nconst proxySettings = ref({});\nconst userDataPath = ref(\"\");\nconst snackbar = reactive({\n  show: false,\n  text: \"\",\n  timeout: 1500,\n  color: \"success\",\n});\n\nconst bots = ref([\n  {\n    name: i18n.global.t(\"bard.name\"),\n    bypassList: \"*.google.com\",\n  },\n  {\n    name: i18n.global.t(\"bingChat.name\"),\n    bypassList: \"*.bing.com\",\n  },\n  {\n    name: i18n.global.t(\"chatGpt.name\"),\n    bypassList: \"*.openai.com\",\n  },\n  {\n    name: i18n.global.t(\"ernie.name\"),\n    bypassList: \"yiyan.baidu.com\",\n  },\n  {\n    name: i18n.global.t(\"huggingChat.name\"),\n    bypassList: \"*.huggingface.co\",\n  },\n  {\n    name: i18n.global.t(\"gradio.name\"),\n    bypassList: \"*.gradio.app\",\n  },\n  {\n    name: i18n.global.t(\"lmsys.name\"),\n    bypassList: \"*.lmsys.org\",\n  },\n  {\n    name: i18n.global.t(\"moss.name\"),\n    bypassList: \"*.moss.fastnlp.top\",\n  },\n  {\n    name: i18n.global.t(\"openaiApi.name\"),\n    bypassList: \"*.openai.com\",\n  },\n  {\n    name: i18n.global.t(\"azureOpenaiApi.name\"),\n    bypassList: \"*.azure.com\",\n  },\n  {\n    name: i18n.global.t(\"poe.name\"),\n    bypassList: \"*.poe.com\",\n  },\n  {\n    name: i18n.global.t(\"qianWen.name\"),\n    bypassList: \"*.aliyun.com\",\n  },\n  {\n    name: i18n.global.t(\"skyWork.name\"),\n    bypassList: \"*.tiangong.cn\",\n  },\n  {\n    name: i18n.global.t(\"spark.name\"),\n    bypassList: \"*.xfyun.cn;*.mudu.tv;geetest.com\",\n  },\n  {\n    name: i18n.global.t(\"wenxinQianfan.name\"),\n    bypassList: \"*.aip.baidubce.com\",\n  },\n  {\n    name: i18n.global.t(\"proxy.googleService\"),\n    bypassList: \"*.google.com\",\n  },\n]);\nconst botsProxy = ref([]);\nconst newInputfile = ref(\"\");\nconst bypassSetMode = ref(\"\");\n\nonMounted(async () => {\n  userDataPath.value = await ipcRenderer.invoke(\"get-proxy-setting-path\");\n  proxySettings.value = await ipcRenderer.invoke(\"get-proxy-setting-content\");\n  botsProxy.value = JSON.parse(proxySettings.value.bypassBotsProxy);\n});\n\nasync function resetAll() {\n  const result = await confirmModal.value.showModal(\n    \"\",\n    i18n.global.t(\"proxy.resetAllMessage\"),\n  );\n  if (result) {\n    await ipcRenderer.invoke(\"reset-proxy-default-setting\");\n    proxySettings.value = await ipcRenderer.invoke(\"get-proxy-setting-content\");\n  }\n}\n\nasync function reload() {\n  const result = await confirmModal.value.showModal(\n    \"\",\n    i18n.global.t(\"proxy.reloadMessage\"),\n  );\n  if (result) {\n    proxySettings.value = await ipcRenderer.invoke(\"get-proxy-setting-content\");\n  }\n}\n\nasync function onlySave() {\n  console.log(proxySettings.value);\n  const oldPacFile = proxySettings.value.pacFile;\n  if (newInputfile.value) {\n    proxySettings.value.pacFile = newInputfile.value;\n  }\n  const data = JSON.parse(JSON.stringify(proxySettings.value));\n  const reply = await ipcRenderer.invoke(\"save-proxy-setting\", { data });\n  console.log(reply);\n  if (reply.success) {\n    snackbar.text = i18n.global.t(\"proxy.saveSuccess\");\n    snackbar.color = \"success\";\n    snackbar.timeout = 1000;\n  } else {\n    proxySettings.value.pacFile = oldPacFile;\n    // snackbar.text = `Save failed: ${reply.error}`;\n    snackbar.text = `${i18n.global.t(\"proxy.saveFailed\")}: ${reply.error}`;\n    snackbar.color = \"error\";\n    snackbar.timeout = 3000;\n  }\n  snackbar.show = true;\n}\n\nfunction onFileChange(file) {\n  console.log(file);\n  console.log(file.target.files[0].path);\n  newInputfile.value = file.target.files[0].path;\n}\n\nasync function saveAndActive() {\n  const result = await confirmModal.value.showModal(\n    \"\",\n    i18n.global.t(\"proxy.saveAndActiveMessage\"),\n  );\n  if (result) {\n    await onlySave();\n    await ipcRenderer.invoke(\"save-proxy-and-restart\");\n  }\n}\n\nwatch(botsProxy, (newVal) => {\n  let bypassListSet = new Set(proxySettings.value.proxyBypassList.split(\";\"));\n  console.log(bypassListSet);\n  console.log(newVal);\n  newVal.forEach((botName) => {\n    const bot = bots.value.find((bot) => bot.name === botName);\n    if (bot) {\n      bot.bypassList.split(\";\").forEach((item) => bypassListSet.add(item));\n    }\n  });\n  const bypassList = Array.from(bypassListSet).join(\";\");\n  console.log(bypassList); // 输出合并后的bypassList\n  proxySettings.value.proxyBypassList = bypassList;\n  proxySettings.value.bypassBotsProxy = JSON.stringify(botsProxy.value);\n});\n\ndefineExpose({\n  proxySettings,\n  userDataPath,\n  snackbar,\n  onlySave,\n  saveAndActive,\n  reload,\n  resetAll,\n  onFileChange,\n});\n</script>\n","import script from \"./ProxySetting.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ProxySetting.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import {\n  PromptTemplate,\n  FewShotPromptTemplate,\n  LengthBasedExampleSelector,\n} from \"langchain/prompts\";\n\nconst prefixPlaceholder = `Summarize the data below in a markdown table with the bot name, difference, and response rating (1-5) columns.\nDo not include the response' value column in your table.\nSimplify the data and identify the differences.\nEach response is delimited by the \\`resp\\` tag.\nInside every response, the bot's name is delimited by the \\`name\\` tag, and the bot's response is delimited by the \\`value\\` tag.`;\nconst templatePlaceholder = `<resp>\n    <name>{botName}</name>\n    <value>{botResponse}</value>\n</resp>`;\nconst suffixPlaceholder = \"Give me the best response.\";\n\nasync function preview(prefix, exampleTemplate, suffix, data) {\n  const examplePrompt = new PromptTemplate({\n    template: exampleTemplate,\n    inputVariables: [\"botName\", \"botResponse\"],\n  });\n\n  const exampleSelector = await LengthBasedExampleSelector.fromExamples(data, {\n    examplePrompt,\n    maxLength: Number.MAX_VALUE,\n  });\n\n  const dynamicPrompt = new FewShotPromptTemplate({\n    exampleSelector,\n    examplePrompt,\n    prefix: prefix,\n    suffix: suffix,\n    inputVariables: [],\n  });\n  return await dynamicPrompt.format();\n}\n\nexport { prefixPlaceholder, templatePlaceholder, suffixPlaceholder, preview };\n","<template>\n  <CommonBotSettings\n    :settings=\"settings\"\n    :brand-id=\"brandId\"\n    mutation-type=\"setChat\"\n  ></CommonBotSettings>\n  <v-list>\n    <v-list-item>\n      <v-btn\n        color=\"primary\"\n        variant=\"outlined\"\n        :text=\"$t('chat.deleteAllChatHistory')\"\n        @click=\"deleteChats\"\n      ></v-btn>\n    </v-list-item>\n    <br />\n    <v-list-item>\n      <v-list-item-title style=\"font-size: 1.5rem\" class=\"pb-2\">\n        {{ $t(\"chat.exportImport\") }}</v-list-item-title\n      >\n      <v-list-item-subtitle>\n        {{ $t(\"chat.exportImportDesc\") }}</v-list-item-subtitle\n      >\n      <div class=\"pt-2\">\n        <v-btn\n          color=\"primary\"\n          variant=\"outlined\"\n          :text=\"$t('chat.export')\"\n          @click=\"exportData\"\n        ></v-btn>\n        <v-btn\n          color=\"primary\"\n          variant=\"outlined\"\n          :text=\"$t('chat.import')\"\n          @click=\"importData\"\n          style=\"margin-left: 10px\"\n        >\n        </v-btn>\n      </div>\n    </v-list-item>\n    <br />\n    <v-list-item>\n      <v-row>\n        <v-col class=\"align-baseline d-flex\" style=\"font-size: 1.5rem\">\n          <label class=\"pr-3\">{{ $t(\"chat.actions\") }}</label>\n          <v-btn\n            class=\"mt-1\"\n            color=\"primary\"\n            variant=\"outlined\"\n            prepend-icon=\"mdi-plus\"\n            :text=\"$t('chat.addAction')\"\n            @click=\"add\"\n          ></v-btn>\n        </v-col>\n      </v-row>\n    </v-list-item>\n    <v-list-item\n      v-for=\"action in userActions\"\n      density=\"comfortable\"\n      :key=\"action.index\"\n      :value=\"action.index\"\n      :ripple=\"false\"\n    >\n      <div class=\"align-center d-flex\">\n        <v-list-item-title class=\"pr-5\">{{ action.name }}</v-list-item-title>\n        <v-btn\n          flat\n          size=\"x-small\"\n          icon=\"mdi-pencil-outline\"\n          @click=\"edit(action)\"\n          style=\"background-color: transparent\"\n        ></v-btn>\n        <v-btn\n          flat\n          size=\"x-small\"\n          icon=\"mdi-delete-outline\"\n          @click=\"deleteAction(action)\"\n          style=\"margin: 0; background-color: transparent\"\n        ></v-btn>\n      </div>\n    </v-list-item>\n  </v-list>\n  <v-dialog\n    persistent\n    width=\"90%\"\n    height=\"90%\"\n    :model-value=\"isOpenAddEditAction\"\n    @update:model-value=\"isOpenAddEditAction = $event\"\n  >\n    <v-card>\n      <v-form ref=\"formRef\" class=\"pa-3\" @submit.prevent>\n        <v-text-field\n          required\n          autofocus\n          v-model=\"actionName\"\n          placeholder=\"Summarize\"\n          :label=\"$t('chat.actionName')\"\n          :rules=\"[required]\"\n        ></v-text-field>\n        <v-textarea\n          required\n          rows=\"3\"\n          v-model=\"prefix\"\n          :placeholder=\"prefixPlaceholder\"\n          :label=\"$t('chat.prefix')\"\n          @input=\"onInputTemplate\"\n        >\n        </v-textarea>\n        <v-textarea\n          required\n          rows=\"4\"\n          v-model=\"template\"\n          :placeholder=\"templatePlaceholder\"\n          :label=\"$t('chat.actionTemplate')\"\n          :rules=\"[required]\"\n          @input=\"onInputTemplate\"\n        >\n          <template v-slot:append-inner>\n            <v-btn\n              flat\n              size=\"x-small\"\n              icon=\"mdi-help\"\n              style=\"background-color: inherit\"\n              @click=\"\n                isShowTemplateParametersDialog = !isShowTemplateGuideTooltip\n              \"\n            >\n            </v-btn>\n          </template>\n        </v-textarea>\n        <v-textarea\n          required\n          rows=\"3\"\n          v-model=\"suffix\"\n          :placeholder=\"suffixPlaceholder\"\n          :label=\"$t('chat.suffix')\"\n          @input=\"onInputTemplate\"\n        >\n        </v-textarea>\n        <label class=\"pl-4\" style=\"font-size: 1.2rem\">{{\n          $t(\"chat.preview\")\n        }}</label>\n        <chat-prompt\n          class=\"w-100\"\n          :message=\"{ content: previewRef }\"\n          :isThread=\"false\"\n          :columns=\"3\"\n        ></chat-prompt>\n      </v-form>\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn\n          variant=\"outlined\"\n          color=\"primary\"\n          @click=\"isOpenAddEditAction = false\"\n          >{{ $t(\"modal.cancel\") }}</v-btn\n        >\n        <v-btn variant=\"flat\" class=\"bg-primary\" @click=\"addEditAction\">{{\n          $t(\"modal.done\")\n        }}</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n  <v-dialog\n    width=\"auto\"\n    :model-value=\"isShowTemplateParametersDialog\"\n    v-on:after-leave=\"isShowTemplateParametersDialog = false\"\n  >\n    <v-card>\n      <v-md-preview class=\"pa-4\" :text=\"templateParametersInfo\" />\n    </v-card>\n  </v-dialog>\n  <ConfirmModal ref=\"confirmModal\" />\n  <v-snackbar\n    v-model=\"snackbar.show\"\n    :timeout=\"snackbar.timeout\"\n    :color=\"snackbar.color\"\n  >\n    {{ snackbar.text }}\n    <template v-slot:actions>\n      <v-btn variant=\"text\" @click=\"snackbar.show = false\">\n        {{ $t(\"updates.close\") }}\n      </v-btn>\n    </template>\n  </v-snackbar>\n  <v-dialog width=\"85vw\" :model-value=\"isShowImportProgressDialog\" persistent>\n    <v-card>\n      <v-card-title> {{ $t(\"chat.importLog\") }} </v-card-title>\n      <v-textarea\n        readonly\n        hide-details\n        rows=\"20\"\n        v-model=\"importProgressText\"\n        id=\"import-log-textarea\"\n        :loading=\"isImportCompleted === false\"\n      ></v-textarea>\n      <v-card-actions class=\"justify-end pr-6 pt-0\" style=\"gap: 0.3rem\">\n        <v-btn\n          variant=\"text\"\n          @click=\"isShowImportProgressDialog = false\"\n          :disabled=\"isImportCompleted === false\"\n        >\n          {{ $t(\"modal.done\") }}\n        </v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script setup>\nimport bots from \"@/bots\";\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport ChatPrompt from \"@/components/Messages/ChatPrompt.vue\";\nimport CommonBotSettings from \"@/components/BotSettings/CommonBotSettings.vue\";\nimport i18n from \"@/i18n\";\nimport Chats from \"@/store/chats\";\nimport db from \"@/store/db\";\nimport Messages from \"@/store/messages\";\nimport Threads from \"@/store/threads\";\nimport Dexie from \"dexie\";\nimport { exportDB } from \"dexie-export-import\";\nimport localForage from \"localforage\";\nimport { computed, reactive, ref } from \"vue\";\nimport { useStore } from \"vuex\";\nimport {\n  prefixPlaceholder,\n  preview,\n  suffixPlaceholder,\n  templatePlaceholder,\n} from \"../helpers/template-helper\";\nimport { nextTick } from \"vue\";\nimport { Type } from \"./BotSettings/settings.const\";\n\nconst emit = defineEmits([\"close-dialog\"]);\nconst confirmModal = ref();\nconst formRef = ref(null);\nconst isOpenAddEditAction = ref(false);\nconst actionName = ref(\"\");\nconst prefix = ref(\"\");\nconst template = ref(\"\");\nconst suffix = ref(\"\");\nconst previewRef = ref(\"\");\nconst importProgressText = ref(\"\");\nconst isImportCompleted = ref(false);\nconst snackbar = reactive({\n  show: false,\n  text: \"\",\n  timeout: -1,\n  color: \"\",\n});\nconst templateParametersInfo = `\n#### ${i18n.global.t(\"chat.templateParameters\")}:\n| ${i18n.global.t(\"chat.parameter\")}|${i18n.global.t(\"chat.description\")}|\n|-|-|\n|{botName}|${i18n.global.t(\"chat.botNameDesc\")}|\n|{botResponse}|${i18n.global.t(\"chat.botResponseDesc\")}|`;\nconst isShowTemplateParametersDialog = ref(false);\nconst isShowImportProgressDialog = ref(false);\nconst store = useStore();\nconst userActions = computed(() => {\n  return store.state.actions.filter((p) => !p.hide);\n});\nconst previewSampleData = [\n  {\n    botName: \"Copilot (Creative)\",\n    botResponse: \"Hello, this is Bing. How are you today? 😊\",\n  },\n  {\n    botName: \"ChatGPT (GPT-3.5)\",\n    botResponse: \"Hello! How can I assist you today?\",\n  },\n  {\n    botName: \"Bard\",\n    botResponse: \"Hi there! How can I help you today?\",\n  },\n  {\n    botName: \"YouChat\",\n    botResponse: \"Hi there! How can I assist you today?\",\n  },\n];\nconst brandId = \"chat\";\nconst settings = [\n  {\n    type: Type.Slider,\n    name: \"updateDebounceInterval\",\n    title: \"chat.updateDebounceInterval\",\n    description: \"chat.updateDebounceIntervalDesc\",\n    min: 0,\n    max: 2000,\n    step: 100,\n  },\n];\nlet editIndex = undefined;\nlet isEdit = false;\nconst required = (value) =>\n  value?.trim() ? true : i18n.global.t(\"prompt.required\");\n\nconst SETTING_FILE_NAME = \"localforage.json\";\nconst CHAT_FILE_NAME = \"ChatALL.json\";\nconst EXPORT_IMPORT_FILE_EXTENSION = \".ChatALL\";\n\nfunction getExportedFileName() {\n  const date = new Date();\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\n  const day = String(date.getDate()).padStart(2, \"0\");\n  const hour = String(date.getHours()).padStart(2, \"0\");\n  const minute = String(date.getMinutes()).padStart(2, \"0\");\n  const second = String(date.getSeconds()).padStart(2, \"0\");\n  const fileName = `chatall-history-${year}${month}${day}-${hour}${minute}${second}`;\n  return fileName;\n}\n\nasync function exportData() {\n  const confirm = await confirmModal.value.showModal(\n    \"\",\n    i18n.global.t(\"chat.exportDesc\"),\n  );\n  if (confirm === false) {\n    return;\n  }\n  try {\n    const settingBlob = getSettingWithoutBotSetting();\n    const chatHistoryBlob = await exportDB(db);\n\n    const { default: JSZip } = await import(\"jszip\");\n    const zip = new JSZip();\n    zip.file(SETTING_FILE_NAME, settingBlob);\n    zip.file(CHAT_FILE_NAME, chatHistoryBlob);\n    zip.generateAsync({ type: \"blob\" }).then(function (zipBlob) {\n      const url = URL.createObjectURL(zipBlob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = `${getExportedFileName()}${EXPORT_IMPORT_FILE_EXTENSION}`;\n      document.body.appendChild(a);\n\n      // Click the anchor element to download the file.\n      a.click();\n\n      // Remove the anchor element from the document body.\n      document.body.removeChild(a);\n\n      // Revoke the URL for the blob.\n      URL.revokeObjectURL(url);\n    });\n    snackbar.text = i18n.global.t(\"chat.exportSuccess\");\n    snackbar.color = \"success\";\n  } catch (error) {\n    console.error(error);\n    snackbar.text = `${i18n.global.t(\"chat.exportFailed\")}: ${error.message}`;\n    snackbar.color = \"error\";\n  }\n  snackbar.show = true;\n}\n\nasync function importData() {\n  const confirm = await confirmModal.value.showModal(\n    \"\",\n    i18n.global.t(\"chat.importDesc\"),\n  );\n  if (confirm === false) {\n    return;\n  }\n  importProgressText.value = \"\";\n  isImportCompleted.value = false;\n  const input = document.createElement(\"input\");\n  input.type = \"file\";\n  input.accept = EXPORT_IMPORT_FILE_EXTENSION;\n  input.addEventListener(\"change\", importDataOnChangeFile);\n  document.body.appendChild(input);\n\n  // Click the input element to select the file.\n  input.click();\n}\n\nasync function importDataOnChangeFile(event) {\n  try {\n    isShowImportProgressDialog.value = true;\n    logImportProgress(`Import started`);\n\n    const file = event.target.files[0];\n    const { default: JSZip } = await import(\"jszip\");\n    logImportProgress(`Reading file \"${file.name}\" (${file.size} bytes)`);\n    const zip = await JSZip.loadAsync(file);\n    logImportProgress(\n      `Done reading file \"${file.name}\", containing ${\n        Object.keys(zip?.files).length\n      } files`,\n    );\n\n    let chatString;\n    let settingString;\n    await new Promise((resolve, reject) => {\n      let fileCount = 0;\n      zip.forEach(async (relativePath, zipEntry) => {\n        try {\n          logImportProgress(`Reading file \"${relativePath}\"`);\n          const zipFileString = await zipEntry.async(\"string\");\n          logImportProgress(\n            `Done reading \"${relativePath}\" content, length: ${zipFileString?.length}`,\n          );\n          if (relativePath === CHAT_FILE_NAME) {\n            chatString = zipFileString;\n          } else if (relativePath === SETTING_FILE_NAME) {\n            settingString = zipFileString;\n          }\n          fileCount++;\n          if (fileCount === 2) {\n            resolve();\n          }\n        } catch (error) {\n          reject(error);\n        }\n      });\n    });\n\n    // import ChatALL db\n    let unchangedCount = 0;\n    let updatedCount = 0;\n    let addedCount = 0;\n    let errorCount = 0;\n    const addedRecords = [];\n    const updatedRecords = [];\n    const errorRecords = [];\n\n    logImportProgress(`\"${CHAT_FILE_NAME}\" import started`);\n    logImportProgress(`Parsing \"${CHAT_FILE_NAME}\" content to JSON object`);\n    const chatDbObject = JSON.parse(chatString);\n    try {\n      logImportProgress(`Retrieving chats table records`);\n      const chatRow = chatDbObject.data.data.find(\n        (d) => d.tableName === \"chats\",\n      )?.rows;\n      logImportProgress(`Filtering $types from chats record`);\n      const rows = chatRow\n        .filter((record) => record.index && typeof record.index === \"string\")\n        .map((record) => {\n          delete record.$types;\n          return record;\n        });\n      logImportProgress(\n        `Importing. There are ${chatRow?.length} records in chats table. This process may take some time.`,\n      );\n\n      for (const row of rows) {\n        try {\n          const chat = await Chats.table.get(row.index);\n          if (chat) {\n            if (compare(chat, row)) {\n              unchangedCount++;\n            } else {\n              await Chats.table.put(row);\n              updatedRecords.push({ row, table: \"chats\" });\n              updatedCount++;\n            }\n          } else {\n            await Chats.table.add(row);\n            addedRecords.push({ row, table: \"chats\" });\n            addedCount++;\n          }\n        } catch (error) {\n          errorCount++;\n          console.error(error);\n          errorRecords.push({ error, row, table: \"chats\" });\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      logImportProgress(\n        `chats table import completed: ${addedCount} added, ${updatedCount} updated, ${unchangedCount} unchanged, ${errorCount} error`,\n      );\n    }\n\n    unchangedCount = 0;\n    updatedCount = 0;\n    addedCount = 0;\n    errorCount = 0;\n    try {\n      logImportProgress(`Retrieving messages table records`);\n      const messagesRow = chatDbObject.data.data.find(\n        (d) => d.tableName === \"messages\",\n      )?.rows;\n      logImportProgress(\n        `Importing. There are ${messagesRow?.length} records in messages table. This process may take some time.`,\n      );\n      for (const row of messagesRow) {\n        try {\n          const message = await Messages.table.get(row.index);\n          if (message) {\n            if (compare(message, row)) {\n              unchangedCount++;\n            } else {\n              await Messages.table.put(row);\n              updatedRecords.push({ row, table: \"messages\" });\n              updatedCount++;\n            }\n          } else {\n            await Messages.table.add(row);\n            addedRecords.push({ row, table: \"messages\" });\n            addedCount++;\n          }\n        } catch (error) {\n          errorCount++;\n          console.error(error);\n          errorRecords.push({ error, row, table: \"messages\" });\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      logImportProgress(\n        `messages table import completed: ${addedCount} added, ${updatedCount} updated, ${unchangedCount} unchanged, ${errorCount} error`,\n      );\n    }\n\n    unchangedCount = 0;\n    updatedCount = 0;\n    addedCount = 0;\n    errorCount = 0;\n    try {\n      logImportProgress(`Retrieving threads table records`);\n      const threadsRow = chatDbObject.data.data.find(\n        (d) => d.tableName === \"threads\",\n      )?.rows;\n      logImportProgress(\n        `Importing. There are ${threadsRow?.length} records in threads table. This process may take some time.`,\n      );\n      for (const row of threadsRow) {\n        try {\n          const message = await Threads.table.get(row.index);\n          if (message) {\n            if (compare(message, row)) {\n              unchangedCount++;\n            } else {\n              await Threads.table.put(row);\n              updatedRecords.push({ row, table: \"threads\" });\n              updatedCount++;\n            }\n          } else {\n            await Threads.table.add(row);\n            addedRecords.push({ row, table: \"threads\" });\n            addedCount++;\n          }\n        } catch (error) {\n          errorCount++;\n          console.error(error);\n          errorRecords.push({ error, row, table: \"threads\" });\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      logImportProgress(\n        `threads table import completed: ${addedCount} added, ${updatedCount} updated, ${unchangedCount} unchanged, ${errorCount} error`,\n      );\n    }\n\n    // import localforage keyvaluepairs\n    logImportProgress(`\"${SETTING_FILE_NAME}\" import started`);\n    logImportProgress(`Parsing \"${SETTING_FILE_NAME}\" content to JSON object`);\n    const settingDbObject = JSON.parse(settingString);\n    logImportProgress(`Retrieving keyvaluepairs table records`);\n    const rows = settingDbObject.data.data.find(\n      (d) => d.tableName === \"keyvaluepairs\",\n    )?.rows;\n    logImportProgress(\n      `Importing. There are ${rows?.length} records in keyvaluepairs table. This process may take some time.`,\n    );\n\n    unchangedCount = 0;\n    updatedCount = 0;\n    addedCount = 0;\n    errorCount = 0;\n    try {\n      if (rows.length && rows[0].$ && rows[0].$.length > 1) {\n        const chatallKey = rows[0].$[1];\n        for (const key in chatallKey) {\n          try {\n            if (Array.isArray(chatallKey[key])) {\n              const storeIndexes = store.state[key].map((item) => item.index);\n              for (const importItem of chatallKey[key]) {\n                let index = storeIndexes.indexOf(importItem.index);\n                if (index === -1) {\n                  store.commit(\"pushSettingArray\", {\n                    key,\n                    value: importItem,\n                  });\n                  addedRecords.push({\n                    row: `key: ${key}, added: ${JSON.stringify(importItem)}`,\n                    table: \"keyvaluepairs\",\n                  });\n                  addedCount++;\n                } else {\n                  if (compare(importItem, store.state[key][index])) {\n                    unchangedCount++;\n                  } else {\n                    store.commit(\"updateSettingArray\", {\n                      key,\n                      index,\n                      value: importItem,\n                    });\n                    updatedRecords.push({\n                      row: `key: ${key}, updated: ${JSON.stringify(\n                        importItem,\n                      )}`,\n                      table: \"keyvaluepairs\",\n                    });\n                    updatedCount++;\n                  }\n                }\n              }\n            } else {\n              if (compare(chatallKey[key], store.state[key])) {\n                unchangedCount++;\n              } else {\n                store.commit(\"updateSetting\", {\n                  key,\n                  value: chatallKey[key],\n                });\n                updatedRecords.push({\n                  row: `key: ${key}, updated: ${JSON.stringify(\n                    chatallKey[key],\n                  )}`,\n                  table: \"keyvaluepairs\",\n                });\n                updatedCount++;\n              }\n            }\n          } catch (error) {\n            errorCount++;\n            console.error(error);\n            errorRecords.push({\n              row: `key: ${key}, error: ${JSON.stringify(chatallKey[key])}`,\n              table: \"keyvaluepairs\",\n            });\n          }\n        }\n      } else {\n        logImportProgress(`Invalid rows`);\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      logImportProgress(\n        `keyvaluepairs table import completed: ${addedCount} added, ${updatedCount} updated, ${unchangedCount} unchanged, ${errorCount} error`,\n      );\n    }\n\n    logImportProgress(`Added:\\n${JSON.stringify(addedRecords, null, 2)}`);\n    logImportProgress(`Updated:\\n${JSON.stringify(updatedRecords, null, 2)}`);\n    logImportProgress(`Error:\\n${JSON.stringify(errorRecords, null, 2)}`);\n\n    logImportProgress(\n      `Import completed, added ${addedRecords.length}, updated ${updatedRecords.length}, error ${errorRecords.length}`,\n    );\n\n    snackbar.text = i18n.global.t(\"chat.importSuccess\");\n    snackbar.color = \"success\";\n  } catch (error) {\n    console.error(error);\n    snackbar.text = `${i18n.global.t(\"chat.importFailed\")}: ${error.message}`;\n    snackbar.color = \"error\";\n  } finally {\n    // Remove the input element from the document body.\n    document.body.removeChild(event.target);\n    isImportCompleted.value = true;\n    snackbar.show = true;\n  }\n}\n\nfunction compare(obj1, obj2) {\n  //Loop through properties in object 1\n  for (var p in obj1) {\n    //Check property exists on both objects\n    if (\n      Object.hasOwnProperty.call(obj1, p) !==\n      Object.hasOwnProperty.call(obj2, p)\n    )\n      return false;\n\n    switch (typeof obj1[p]) {\n      //Deep compare objects\n      case \"object\":\n        if (!compare(obj1[p], obj2[p])) return false;\n        break;\n      //Compare function code\n      case \"function\":\n        if (\n          typeof obj2[p] == \"undefined\" ||\n          (p != \"compare\" && obj1[p].toString() != obj2[p].toString())\n        )\n          return false;\n        break;\n      //Compare values\n      default:\n        if (obj1[p] != obj2[p]) return false;\n    }\n  }\n\n  //Check object 2 for any extra properties\n  for (const p in obj2) {\n    if (typeof obj1[p] == \"undefined\") return false;\n  }\n  return true;\n}\n\nfunction logImportProgress(text) {\n  importProgressText.value += `${new Date().toISOString()} - ${text}\\n`;\n  const element = document.getElementById(\"import-log-textarea\");\n  if (element) {\n    nextTick(() => (element.scrollTop = element.scrollHeight));\n  }\n}\n\nasync function getSettingWithoutBotSetting() {\n  await localForage._dbInfo.db.close();\n  const settingDb = await new Dexie(\"localforage\").open();\n  const userSettingBlob = await exportDB(settingDb);\n  const userSettingText = await userSettingBlob.text();\n  const userSettingJson = JSON.parse(userSettingText);\n  const allBotBrandId = bots.all.map((bot) => bot.constructor._brandId);\n  for (const brandId of allBotBrandId) {\n    // delete bot related setting\n    delete userSettingJson.data.data[0].rows[0].$[1][brandId];\n  }\n  const str = JSON.stringify(userSettingJson);\n  const bytes = new TextEncoder().encode(str);\n  return new Blob([bytes], {\n    type: \"application/json;charset=utf-8\",\n  });\n}\n\nasync function deleteChats() {\n  const confirm = await confirmModal.value.showModal(\n    \"\",\n    i18n.global.t(\"chat.confirmDeleteAllChatHistory\"),\n  );\n  if (confirm) {\n    store.commit(\"deleteChats\");\n    emit(\"close-dialog\");\n  }\n}\n\nfunction add() {\n  isEdit = false;\n  actionName.value = \"\";\n  prefix.value = prefixPlaceholder;\n  template.value = templatePlaceholder;\n  suffix.value = suffixPlaceholder;\n  isOpenAddEditAction.value = true;\n  onInputTemplate();\n}\n\nfunction edit(item) {\n  isEdit = true;\n  actionName.value = item.name;\n  prefix.value = item.prefix;\n  template.value = item.template;\n  suffix.value = item.suffix;\n  editIndex = item.index;\n  isOpenAddEditAction.value = true;\n  onInputTemplate();\n}\n\nasync function onInputTemplate() {\n  try {\n    previewRef.value = await preview(\n      prefix.value,\n      template.value,\n      suffix.value,\n      previewSampleData,\n    );\n  } catch (error) {\n    previewRef.value = `Error:\\n${error.message}`;\n  }\n}\n\nasync function addEditAction() {\n  if ((await formRef.value.validate()).valid) {\n    if (isEdit) {\n      store.commit(\"editAction\", {\n        name: actionName.value,\n        prefix: prefix.value,\n        template: template.value,\n        suffix: suffix.value,\n        index: editIndex,\n      });\n    } else {\n      store.commit(\"addAction\", {\n        name: actionName.value,\n        prefix: prefix.value,\n        template: template.value,\n        suffix: suffix.value,\n      });\n    }\n    isOpenAddEditAction.value = false;\n  }\n}\n\nasync function deleteAction(item) {\n  const result = await confirmModal.value.showModal(\n    i18n.global.t(\"modal.confirmHideAction\"),\n  );\n  if (result) {\n    store.commit(\"deleteAction\", { ...item });\n  }\n}\n</script>\n<style scoped>\n.no-text-transform {\n  text-transform: none !important;\n}\n\n:deep() i.v-icon {\n  color: rgb(var(--v-theme-primary));\n}\n\n:deep() .v-textarea .v-field {\n  padding: 0;\n}\n</style>\n","import script from \"./ChatSetting.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatSetting.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatSetting.vue?vue&type=style&index=0&id=0c320d85&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0c320d85\"]])\n\nexport default __exports__","<template>\n  <v-dialog\n    :model-value=\"props.open\"\n    fullscreen\n    :scrim=\"false\"\n    transition=\"dialog-bottom-transition\"\n  >\n    <v-card class=\"overflow-hidden\">\n      <div class=\"d-flex flex-column h-screen\">\n        <v-toolbar height=\"100px\" dark color=\"primary\">\n          <v-toolbar-title>{{ $t(\"settings.title\") }}</v-toolbar-title>\n          <v-spacer></v-spacer>\n\n          <v-btn icon dark @click=\"closeDialog\">\n            <v-icon>mdi-close</v-icon>\n          </v-btn>\n        </v-toolbar>\n        <v-row style=\"height: calc(100% - 100px)\">\n          <v-col cols=\"2\" class=\"h-100 overflow-auto pr-0\">\n            <v-tabs v-model=\"tab\" direction=\"vertical\" color=\"primary\">\n              <v-tab value=\"general\">{{ $t(\"settings.general\") }}</v-tab>\n              <v-tab value=\"proxy\">{{ $t(\"proxy.name\") }}</v-tab>\n              <v-tab value=\"chat\">{{ $t(\"chat.name\") }}</v-tab>\n              <v-tab\n                v-for=\"(setting, index) in botSettings\"\n                :key=\"index\"\n                :value=\"index\"\n              >\n                {{ $t(`${setting.brand}.name`) }}\n              </v-tab>\n            </v-tabs>\n          </v-col>\n          <v-col class=\"h-100 overflow-auto\">\n            <v-list lines=\"two\" subheader>\n              <div v-if=\"tab == 'general'\">\n                <v-list-item>\n                  <v-list-item-title>{{\n                    $t(\"settings.language\")\n                  }}</v-list-item-title>\n                  <v-select\n                    :items=\"languages\"\n                    item-title=\"name\"\n                    item-value=\"code\"\n                    hide-details\n                    :model-value=\"lang\"\n                    @update:model-value=\"setCurrentLanguage($event)\"\n                  ></v-select>\n                </v-list-item>\n                <v-list-item>\n                  <v-list-item-title>{{\n                    $t(\"settings.theme\")\n                  }}</v-list-item-title>\n                  <v-select\n                    :items=\"modes\"\n                    item-title=\"name\"\n                    item-value=\"code\"\n                    hide-details\n                    :model-value=\"currentMode\"\n                    @update:model-value=\"setCurrentMode($event)\"\n                  ></v-select>\n                </v-list-item>\n                <CommonBotSettings\n                  :settings=\"settings\"\n                  brand-id=\"general\"\n                  mutation-type=\"setGeneral\"\n                ></CommonBotSettings>\n              </div>\n\n              <div v-if=\"tab == 'proxy'\">\n                <component :is=\"proxy\"></component>\n              </div>\n\n              <div v-if=\"tab == 'chat'\">\n                <component :is=\"chat\" @close-dialog=\"closeDialog\"></component>\n              </div>\n\n              <template v-for=\"(setting, index) in botSettings\" :key=\"index\">\n                <component\n                  v-if=\"tab == index\"\n                  :is=\"setting.component\"\n                ></component>\n              </template>\n            </v-list>\n          </v-col>\n        </v-row>\n      </div>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script setup>\nimport { computed, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { useI18n } from \"vue-i18n\";\nimport { useTheme } from \"vuetify\";\nimport { Type } from \"@/components/BotSettings/settings.const\";\n\nimport ProxySettings from \"@/components/ProxySetting.vue\";\nimport ChatSettings from \"@/components/ChatSetting.vue\";\nimport CommonBotSettings from \"@/components/BotSettings/CommonBotSettings.vue\";\n\nimport ChatGPTBotSettings from \"@/components/BotSettings/ChatGPTBotSettings.vue\";\nimport OpenAIAPIBotSettings from \"@/components/BotSettings/OpenAIAPIBotSettings.vue\";\nimport GeminiAPIBotSettings from \"@/components/BotSettings/GeminiAPIBotSettings.vue\";\nimport AzureOpenAIAPIBotSettings from \"./BotSettings/AzureOpenAIAPIBotSettings.vue\";\nimport BingChatBotSettings from \"@/components/BotSettings/BingChatBotSettings.vue\";\nimport SparkBotSettings from \"./BotSettings/SparkBotSettings.vue\";\nimport BardBotSettings from \"@/components/BotSettings/BardBotSettings.vue\";\nimport MistralBotSettings from \"@/components/BotSettings/MistralBotSettings.vue\";\nimport MOSSBotSettings from \"@/components/BotSettings/MOSSBotSettings.vue\";\nimport WenxinQianfanBotSettings from \"@/components/BotSettings/WenxinQianfanBotSettings.vue\";\nimport GradioAppBotSettings from \"@/components/BotSettings/GradioAppBotSettings.vue\";\nimport Falcon180bBotSettings from \"@/components/BotSettings/Falcon180bBotSettings.vue\";\nimport LMSYSBotSettings from \"@/components/BotSettings/LMSYSBotSettings.vue\";\nimport HuggingChatBotSettings from \"@/components/BotSettings/HuggingChatBotSettings.vue\";\nimport QianWenBotSettings from \"@/components/BotSettings/QianWenBotSettings.vue\";\nimport PoeBotSettings from \"@/components/BotSettings/PoeBotSettings.vue\";\nimport SkyWorkBotSettings from \"@/components/BotSettings/SkyWorkBotSettings.vue\";\nimport YouChatBotSettings from \"@/components/BotSettings/YouChatBotSettings.vue\";\nimport PerplexityBotSettings from \"@/components/BotSettings/PerplexityBotSettings.vue\";\nimport PhindBotSettings from \"@/components/BotSettings/PhindBotSettings.vue\";\nimport PiBotSettings from \"@/components/BotSettings/PiBotSettings.vue\";\nimport Qihoo360AIBrainBotSettings from \"./BotSettings/Qihoo360AIBrainBotSettings.vue\";\nimport CharacterAIBotSettings from \"./BotSettings/CharacterAIBotSettings.vue\";\nimport ClaudeAIBotSettings from \"./BotSettings/ClaudeAIBotSettings.vue\";\nimport ChatGLMBotSettings from \"./BotSettings/ChatGLMBotSettings.vue\";\nimport CohereAPIBotSettings from \"./BotSettings/CohereAPIBotSettings.vue\";\nimport KimiBotSettings from \"./BotSettings/KimiBotSettings.vue\";\n\nimport { resolveTheme, applyTheme, Mode } from \"../theme\";\nimport ClaudeAPIBotSettings from \"./BotSettings/ClaudeAPIBotSettings.vue\";\nimport GroqAPIBotSettings from \"./BotSettings/GroqAPIBotSettings.vue\";\n\nconst { ipcRenderer } = window.require(\"electron\");\nconst { t: $t, locale } = useI18n();\nconst store = useStore();\nconst vuetifyTheme = useTheme();\n\nconst props = defineProps([\"open\"]);\nconst emit = defineEmits([\"update:open\", \"done\"]);\n\nconst tab = ref(null);\n\nconst botSettings = [\n  { brand: \"360AiBrain\", component: Qihoo360AIBrainBotSettings },\n  { brand: \"azureOpenaiApi\", component: AzureOpenAIAPIBotSettings },\n  { brand: \"bard\", component: BardBotSettings },\n  { brand: \"bingChat\", component: BingChatBotSettings },\n  { brand: \"characterAI\", component: CharacterAIBotSettings },\n  { brand: \"chatGlm\", component: ChatGLMBotSettings },\n  { brand: \"chatGpt\", component: ChatGPTBotSettings },\n  { brand: \"claudeAi\", component: ClaudeAIBotSettings },\n  { brand: \"claudeApi\", component: ClaudeAPIBotSettings },\n  { brand: \"cohereApi\", component: CohereAPIBotSettings },\n  { brand: \"falcon\", component: Falcon180bBotSettings },\n  { brand: \"geminiApi\", component: GeminiAPIBotSettings },\n  { brand: \"gradio\", component: GradioAppBotSettings },\n  { brand: \"groqApi\", component: GroqAPIBotSettings },\n  { brand: \"huggingChat\", component: HuggingChatBotSettings },\n  { brand: \"kimi\", component: KimiBotSettings },\n  { brand: \"lmsys\", component: LMSYSBotSettings },\n  { brand: \"mistral\", component: MistralBotSettings },\n  { brand: \"moss\", component: MOSSBotSettings },\n  { brand: \"openaiApi\", component: OpenAIAPIBotSettings },\n  { brand: \"perplexity\", component: PerplexityBotSettings },\n  { brand: \"phind\", component: PhindBotSettings },\n  { brand: \"pi\", component: PiBotSettings },\n  { brand: \"poe\", component: PoeBotSettings },\n  { brand: \"qianWen\", component: QianWenBotSettings },\n  { brand: \"skyWork\", component: SkyWorkBotSettings },\n  { brand: \"spark\", component: SparkBotSettings },\n  { brand: \"wenxinQianfan\", component: WenxinQianfanBotSettings },\n  { brand: \"youChat\", component: YouChatBotSettings },\n];\n\nconst proxy = ProxySettings;\nconst chat = ChatSettings;\nconst languages = computed(() => [\n  { name: $t(\"settings.system\"), code: \"auto\" },\n  { name: \"Deutsch\", code: \"de\" },\n  { name: \"English\", code: \"en\" },\n  { name: \"Español\", code: \"es\" },\n  { name: \"Français\", code: \"fr\" },\n  { name: \"Italiano\", code: \"it\" },\n  { name: \"日本語\", code: \"ja\" },\n  { name: \"한국어\", code: \"ko\" },\n  { name: \"Русский\", code: \"ru\" },\n  { name: \"Tiếng Việt\", code: \"vi\" },\n  { name: \"简体中文\", code: \"zh\" },\n  { name: \"繁體中文\", code: \"zhtw\" },\n]);\n\nconst modes = computed(() => [\n  { name: $t(\"settings.system\"), code: Mode.SYSTEM },\n  { name: $t(\"settings.light\"), code: Mode.LIGHT },\n  { name: $t(\"settings.dark\"), code: Mode.DARK },\n]);\n\nconst lang = computed(() => store.state.lang);\nconst currentMode = computed(() => store.state.mode);\n\nconst setCurrentLanguage = (lang) => {\n  locale.value = lang;\n  store.commit(\"setCurrentLanguage\", lang);\n};\nconst setCurrentMode = async (mode) => {\n  const resolvedTheme = await resolveTheme(mode, ipcRenderer);\n  store.commit(\"setMode\", mode);\n  store.commit(\"setTheme\", resolvedTheme);\n  applyTheme(resolvedTheme, vuetifyTheme);\n};\nconst closeDialog = () => {\n  emit(\"update:open\", false);\n  emit(\"done\");\n};\n\nconst settings = [\n  {\n    type: Type.Checkbox,\n    name: \"isShowMenuBar\",\n    label: $t(\"settings.showMenuBar\"),\n  },\n];\n\nwatch(\n  () => store.state.general.isShowMenuBar,\n  () =>\n    ipcRenderer.invoke(\n      \"set-is-show-menu-bar\",\n      store.state.general.isShowMenuBar,\n    ),\n);\n</script>\n\n<style scoped>\n:deep() .v-slider-thumb__label {\n  color: rgb(var(--v-theme-font));\n}\n\n/* Keep the orignal case of tab names */\n.v-btn {\n  text-transform: none !important;\n}\n</style>\n","import script from \"./SettingsModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SettingsModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SettingsModal.vue?vue&type=style&index=0&id=a0b002e0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-a0b002e0\"]])\n\nexport default __exports__","<template>\n  <v-dialog :model-value=\"open\" persistent width=\"auto\">\n    <v-list v-if=\"botSettings !== null\">\n      <component :is=\"botSettings\" />\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn color=\"primary\" @click=\"onDone\">{{ $t(\"modal.done\") }}</v-btn>\n      </v-card-actions>\n    </v-list>\n  </v-dialog>\n</template>\n\n<script setup>\nimport { markRaw, ref, watch } from \"vue\";\n\nconst props = defineProps([\"open\", \"bot\"]);\nconst emit = defineEmits([\"update:open\", \"done\"]);\n\nconst botSettings = ref(null);\nwatch(\n  () => props.bot,\n  async (newBot) => {\n    if (newBot) {\n      botSettings.value = markRaw(await newBot.getSettingsComponent());\n    } else {\n      botSettings.value = null;\n    }\n  },\n);\n\nconst onDone = () => {\n  emit(\"update:open\", false);\n  emit(\"done\");\n};\n</script>\n\n<style scoped></style>\n","import script from \"./MakeAvailableModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MakeAvailableModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <v-avatar\n    rounded=\"rounded\"\n    :class=\"{ active: active, invert: isLogoInverted }\"\n    :image=\"bot.getLogo()\"\n    :alt=\"bot.getFullname()\"\n    :title=\"bot.getFullname()\"\n  ></v-avatar>\n</template>\n\n<script setup>\nimport { computed } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { Theme } from \"@/theme\";\n\nconst store = useStore();\nconst props = defineProps([\"bot\", \"active\"]);\nconst isLogoInverted = computed(() => {\n  return store.state.theme === Theme.DARK && props.bot?.isDarkLogo();\n});\n</script>\n\n<style>\n.v-avatar {\n  opacity: 0.5;\n  filter: grayscale(100%);\n  cursor: pointer;\n}\n\n.active {\n  opacity: 1;\n  filter: grayscale(0%);\n}\n\n.invert {\n  filter: invert(100%);\n}\n</style>\n","import script from \"./BotLogo.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BotLogo.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BotLogo.vue?vue&type=style&index=0&id=5e9ca404&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"text-center\">\n    <v-menu\n      v-model=\"menu\"\n      :close-on-content-click=\"false\"\n      location=\"top\"\n      scroll-strategy=\"block\"\n      offset=\"12\"\n    >\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          v-bind=\"props\"\n          size=\"36\"\n          color=\"primary\"\n          flat\n          icon=\"mdi-dots-horizontal\"\n        >\n        </v-btn>\n      </template>\n\n      <v-card>\n        <v-list\n          class=\"bots-list\"\n          density=\"compact\"\n          :selected=\"favorited\"\n          select-strategy=\"classic\"\n          nav\n        >\n          <v-list-item\n            v-for=\"(bot, index) in shownBots\"\n            :key=\"index\"\n            :value=\"bot.getClassname()\"\n            color=\"primary\"\n            @click=\"toggleFavorite(bot)\"\n          >\n            <template v-slot:prepend=\"{ isActive }\">\n              <v-list-item-action start>\n                <v-checkbox-btn\n                  color=\"primary\"\n                  :model-value=\"isActive\"\n                ></v-checkbox-btn>\n              </v-list-item-action>\n            </template>\n            <v-list-item-title>\n              <BotLogo :bot=\"bot\" active=\"true\" size=\"24\"></BotLogo>&nbsp;\n              <span>{{ bot.getFullname() }}</span>\n            </v-list-item-title>\n          </v-list-item>\n        </v-list>\n\n        <v-divider></v-divider>\n\n        <v-list>\n          <v-list-item>\n            <v-list-item-title class=\"font-weight-black\">\n              {{ $t(\"footer.chooseFavorite\") }}\n            </v-list-item-title>\n            <template v-slot:append>\n              <v-btn-toggle\n                v-model=\"selectedTags\"\n                divided\n                color=\"primary\"\n                group\n                variant=\"outlined\"\n                rounded=\"xl\"\n                @update:model-value=\"filterBots($event)\"\n              >\n                <v-btn v-for=\"(tag, index) in tags\" :key=\"index\" :value=\"tag\">\n                  {{ $t(`footer.${tag}`) }}\n                </v-btn>\n              </v-btn-toggle>\n            </template>\n          </v-list-item>\n        </v-list>\n      </v-card>\n    </v-menu>\n  </div>\n</template>\n\n<script setup>\nimport { computed, ref } from \"vue\";\n\nimport bots from \"@/bots\";\nimport { botTags } from \"@/bots\";\nimport BotLogo from \"./BotLogo.vue\";\nimport store from \"@/store\";\n\nlet menu = ref(false);\n\nconst props = defineProps([\"favBots\"]);\nconst favorited = computed(() => {\n  return props.favBots.map((bot) => bot.classname);\n});\n\nconst tags = Object.keys(botTags);\nconst selectedTags = ref([]);\n\nconst notDisabledBots = bots.all.filter((bot) => !bot.isDisabled());\nconst shownBots = ref(notDisabledBots);\n\nconst toggleFavorite = (bot) => {\n  const classname = bot.getClassname();\n  if (favorited.value.includes(classname)) {\n    store.commit(\"removeFavoriteBot\", classname);\n  } else {\n    store.commit(\"addFavoriteBot\", classname);\n  }\n};\n\nfunction toggleMenu() {\n  menu.value = !menu.value;\n}\n\nfunction filterBots(selectedTags) {\n  let filteredIn = notDisabledBots;\n\n  // If the toggle is not multi-select, the selectedTags will be a string\n  if (typeof selectedTags === \"string\") {\n    selectedTags = [selectedTags];\n  }\n\n  if (selectedTags?.length) {\n    const tagBots = selectedTags.map((tag) => botTags[tag]);\n    filteredIn = filteredIn.filter((bot) => {\n      return tagBots.every((tagBot) => tagBot.includes(bot));\n    });\n  }\n  shownBots.value = filteredIn;\n}\n\ndefineExpose({\n  toggleMenu,\n});\n</script>\n\n<style>\n.bots-list {\n  column-count: 3;\n}\n\n/* Keep the orignal case of tab names */\n.v-btn {\n  text-transform: none !important;\n}\n</style>\n","import script from \"./BotsMenu.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BotsMenu.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BotsMenu.vue?vue&type=style&index=0&id=4ea8786e&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import en from \"./prompts-en.json\";\nimport zh from \"./prompts-zh.json\";\nimport zhtw from \"./prompts-zhtw.json\";\nimport es from \"./prompts-es.json\";\n\nconst prompts = {\n  en,\n  zh,\n  zhtw,\n  es,\n  languages: [\n    { name: \"English\", code: \"en\" },\n    { name: \"简体中文\", code: \"zh\" },\n    { name: \"繁體中文\", code: \"zhtw\" },\n    { name: \"Español\", code: \"es\" },\n  ],\n};\n\nexport default prompts;\n","<template>\n  <div>\n    <v-dialog\n      :model-value=\"props.open\"\n      @update:model-value=\"closeDialog\"\n      @after-leave=\"onDialogCloseTransitionEnded\"\n    >\n      <v-card class=\"justify-center\">\n        <v-card-title>\n          <v-text-field\n            clearable\n            v-model=\"search\"\n            density=\"compact\"\n            append-icon=\"mdi-magnify\"\n            :label=\"$t('find.find')\"\n            single-line\n            hide-details\n            autofocus\n          ></v-text-field>\n          <div class=\"pt-2 d-flex justify-space-between\">\n            <v-btn\n              class=\"mt-1\"\n              prepend-icon=\"mdi-plus\"\n              :text=\"$t('prompt.addPrompt')\"\n              @click=\"add\"\n            ></v-btn>\n            <v-spacer></v-spacer>\n            <v-spacer></v-spacer>\n\n            <v-select\n              color=\"primary\"\n              density=\"compact\"\n              :items=\"prompts.languages\"\n              hide-details\n              item-title=\"name\"\n              item-value=\"code\"\n              :model-value=\"language\"\n              @update:model-value=\"setPromptLanguage($event)\"\n            ></v-select>\n          </div>\n        </v-card-title>\n        <v-data-table\n          :headers=\"headers\"\n          :items=\"data\"\n          :search=\"search\"\n          height=\"70vh\"\n          fixed-header\n          hover\n          :no-data-text=\"$t('find.noMatches')\"\n          items-per-page=\"10\"\n        >\n          <template v-slot:item=\"{ item }\">\n            <tr>\n              <td\n                @click=\"usePrompt(item)\"\n                @mouseover=\"showFullText($event)\"\n                @mouseleave=\"hideFullText($event)\"\n              >\n                {{ item.title }}\n              </td>\n              <td\n                @click=\"usePrompt(item)\"\n                @mouseover=\"showFullText($event)\"\n                @mouseleave=\"hideFullText($event)\"\n              >\n                {{ item.prompt }}\n              </td>\n              <td>\n                <v-btn\n                  flat\n                  size=\"x-small\"\n                  :icon=\"item.isPin ? 'mdi-star' : 'mdi-star-outline'\"\n                  @click=\"pin(item)\"\n                ></v-btn>\n                <v-btn\n                  flat\n                  size=\"x-small\"\n                  icon=\"mdi-pencil\"\n                  @click=\"edit(item)\"\n                  v-if=\"item.index\"\n                ></v-btn>\n                <v-btn\n                  flat\n                  size=\"x-small\"\n                  icon=\"mdi-delete-outline\"\n                  @click=\"deletePrompt(item)\"\n                  v-if=\"item.index\"\n                ></v-btn>\n              </td>\n            </tr>\n          </template>\n        </v-data-table>\n      </v-card>\n    </v-dialog>\n\n    <v-dialog\n      persistent\n      width=\"50%\"\n      :model-value=\"isOpenAddEditPrompt\"\n      @update:model-value=\"isOpenAddEditPrompt = $event\"\n    >\n      <v-card>\n        <v-form ref=\"formRef\" class=\"pa-3\" @submit.prevent>\n          <v-text-field\n            required\n            :placeholder=\"$t('prompt.title')\"\n            v-model=\"title\"\n            :rules=\"requiredRule\"\n          ></v-text-field>\n          <v-textarea\n            required\n            :placeholder=\"$t('prompt.prompt')\"\n            v-model=\"prompt\"\n            :rules=\"requiredRule\"\n          ></v-textarea>\n        </v-form>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn\n            variant=\"outlined\"\n            color=\"primary\"\n            @click=\"isOpenAddEditPrompt = false\"\n            >{{ $t(\"modal.cancel\") }}</v-btn\n          >\n          <!-- color=\"primary\" not working for nested dialog button -->\n          <v-btn variant=\"flat\" class=\"bg-primary\" @click=\"addEditPrompt\">{{\n            $t(\"modal.done\")\n          }}</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    <ConfirmModal ref=\"confirmModal\" />\n  </div>\n</template>\n\n<script setup>\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport i18n from \"@/i18n\";\nimport prompts from \"@/prompts\";\nimport { computed, ref } from \"vue\";\nimport { useStore } from \"vuex\";\n\nconst store = useStore();\nconst props = defineProps([\"open\"]);\nconst emit = defineEmits([\"update:open\", \"afterLeave\"]);\nconst defaultLanguage = prompts.languages\n  .map((lang) => lang.code)\n  .includes(i18n.global.locale.value)\n  ? i18n.global.locale.value // use user langauge if availble\n  : \"en\"; // else default to 'en'\nconst language = ref(defaultLanguage);\nconst search = ref(\"\");\nconst title = ref(\"\");\nconst prompt = ref(\"\");\nconst isEdit = ref(false);\nconst editIndex = ref(null);\nconst formRef = ref(null);\nconst confirmModal = ref(null);\nconst isOpenAddEditPrompt = ref(false);\nlet selectedPrompt = \"\";\nconst requiredRule = [\n  (value) => (value?.trim() ? true : i18n.global.t(\"prompt.required\")),\n];\n\nconst headers = computed(() => [\n  {\n    key: \"title\",\n    title: i18n.global.t(\"prompt.title\"),\n    width: \"20%\",\n  },\n  { key: \"prompt\", title: i18n.global.t(\"prompt.prompt\"), width: \"70%\" },\n  {\n    key: \"action\",\n    title: i18n.global.t(\"prompt.action\"),\n    width: \"10%\",\n    sortable: false,\n  },\n]);\nconst userPrompts = computed(() => {\n  return store.state.prompts\n    .slice()\n    .filter((p) => !p.hide)\n    .sort((x, y) => {\n      return x.isPin === y.isPin ? 0 : x.isPin ? -1 : 1;\n    });\n});\nconst data = computed(() => {\n  const defaultPrompts = prompts[language.value].map((prompt) => {\n    return { title: prompt.act, prompt: prompt.prompt };\n  });\n\n  return [...userPrompts.value, ...defaultPrompts];\n});\n\nconst closeDialog = (value) => {\n  emit(\"update:open\", value);\n};\n\nfunction pin(row) {\n  if (row.index) {\n    store.commit(\"editPrompt\", {\n      ...row,\n      isPin: !row.isPin,\n    });\n  } else {\n    store.commit(\"addPrompt\", { ...row, isPin: true });\n  }\n}\n\nfunction usePrompt(row) {\n  selectedPrompt = row.prompt;\n  emit(\"update:open\", false);\n}\n\nasync function addEditPrompt() {\n  if ((await formRef.value.validate()).valid) {\n    if (isEdit.value) {\n      store.commit(\"editPrompt\", {\n        title: title.value,\n        prompt: prompt.value,\n        index: editIndex.value,\n      });\n    } else {\n      store.commit(\"addPrompt\", { title: title.value, prompt: prompt.value });\n    }\n    isOpenAddEditPrompt.value = false;\n  }\n}\n\nfunction add() {\n  isEdit.value = false;\n  title.value = \"\";\n  prompt.value = \"\";\n  isOpenAddEditPrompt.value = true;\n}\n\nfunction edit(item) {\n  isEdit.value = true;\n  title.value = item.title;\n  prompt.value = item.prompt;\n  editIndex.value = item.index;\n  isOpenAddEditPrompt.value = true;\n}\n\nasync function deletePrompt(item) {\n  const result = await confirmModal.value.showModal(\n    i18n.global.t(\"modal.confirmHidePrompt\"),\n  );\n  if (result) {\n    store.commit(\"deletePrompt\", { ...item });\n  }\n}\n\nfunction showFullText(element) {\n  const parent = element.currentTarget.closest(\"tr\");\n  if (parent.querySelector(\".tooltip\")) {\n    return;\n  }\n  for (let i = 0; i < parent.children.length - 1; i++) {\n    const td = parent.children[i];\n    const position = td.getBoundingClientRect();\n    const div = document.createElement(\"div\");\n    div.innerText = td.innerText;\n    td.innerText = \"\";\n    div.classList.add(\"tooltip\");\n    div.style.width = `${position.width}px`;\n    div.addEventListener(\"mouseleave\", hideFullText);\n    td.appendChild(div);\n  }\n}\n\nfunction hideFullText(element) {\n  const parent = element.currentTarget.closest(\"tr\");\n  if (!element.toElement || !parent.contains(element.toElement)) {\n    const toRemove = parent.querySelectorAll(\".tooltip\");\n    for (let i = 0; i < toRemove.length; i++) {\n      toRemove[i].parentElement.innerText = toRemove[i].innerText;\n      toRemove[i].remove();\n    }\n  }\n}\n\nfunction setPromptLanguage(value) {\n  language.value = value;\n}\n\nfunction onDialogCloseTransitionEnded() {\n  emit(\"afterLeave\", selectedPrompt);\n  selectedPrompt = \"\";\n  search.value = \"\";\n}\n</script>\n\n<style scoped>\n:deep() tr {\n  cursor: pointer;\n}\n\n:deep() td:nth-child(1),\ntd:nth-child(2) {\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n\n:deep() table {\n  table-layout: fixed;\n}\n\n:deep() .tooltip {\n  padding-right: 16px;\n  white-space: break-spaces;\n  background-color: transparent;\n}\n</style>\n","import script from \"./PromptModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PromptModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./PromptModal.vue?vue&type=style&index=0&id=e6ba2cb4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-e6ba2cb4\"]])\n\nexport default __exports__","<template>\n  <v-bottom-navigation\n    class=\"footer\"\n    v-shortkey=\"{\n      focusPromptTextarea: SHORTCUT_PROMPT_TEXTAREA.key,\n      toggleBotsMenu: SHORTCUT_BOTS_MENU.key,\n    }\"\n    @shortkey=\"handleShortcut\"\n  >\n    <div\n      style=\"\n        width: 100%;\n        display: flex;\n        flex-direction: row;\n        align-items: flex-end;\n      \"\n    >\n      <v-textarea\n        :id=\"SHORTCUT_PROMPT_TEXTAREA.elementId\"\n        v-model=\"prompt\"\n        ref=\"promptTextArea\"\n        auto-grow\n        max-rows=\"8.5\"\n        rows=\"1\"\n        density=\"comfortable\"\n        hide-details\n        variant=\"solo\"\n        :placeholder=\"$t('footer.promptPlaceholder')\"\n        autofocus\n        @keydown=\"filterEnterKey\"\n        style=\"min-width: 390px\"\n      >\n        <template v-slot:append-inner>\n          <v-btn\n            :id=\"SHORTCUT_PROMPT_MANAGEMENT.elementId\"\n            @click=\"isPromptManagementOpen = !isPromptManagementOpen\"\n            color=\"primary\"\n            variant=\"plain\"\n            class=\"h-100 w-100\"\n            style=\"border-radius: 4px; min-width: unset !important\"\n            icon=\"mdi-creation-outline\"\n          ></v-btn>\n        </template>\n      </v-textarea>\n      <v-btn\n        class=\"send-prompt-btn\"\n        elevation=\"2\"\n        :disabled=\"\n          prompt.trim() === '' ||\n          favBots.filter((favBot) => activeBots[favBot.classname]).length === 0\n        \"\n        @click=\"sendPromptToBots\"\n      >\n        {{ $t(\"footer.sendPrompt\") }}\n      </v-btn>\n      <div\n        class=\"bot-logos\"\n        ref=\"favBotLogosRef\"\n        :key=\"rerenderFavBotLogos\"\n        @contextmenu=\"show\"\n      >\n        <v-menu\n          v-model=\"showMenu\"\n          class=\"position-fixed\"\n          :style=\"{ left: `${x}px`, top: `${y}px` }\"\n        >\n          <v-list>\n            <v-list-item @click=\"disableAllBots\">\n              <v-list-item-title>{{\n                $t(\"footer.disableAll\")\n              }}</v-list-item-title>\n            </v-list-item>\n            <v-list-item @click=\"enableAllBots\">\n              <v-list-item-title>{{\n                $t(\"footer.enableAll\")\n              }}</v-list-item-title>\n            </v-list-item>\n            <v-list-item @click=\"removeAllBots\">\n              <v-list-item-title>{{\n                $t(\"footer.removeAll\")\n              }}</v-list-item-title>\n            </v-list-item>\n          </v-list>\n        </v-menu>\n        <BotLogo\n          v-for=\"(bot, index) in favBots\"\n          :id=\"`fav-bot-${index + 1}`\"\n          :key=\"index\"\n          :bot=\"bot.instance\"\n          :active=\"activeBots[bot.classname]\"\n          :data-id=\"bot.classname\"\n          size=\"36\"\n          @click=\"toggleSelected(bot.instance)\"\n          v-shortkey=\"['ctrl', `${index + 1}`]\"\n          @shortkey=\"toggleSelected(bot.instance)\"\n        />\n      </div>\n      <BotsMenu\n        style=\"padding-bottom: 0.5rem; padding-left: 4px\"\n        :id=\"SHORTCUT_BOTS_MENU.elementId\"\n        ref=\"botsMenuRef\"\n        :favBots=\"favBots\"\n      />\n    </div>\n    <MakeAvailableModal v-model:open=\"isMakeAvailableOpen\" :bot=\"clickedBot\" />\n    <ConfirmModal ref=\"confirmModal\" />\n    <PromptModal\n      v-shortkey=\"SHORTCUT_PROMPT_MANAGEMENT.key\"\n      @shortkey=\"isPromptManagementOpen = !isPromptManagementOpen\"\n      v-model:open=\"isPromptManagementOpen\"\n      @after-leave=\"usePrompt\"\n    ></PromptModal>\n  </v-bottom-navigation>\n</template>\n\n<script setup>\nimport {\n  ref,\n  computed,\n  onMounted,\n  onBeforeMount,\n  reactive,\n  watch,\n  nextTick,\n} from \"vue\";\nimport { useStore } from \"vuex\";\nimport Sortable from \"sortablejs\";\n\n// Components\nimport MakeAvailableModal from \"@/components/MakeAvailableModal.vue\";\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport BotLogo from \"./BotLogo.vue\";\nimport BotsMenu from \"./BotsMenu.vue\";\nimport PromptModal from \"@/components/PromptModal.vue\";\n\n// Composables\nimport { useMatomo } from \"@/composables/matomo\";\n\nimport _bots from \"@/bots\";\nimport {\n  SHORTCUT_PROMPT_TEXTAREA,\n  SHORTCUT_PROMPT_MANAGEMENT,\n  SHORTCUT_BOTS_MENU,\n} from \"./../ShortcutGuide/shortcut.const\";\nimport Messages from \"@/store/messages\";\n\nconst { ipcRenderer } = window.require(\"electron\");\n\nconst store = useStore();\nconst matomo = useMatomo();\nconst emit = defineEmits([\"updateActiveBots\"]);\nconst props = defineProps({\n  chat: {\n    type: Object,\n    required: true,\n  },\n});\n\nconst confirmModal = ref(null);\nconst promptTextArea = ref(null);\nconst botsMenuRef = ref(null);\nconst favBotLogosRef = ref();\nconst isPromptManagementOpen = ref(false);\n\nconst bots = ref(_bots.all);\nconst activeBots = reactive({});\nconst rerenderFavBotLogos = ref(0);\nconst favBots = computed(() => {\n  if (!props.chat || !props.chat.favBots) {\n    return [];\n  }\n  const _favBots = [];\n  props.chat.favBots.forEach((favBot) => {\n    _favBots.push({\n      ...favBot,\n      instance: _bots.getBotByClassName(favBot.classname),\n    });\n  });\n  return _favBots\n    .filter((bot) => bot.instance)\n    .sort((a, b) => a.order - b.order); // sort by order property\n});\n\nconst prompt = ref(\"\");\nconst clickedBot = ref(null);\nconst isMakeAvailableOpen = ref(false);\n\nwatch(favBots, async (newValue, oldValue) => {\n  const botsToCheck = newValue.filter((newBot) => {\n    return !oldValue.some((oldBot) => oldBot.classname === newBot.classname);\n  });\n  await botsToCheck.forEach(async (favBot) => {\n    const bot = favBot.instance;\n    if (!bot.isAvailable()) {\n      await bot.checkAvailability();\n      updateActiveBots();\n    }\n  });\n  updateActiveBots();\n});\n\nasync function updateActiveBots() {\n  for (const favBot of favBots.value) {\n    // Unselect the bot if user has not confirmed to use it\n    if (favBot.selected) {\n      const confirmed = await favBot.instance.confirmBeforeUsing(\n        confirmModal.value,\n      );\n      if (!confirmed) {\n        store.commit(\"setBotSelected\", {\n          botClassname: favBot.classname,\n          selected: false,\n        });\n      }\n    }\n    activeBots[favBot.classname] =\n      favBot.instance.isAvailable() && favBot.selected;\n  }\n  emit(\"updateActiveBots\", activeBots);\n}\n\nfunction focusPromptTextarea() {\n  promptTextArea.value.focus();\n}\n\nfunction toggleBotsMenu() {\n  botsMenuRef.value.toggleMenu();\n}\n\nfunction handleShortcut(event) {\n  if (event.srcKey === \"focusPromptTextarea\") {\n    focusPromptTextarea();\n  } else if (event.srcKey === \"toggleBotsMenu\") {\n    toggleBotsMenu();\n  }\n}\n\n// Send the prompt when the user presses enter and prevent the default behavior\n// But if the shift, ctrl, alt, or meta keys are pressed, do as default\nfunction filterEnterKey(event) {\n  const keyCode = event.keyCode;\n  if (\n    keyCode == 13 &&\n    !event.shiftKey &&\n    !event.ctrlKey &&\n    !event.altKey &&\n    !event.metaKey\n  ) {\n    event.preventDefault();\n    sendPromptToBots();\n  }\n\n  // up or down\n  const isUpOrDown =\n    keyCode == historyKeyCode.pre || keyCode == historyKeyCode.next;\n\n  const isAuxiliaryKey = event.metaKey || event.ctrlKey;\n\n  // macOS: Cmd + up/down, Windows: Ctrl + up/down\n  if (isAuxiliaryKey && isUpOrDown) {\n    event.preventDefault();\n\n    // get new prompt and set it\n    const newPrompt = getHistoryPrompt(keyCode);\n    prompt.value = newPrompt.content;\n  }\n}\n\nasync function sendPromptToBots() {\n  if (prompt.value.trim() === \"\") return;\n\n  const toBots = favBots.value\n    .filter((favBot) => activeBots[favBot.classname])\n    .map((favBot) => favBot.instance);\n\n  if (toBots.length === 0) return;\n\n  const count = await Messages.getMessagesCount(store.state.currentChatIndex);\n  const isFirstPrompt = count === 0;\n  await store.dispatch(\"sendPrompt\", {\n    prompt: prompt.value,\n    bots: toBots,\n  });\n  if (isFirstPrompt) {\n    updateChatTitleWithFirstPrompt();\n  }\n\n  // Clear the textarea after sending the prompt\n  prompt.value = \"\";\n\n  // reset prompt index\n  promptIndex = 0;\n\n  matomo.value?.trackEvent(\n    \"prompt\",\n    \"send\",\n    \"Active bots count\",\n    toBots.length,\n  );\n}\n\n// current prompt index\nlet promptIndex = 0;\n\n// up and down key code\nconst historyKeyCode = { pre: 38, next: 40 };\n\n// Listen to the up and down arrow keys to obtain historical records.\nfunction getHistoryPrompt(keyCode) {\n  const historyPrompts = store.getters.getCurrentChatPrompt;\n\n  if (!historyPrompts || !historyPrompts.length) return false;\n\n  if (keyCode === historyKeyCode.pre) {\n    // get previous prompt\n    promptIndex =\n      (promptIndex - 1 + historyPrompts.length) % historyPrompts.length;\n  } else if (keyCode === historyKeyCode.next) {\n    // get next prompt\n    promptIndex = (promptIndex + 1) % historyPrompts.length;\n  }\n\n  return historyPrompts[promptIndex];\n}\n\nasync function toggleSelected(bot) {\n  const botClassname = bot.getClassname();\n  let selected = false;\n  if (activeBots[botClassname]) {\n    selected = false;\n  } else {\n    selected = true;\n    if (!bot.isAvailable()) {\n      const availability = await bot.checkAvailability();\n      if (!availability) {\n        clickedBot.value = bot;\n        // Open the bot's settings dialog\n        isMakeAvailableOpen.value = true;\n      } else {\n        updateActiveBots();\n      }\n    }\n  }\n  store.commit(\"setBotSelected\", { botClassname, selected });\n}\n\nonBeforeMount(async () => {\n  favBots.value.forEach(async (favBot) => {\n    await favBot.instance.checkAvailability();\n    updateActiveBots();\n  });\n\n  // Listen message trigged by main process\n  ipcRenderer.on(\"CHECK-AVAILABILITY\", async (event, url) => {\n    const botsToCheck = bots.value.filter((bot) => bot.getLoginUrl() === url);\n    botsToCheck.forEach(async (bot) => {\n      await bot.checkAvailability();\n      updateActiveBots();\n    });\n  });\n});\n\nonMounted(() => {\n  initializeSortable();\n});\n\nlet sortable = undefined;\nfunction initializeSortable() {\n  let isDropOnFavBotBar = false;\n  const onDragEnd = (event) => {\n    event.target.removeEventListener(\"dragend\", onDragEnd);\n    if (isDropOnFavBotBar) {\n      return; // dropped on fav bot bar\n    }\n    // if not drop on fav bot bar, remove it from favorite bar\n    event.target.parentNode.removeChild(event.target);\n    store.commit(\"removeFavoriteBot\", event.target.dataset.id);\n    rerenderFavBotLogos.value++; // trigger re-render to refresh order and shortkey\n    nextTick().then(() => {\n      sortable = undefined;\n      initializeSortable(); // re-initialize sortable instance after re-render\n    });\n  };\n\n  sortable = new Sortable(favBotLogosRef.value, {\n    animation: 200, // ms, animation speed moving items when sorting\n    // dragging started\n    onStart: function (favBot) {\n      isDropOnFavBotBar = false;\n      favBot.item.addEventListener(\"dragend\", onDragEnd);\n    },\n    // dragging ended\n    onEnd: async function (favBot) {\n      if (favBot.oldIndex === favBot.newIndex) {\n        return; // order not changed, return\n      }\n      store.commit(\"setFavBotOrder\", sortable.toArray());\n      rerenderFavBotLogos.value++; // trigger re-render to refresh order and shortkey\n      nextTick().then(() => {\n        sortable = undefined;\n        initializeSortable(); // re-initialize sortable instance after re-render\n      });\n    },\n  });\n  favBotLogosRef.value.addEventListener(\"drop\", () => {\n    isDropOnFavBotBar = true;\n  });\n}\n\nasync function updateChatTitleWithFirstPrompt() {\n  // if this is first prompt, update chat title to first 30 characters of user prompt\n  const messages = await Messages.getMessages(store.state.currentChatIndex);\n  store.commit(\"editChatTitle\", {\n    index: store.state.currentChatIndex,\n    payload: {\n      title: messages[0].content.substring(0, 30),\n    },\n  });\n}\n\nasync function usePrompt(value) {\n  await nextTick();\n  focusPromptTextarea();\n  document.execCommand(\"insertText\", false, value);\n}\n\nconst showMenu = ref(false);\nconst x = ref(0);\nconst y = ref(0);\nfunction show(e) {\n  x.value = e.clientX;\n  y.value = e.clientY - 160;\n  showMenu.value = true;\n}\n\nasync function disableAllBots() {\n  for (const botClassname in activeBots) {\n    if (activeBots[botClassname]) {\n      await store.dispatch(\"setBotSelected\", { botClassname, selected: false });\n    }\n  }\n}\n\nasync function enableAllBots() {\n  for (const botClassname in activeBots) {\n    if (!activeBots[botClassname]) {\n      const bot = favBots.value.find((bot) => bot.classname === botClassname);\n      if (bot && bot.instance && !bot.instance.isAvailable()) {\n        const availability = await bot.instance.checkAvailability();\n        if (!availability) {\n          clickedBot.value = bot.instance;\n          // Open the bot's settings dialog\n          isMakeAvailableOpen.value = true;\n        } else {\n          updateActiveBots();\n        }\n      } else {\n        await store.dispatch(\"setBotSelected\", {\n          botClassname,\n          selected: true,\n        });\n      }\n    }\n  }\n}\n\nfunction removeAllBots() {\n  store.commit(\"setFavoriteBot\", []);\n}\n\ndefineExpose({\n  focusPromptTextarea,\n});\n</script>\n\n<style scoped>\n.footer {\n  background-color: rgba(var(--v-theme-background), 0.7) !important;\n  height: auto !important;\n  display: flex;\n  align-items: center !important;\n  justify-content: space-between;\n  padding: 8px 16px;\n  gap: 8px;\n  box-sizing: border-box;\n  padding-bottom: 0.5rem;\n  box-shadow: none !important;\n}\n\n.bot-logos {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  align-items: center;\n  padding-bottom: 0.5rem;\n}\n\n/* Override default style of vuetify v-textarea */\n.v-textarea--auto-grow textarea {\n  overflow: auto !important;\n}\n\ntextarea::placeholder {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n:deep() .v-field__field > textarea {\n  overflow-y: auto;\n}\n\n.send-prompt-btn {\n  height: 40px !important;\n  margin: 0.4rem !important;\n  text-transform: uppercase !important;\n  font-size: small !important;\n  color: rgb(var(--v-theme-on-primary));\n  background-color: rgb(var(--v-theme-primary));\n  border-radius: 4px !important;\n}\n\n:deep() .v-field.v-field--appended {\n  padding-right: 0;\n}\n\n:deep() .v-field__append-inner {\n  padding-top: 0;\n}\n</style>\n","import script from \"./FooterBar.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./FooterBar.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./FooterBar.vue?vue&type=style&index=0&id=88725fe2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-88725fe2\"]])\n\nexport default __exports__","<template>\n  <div id=\"snackbar\" class=\"text-center\">\n    <v-snackbar :vertical=\"true\" :timeout=\"-1\" multi-line v-model=\"snackbar\">\n      <span class=\"text-center font-weight-bold\">\n        {{ $t(\"updates.updateAvailable\") }}\n      </span>\n      <span class=\"text-center\">\n        {{ $t(\"updates.currentVersion\") }}: {{ versions.current }}\n      </span>\n      <span class=\"text-center\">\n        {{ $t(\"updates.latestVersion\") }}: {{ versions.latest }}\n      </span>\n      <v-btn\n        prepend-icon=\"mdi-github\"\n        color=\"primary\"\n        variant=\"tonal\"\n        @click=\"openReleasePage\"\n      >\n        {{ $t(\"updates.downloadFromGitHub\") }}\n      </v-btn>\n      <template v-slot:actions>\n        <v-btn color=\"primary\" @click=\"skip\">\n          {{ $t(\"updates.skipThisVersion\") }}\n        </v-btn>\n        <v-btn color=\"primary\" @click=\"snackbar = false\">\n          {{ $t(\"updates.close\") }}\n        </v-btn>\n      </template>\n    </v-snackbar>\n  </div>\n</template>\n<script setup>\nimport { ref } from \"vue\";\nimport { compare } from \"compare-versions\";\nconst { shell, ipcRenderer } = window.require(\"electron\");\n\nlet versions = undefined;\nconst snackbar = ref(false);\nipcRenderer.on(\"version-saved\", checkVersion);\n\nfunction checkVersion() {\n  versions = JSON.parse(localStorage.getItem(\"chatall-versions\"));\n  if (\n    versions?.latest &&\n    versions?.current &&\n    compare(versions.latest, versions.current, \">\")\n  ) {\n    if (!versions?.skip || compare(versions.latest, versions.skip, \">\")) {\n      snackbar.value = true;\n    }\n  }\n  ipcRenderer.removeListener(\"version-saved\", checkVersion);\n}\n\nfunction skip() {\n  snackbar.value = false;\n  versions.skip = versions.latest;\n  localStorage.setItem(\"chatall-versions\", JSON.stringify(versions));\n}\n\nfunction openReleasePage() {\n  snackbar.value = false;\n  shell.openExternal(`https://github.com/sunner/ChatALL/releases/latest`);\n}\n</script>\n<style scoped>\n:deep() .v-btn {\n  text-transform: none;\n  margin: 0.2rem;\n}\n\n:deep() .v-snackbar__actions {\n  margin: 0 !important;\n  justify-content: end;\n  width: 100%;\n}\n\n:deep() .v-snackbar__content {\n  padding: 0.5rem;\n  padding-bottom: 0;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  justify-content: center;\n}\n\nspan {\n  color: rgb(var(--v-theme-font));\n}\n</style>\n","import script from \"./UpdateNotificationModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UpdateNotificationModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UpdateNotificationModal.vue?vue&type=style&index=0&id=6015a817&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6015a817\"]])\n\nexport default __exports__","<template>\n  <v-form\n    ref=\"formRef\"\n    @submit.prevent=\"true\"\n    v-shortkey=\"SHORTCUT_FIND.key\"\n    @shortkey=\"handleFindShortcut\"\n    style=\"\n      position: fixed;\n      right: 0px;\n      z-index: 1;\n      width: 400px;\n      min-width: 200px;\n      padding-top: 0.5rem;\n    \"\n  >\n    <v-text-field\n      id=\"find-text-field\"\n      @keydown.enter=\"() => find()\"\n      @keydown.esc=\"closeFindTextField\"\n      @focus=\"$event.target.select()\"\n      ref=\"findTextRef\"\n      color=\"primary\"\n      density=\"compact\"\n      variant=\"solo\"\n      :label=\"$t('find.find')\"\n      single-line\n      :rules=\"[() => isMatch || $t('find.noMatches')]\"\n      v-model=\"findTextModel\"\n      v-show=\"isShowFindText\"\n      prepend-inner-icon=\"mdi-magnify\"\n    >\n      <template v-slot:append-inner>\n        <v-btn-group>\n          <v-btn\n            size=\"x-small\"\n            icon=\"mdi-chevron-up\"\n            @click=\"find(true)\"\n          ></v-btn>\n          <v-btn\n            size=\"x-small\"\n            icon=\"mdi-chevron-down\"\n            @click=\"find(false)\"\n          ></v-btn>\n        </v-btn-group>\n        <v-tooltip\n          :text=\"$t('find.matchCase')\"\n          location=\"bottom\"\n          v-model=\"isShowMatchCaseTooltip\"\n        >\n          <template v-slot:activator=\"{ props }\">\n            <v-btn-toggle v-model=\"matchCaseToggle\">\n              <v-btn\n                :value=\"MATCH_CASE_VALUE\"\n                v-bind=\"props\"\n                size=\"x-small\"\n                icon=\"mdi-format-letter-case\"\n              ></v-btn>\n            </v-btn-toggle>\n          </template>\n        </v-tooltip>\n        <v-tooltip\n          :text=\"$t('find.wrapAround')\"\n          location=\"bottom\"\n          v-model=\"isShowWrapAroundTooltip\"\n        >\n          <template v-slot:activator=\"{ props }\">\n            <v-btn-toggle v-model=\"wrapAroundToggle\">\n              <v-btn\n                :value=\"WRAP_AROUND_VALUE\"\n                v-bind=\"props\"\n                size=\"x-small\"\n                icon=\"mdi-autorenew\"\n              ></v-btn>\n            </v-btn-toggle>\n          </template>\n        </v-tooltip>\n        <v-btn-group>\n          <v-btn\n            size=\"x-small\"\n            icon=\"mdi-close\"\n            @click=\"closeFindTextField\"\n          ></v-btn>\n        </v-btn-group>\n      </template>\n    </v-text-field>\n  </v-form>\n</template>\n\n<script setup>\nimport { ref, nextTick } from \"vue\";\nimport { SHORTCUT_FIND } from \"./ShortcutGuide/shortcut.const\";\n\nconst formRef = ref(null);\n\nconst findTextRef = ref(null);\nconst findTextModel = ref(\"\");\nconst isShowFindText = ref(false);\nconst FIND_TEXT_FIELD_ID = \"find-text-field\";\n\nconst MATCH_CASE_VALUE = \"case\";\nconst WRAP_AROUND_VALUE = \"wrap\";\n\nconst matchCaseToggle = ref([]); // default disable match case\nconst isShowMatchCaseTooltip = ref(false);\n\nconst wrapAroundToggle = ref([WRAP_AROUND_VALUE]); // default enable wrap around\nconst isShowWrapAroundTooltip = ref(false);\n\nconst isMatch = ref(true);\n\nfunction handleFindShortcut() {\n  isShowFindText.value ? closeFindTextField() : showFindTextField();\n}\n\nfunction showFindTextField() {\n  isShowFindText.value = true;\n  nextTick().then(findTextRef.value.focus);\n}\n\nfunction closeFindTextField() {\n  isShowFindText.value = false;\n}\n\nfunction find(backward) {\n  isMatch.value = window.find(\n    findTextModel.value,\n    matchCaseToggle.value?.length,\n    backward,\n    wrapAroundToggle.value?.length,\n  );\n  if (\n    isMatch.value &&\n    wrapAroundToggle.value?.length && // if wrap around toggled\n    window.getSelection()?.focusNode?.lastElementChild?.id ===\n      FIND_TEXT_FIELD_ID // when the match is in find-text-field\n  ) {\n    isMatch.value = false; // show no matches\n  }\n  formRef.value.validate();\n}\n\ndefineExpose({\n  showFindTextField,\n});\n</script>\n\n<style scoped>\n:deep() .v-field {\n  padding-right: 0;\n}\n</style>\n","import script from \"./FindModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./FindModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./FindModal.vue?vue&type=style&index=0&id=4c4cde2d&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4c4cde2d\"]])\n\nexport default __exports__","<template>\n  <v-overlay\n    :scrim=\"true\"\n    :model-value=\"props.open\"\n    v-on:after-leave=\"closeShortcutGuide\"\n    @click=\"closeShortcutGuide\"\n  >\n    <div\n      style=\"position: absolute; top: 0; left: 0; width: 100vw; height: 100vh\"\n    >\n      <div\n        ref=\"shortcutGuideContentRef\"\n        style=\"position: relative\"\n        class=\"markdown-body\"\n      ></div>\n    </div>\n  </v-overlay>\n</template>\n\n<script setup>\nconst props = defineProps([\"open\"]);\nconst emit = defineEmits([\"update:open\"]);\n\nimport { ref } from \"vue\";\nimport { onUpdated } from \"vue\";\nimport { SHORTCUT_LIST } from \"./shortcut.const\";\n\nconst shortcutGuideContentRef = ref(null);\n\nonUpdated(async () => {\n  if (!props.open) {\n    return;\n  }\n  addWindowResizeListener();\n  SHORTCUT_LIST.forEach((shortcut) => {\n    const shortcutElement = document.getElementById(shortcut.elementId);\n    if (!shortcutElement) {\n      return;\n    }\n    const position = shortcutElement.getBoundingClientRect();\n    const div = document.createElement(\"div\");\n    div.classList.add(\"shortcut-label\");\n    div.style.top = `${position.top + (shortcut.offset?.top ?? 0)}px`;\n    if (shortcut.alignHorizontallyCenter) {\n      div.style.left = `${\n        position.left + position.width / 2 + (shortcut.offset?.left ?? 0)\n      }px`;\n    } else {\n      div.style.left = `${position.left + (shortcut.offset?.left ?? 0)}px`;\n    }\n    div.innerHTML = getShortcutLabelHTML(shortcut.key);\n    div.style.flexDirection = shortcut.flexDirection;\n    shortcutGuideContentRef.value.appendChild(div);\n  });\n});\n\nfunction getShortcutLabelHTML(keys) {\n  return keys.map(kbd).join(\"<span>+</span>\");\n}\n\nfunction kbd(text) {\n  return `<kbd>${formatModifierText(text)}</kbd>`;\n}\n\nfunction formatModifierText(string) {\n  string = string.replace(\"meta\", \"cmd\");\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction addWindowResizeListener() {\n  window.addEventListener(\"resize\", closeShortcutGuide);\n}\n\nconst toggleShortcutGuide = () => {\n  if (props.open) {\n    closeShortcutGuide();\n  } else {\n    openShortcutGuide();\n  }\n};\n\nconst closeShortcutGuide = () => {\n  window.removeEventListener(\"resize\", closeShortcutGuide);\n  emit(\"update:open\", false);\n};\n\nconst openShortcutGuide = () => {\n  addWindowResizeListener();\n  emit(\"update:open\", true);\n};\n\ndefineExpose({\n  toggleShortcutGuide,\n});\n</script>\n<style scoped>\n:deep() .shortcut-label {\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n}\n\n:deep() span {\n  line-height: 1rem;\n  color: rgb(var(--v-theme-font));\n}\n\n:deep() kbd {\n  padding: 3px 5px;\n  font:\n    11px ui-monospace,\n    SFMono-Regular,\n    SF Mono,\n    Menlo,\n    Consolas,\n    Liberation Mono,\n    monospace;\n  line-height: 10px;\n  color: rgb(var(--v-theme-font));\n  vertical-align: middle;\n  background-color: rgb(var(--v-theme-background));\n  border: solid 1px rgba(110, 118, 129, 0.4);\n  border-bottom-color: rgba(110, 118, 129, 0.4);\n  border-radius: 6px;\n  box-shadow: inset 0 -1px 0 rgba(110, 118, 129, 0.4);\n}\n</style>\n","import script from \"./ShortcutGuide.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ShortcutGuide.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ShortcutGuide.vue?vue&type=style&index=0&id=28fc2763&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-28fc2763\"]])\n\nexport default __exports__","<template>\n  <v-dialog\n    height=\"75%\"\n    width=\"80%\"\n    :model-value=\"props.open\"\n    @update:model-value=\"closeDialog\"\n  >\n    <v-card height=\"100%\">\n      <v-card-title>\n        <v-row>\n          <v-col class=\"d-flex align-center\">\n            {{ props.action.name }}\n            <v-btn\n              flat\n              @click=\"isEdit = !isEdit\"\n              :icon=\"isEdit ? 'mdi-eye' : 'mdi-pencil-outline'\"\n            ></v-btn>\n          </v-col>\n          <v-col class=\"d-flex align-center justify-end\">\n            <v-label>{{ previewTextarea.length }}</v-label>\n          </v-col>\n        </v-row>\n      </v-card-title>\n      <v-card-text class=\"pt-0 overflow-auto\">\n        <v-textarea\n          hide-details\n          rows=\"20\"\n          v-show=\"isEdit\"\n          v-model=\"previewTextarea\"\n          @input=\"previewText = previewTextarea\"\n        >\n        </v-textarea>\n        <chat-prompt\n          v-show=\"!isEdit\"\n          :message=\"{ content: previewText }\"\n          :isThread=\"false\"\n          :columns=\"3\"\n        ></chat-prompt>\n      </v-card-text>\n      <v-card-actions class=\"justify-end pr-6 pt-0\" style=\"gap: 0.3rem\">\n        <v-btn\n          class=\"send-prompt-btn\"\n          elevation=\"2\"\n          :disabled=\"\n            previewTextarea.trim() === '' ||\n            selectedBots.length === 0 ||\n            !chatRef\n          \"\n          @click=\"send\"\n        >\n          {{ $t(\"footer.sendPrompt\") }}\n        </v-btn>\n        <div class=\"bot-logos\">\n          <BotLogo\n            v-for=\"(bot, index) in favBots\"\n            :id=\"`fav-bot-${index + 1}`\"\n            :key=\"index\"\n            :bot=\"bot.instance\"\n            :active=\"bot.selected\"\n            :data-id=\"bot.classname\"\n            size=\"36\"\n            @click=\"bot.selected = !bot.selected\"\n          />\n        </div>\n        <v-form class=\"d-flex\">\n          <v-radio-group v-model=\"chatRef\" density=\"compact\" hide-details>\n            <v-radio :label=\"$t('chat.inNewChat')\" value=\"new\"></v-radio>\n            <v-radio\n              :label=\"$t('chat.inCurrentChat')\"\n              value=\"current\"\n            ></v-radio>\n          </v-radio-group>\n        </v-form>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script setup>\nimport { ref, toRaw, watch, computed } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { preview } from \"../helpers/template-helper\";\nimport ChatPrompt from \"@/components/Messages/ChatPrompt.vue\";\nimport BotLogo from \"@/components/Footer/BotLogo.vue\";\nimport _bots from \"@/bots\";\nimport Chats from \"@/store/chats\";\n\nconst store = useStore();\nconst isEdit = ref(false);\nconst previewText = ref(\"\");\nconst previewTextarea = ref(\"\");\nconst chatRef = ref(undefined);\nconst emit = defineEmits([\"update:open\"]);\nconst props = defineProps([\"open\", \"action\", \"responses\", \"activeBots\"]);\nwatch(() => props.open, onChangeOpenProp);\n\nconst selectedResponses = computed(() =>\n  store.state.selectedResponses.map((res) => {\n    return { botName: res.className, botResponse: res.content };\n  }),\n);\nconst favBots = ref([]);\nconst selectedBots = computed(() =>\n  favBots.value.filter((bot) => bot.selected),\n);\n\nfunction onChangeOpenProp() {\n  if (props.open) {\n    updatePreview();\n    updateFavBots();\n  } else {\n    isEdit.value = false;\n  }\n}\n\nasync function updatePreview() {\n  previewTextarea.value = await preview(\n    props.action.prefix,\n    props.action.template,\n    props.action.suffix,\n    selectedResponses.value,\n  );\n  previewText.value = previewTextarea.value;\n}\n\nfunction updateFavBots() {\n  favBots.value = [];\n  for (const key in props.activeBots) {\n    if (props.activeBots[key]) {\n      favBots.value.push({\n        classname: key,\n        selected: false,\n        instance: _bots.getBotByClassName(key),\n      });\n    }\n  }\n}\n\nfunction closeDialog(value) {\n  emit(\"update:open\", value);\n}\n\nasync function send() {\n  let newChatIndex;\n  if (chatRef.value === \"new\") {\n    newChatIndex = await Chats.add();\n    store.commit(\"selectChat\", newChatIndex);\n  }\n  await store\n    .dispatch(\"sendPrompt\", {\n      prompt: previewTextarea.value,\n      bots: selectedBots.value.map((bot) => toRaw(bot).instance),\n    })\n    .then(() => {\n      if (chatRef.value === \"new\") {\n        store.commit(\"editChatTitle\", {\n          index: newChatIndex,\n          payload: {\n            title: previewTextarea.value.substring(0, 30),\n          },\n        });\n      }\n    });\n  closeDialog(false);\n  deselectAllResponses();\n}\n\nfunction deselectAllResponses() {\n  store.commit(\"deleteAllSelectedResponses\");\n}\n</script>\n\n<style scoped>\n:deep() .v-textarea textarea {\n    height: 100%;\n}\n\n:deep() i.v-icon {\n  color: rgb(var(--v-theme-primary));\n}\n\n.bot-logos {\n  gap: 4px;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.send-prompt-btn {\n  height: 40px !important;\n  margin: 0.4rem !important;\n  text-transform: uppercase !important;\n  font-size: small !important;\n  color: rgb(var(--v-theme-on-primary));\n  background-color: rgb(var(--v-theme-primary));\n  border-radius: 4px !important;\n}\n</style>\n","import script from \"./ChatAction.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatAction.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatAction.vue?vue&type=style&index=0&id=66e42126&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-66e42126\"]])\n\nexport default __exports__","<template>\n  <v-app>\n    <v-container fluid style=\"padding: 0\">\n      <ChatDrawer\n        ref=\"chatDrawerRef\"\n        v-model:open=\"isChatDrawerOpen\"\n        @focus-textarea=\"focusPromptTextarea\"\n      ></ChatDrawer>\n      <v-main class=\"content\" :class=\"{ paddingTopZero: !isShowAppBar }\">\n        <v-slide-y-transition>\n          <v-app-bar\n            :id=\"SHORTCUT_APP_BAR.elementId\"\n            @shortkey=\"\n              isShowAppBar = !isShowAppBar;\n              ipcRenderer.invoke('set-is-show-menu-bar', isShowAppBar);\n            \"\n            v-shortkey=\"SHORTCUT_APP_BAR.key\"\n            v-show=\"isShowAppBar\"\n            :style=\"{\n              transform: isShowAppBar ? 'translateY(0)' : 'translateY(-100%)',\n            }\"\n            class=\"header-content pa-0\"\n          >\n            <!-- Start Header  -->\n            <div class=\"header-content\" v-show=\"isSelectedResponsesEmpty\">\n              <v-app-bar-nav-icon\n                :id=\"SHORTCUT_CHAT_DRAWER.elementId\"\n                variant=\"text\"\n                @click.stop=\"isChatDrawerOpen = !isChatDrawerOpen\"\n                @shortkey=\"isChatDrawerOpen = !isChatDrawerOpen\"\n                v-shortkey=\"SHORTCUT_CHAT_DRAWER.key\"\n              >\n              </v-app-bar-nav-icon>\n              <img\n                :class=\"{ 'dark-png': store.state.theme === Theme.DARK }\"\n                class=\"logo\"\n                src=\"@/assets/logo-banner.png\"\n                alt=\"ChatALL\"\n              />\n            </div>\n            <div\n              class=\"column-icons header-content\"\n              v-show=\"isSelectedResponsesEmpty\"\n            >\n              <img\n                v-for=\"columnCount in 3\"\n                :id=\"`column-${columnCount}`\"\n                :key=\"columnCount\"\n                :src=\"getColumnImage(columnCount)\"\n                @click=\"changeColumns(columnCount)\"\n                @shortkey=\"changeColumns(columnCount)\"\n                v-shortkey=\"[`f${columnCount}`]\"\n                :class=\"{\n                  selected: columns === columnCount,\n                  'dark-png': store.state.theme === Theme.DARK,\n                }\"\n              />\n            </div>\n            <div\n              class=\"header-content\"\n              style=\"padding-right: 16px\"\n              v-show=\"isSelectedResponsesEmpty\"\n            >\n              <v-icon\n                :id=\"SHORTCUT_FIND.elementId\"\n                class=\"cursor-pointer\"\n                color=\"primary\"\n                icon=\"mdi-magnify\"\n                size=\"x-large\"\n                @click=\"openFind()\"\n              ></v-icon>\n              <v-icon\n                v-shortkey=\"SHORTCUT_CLEAR_MESSAGES.key\"\n                @shortkey=\"clearMessages\"\n                :id=\"SHORTCUT_CLEAR_MESSAGES.elementId\"\n                class=\"cursor-pointer\"\n                color=\"primary\"\n                icon=\"mdi-broom\"\n                size=\"x-large\"\n                @click=\"clearMessages()\"\n              ></v-icon>\n              <v-icon\n                v-shortkey=\"SHORTCUT_SETTINGS.key\"\n                @shortkey=\"openSettingsModal\"\n                :id=\"SHORTCUT_SETTINGS.elementId\"\n                class=\"cursor-pointer\"\n                color=\"primary\"\n                icon=\"mdi-cog\"\n                size=\"x-large\"\n                @click=\"openSettingsModal()\"\n              ></v-icon>\n              <v-icon\n                v-shortkey=\"SHORTCUT_SHORTCUT_GUIDE.key\"\n                @shortkey=\"toggleShortcutGuide\"\n                :id=\"SHORTCUT_SHORTCUT_GUIDE.elementId\"\n                class=\"cursor-pointer\"\n                color=\"primary\"\n                icon=\"mdi-help\"\n                size=\"x-large\"\n                @click=\"toggleShortcutGuide()\"\n              ></v-icon>\n            </div>\n            <!-- End Header  -->\n            <!-- Start Selected Responses  -->\n            <div\n              class=\"header-content pr-3\"\n              style=\"text-wrap: nowrap\"\n              v-show=\"!isSelectedResponsesEmpty\"\n            >\n              <v-btn icon color=\"primary\" @click=\"deselectAll\">\n                <v-icon>mdi-arrow-left</v-icon>\n              </v-btn>\n              {{\n                $t(\"header.selectedResponsesCount\", {\n                  selectedCount: store.state.selectedResponses.length,\n                })\n              }}\n            </div>\n            <div\n              class=\"header-content overflow-auto\"\n              v-show=\"!isSelectedResponsesEmpty\"\n            >\n              <v-btn\n                v-for=\"action in userActions\"\n                color=\"primary\"\n                class=\"no-text-transform\"\n                :text=\"action.name\"\n                :key=\"action.index\"\n                @click=\"callAction(action)\"\n              ></v-btn>\n            </div>\n            <!-- End Selected Responses  -->\n          </v-app-bar>\n        </v-slide-y-transition>\n        <FindModal ref=\"findRef\"></FindModal>\n\n        <ChatMessages :chat=\"currentChat\" :columns=\"columns\"></ChatMessages>\n        <FooterBar\n          ref=\"footerBarRef\"\n          :chat=\"currentChat\"\n          @update-active-bots=\"(bots) => (activeBots = bots)\"\n        ></FooterBar>\n      </v-main>\n      <SettingsModal v-model:open=\"isSettingsOpen\" />\n      <ConfirmModal ref=\"confirmModal\" />\n      <UpdateNotification></UpdateNotification>\n      <ShortcutGuide\n        ref=\"shortcutGuideRef\"\n        v-model:open=\"isShortcutGuideOpen\"\n      ></ShortcutGuide>\n      <ChatAction\n        v-model:open=\"isChatActionOpen\"\n        :action=\"action\"\n        :responses=\"store.state.selectedResponses\"\n        :activeBots=\"activeBots\"\n      ></ChatAction>\n    </v-container>\n  </v-app>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, nextTick, watch } from \"vue\";\n\nimport { useTheme } from \"vuetify\";\nimport { useStore } from \"vuex\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { applyTheme, resolveTheme, Theme } from \"./theme\";\nimport {\n  SHORTCUT_FIND,\n  SHORTCUT_SETTINGS,\n  SHORTCUT_SHORTCUT_GUIDE,\n  SHORTCUT_CLEAR_MESSAGES,\n  SHORTCUT_CHAT_DRAWER,\n  SHORTCUT_APP_BAR,\n} from \"./components/ShortcutGuide/shortcut.const\";\n\nimport i18n from \"./i18n\";\nimport Chats from \"@/store/chats\";\nimport { initializeQueues, startQueuesProcessing } from \"@/store/queue\";\nimport { useObservable } from \"@vueuse/rxjs\";\nimport { liveQuery } from \"dexie\";\nimport { onScroll } from \"./helpers/scroll-helper\";\n\n// Components\nimport ChatDrawer from \"@/components/ChatDrawer/ChatDrawer.vue\";\nimport ChatMessages from \"@/components/Messages/ChatMessages.vue\";\nimport SettingsModal from \"@/components/SettingsModal.vue\";\nimport ConfirmModal from \"@/components/ConfirmModal.vue\";\nimport FooterBar from \"@/components/Footer/FooterBar.vue\";\nimport UpdateNotification from \"@/components/Notification/UpdateNotificationModal.vue\";\nimport FindModal from \"@/components/FindModal.vue\";\nimport ShortcutGuide from \"@/components/ShortcutGuide/ShortcutGuide.vue\";\nimport ChatAction from \"@/components/ChatAction.vue\";\n\n// Styles\nimport \"@mdi/font/css/materialdesignicons.css\";\n\nconst { ipcRenderer } = window.require(\"electron\");\n\nconst store = useStore();\nconst vuetifyTheme = useTheme();\nconst onUpdatedSystemTheme = async () => {\n  const resolvedTheme = await resolveTheme(store.state.mode, ipcRenderer);\n  store.commit(\"setTheme\", resolvedTheme);\n  applyTheme(resolvedTheme, vuetifyTheme);\n};\n\nconst currentChat = useObservable(\n  liveQuery(() => {\n    const chat = Chats.table.orderBy(\"selectedTime\").last();\n    console.log(\"chat changed\");\n    return chat;\n  }),\n  { initialValue: {} },\n);\n\nipcRenderer.on(\"on-updated-system-theme\", onUpdatedSystemTheme);\n\nconst confirmModal = ref(null);\nconst findRef = ref(null);\nconst footerBarRef = ref(null);\nconst shortcutGuideRef = ref(null);\nconst isShortcutGuideOpen = ref(false);\nconst isSettingsOpen = ref(false);\nconst isChatDrawerOpen = ref(store.state.isChatDrawerOpen);\nconst isShowAppBar = ref(store.state.general.isShowAppBar);\nconst chatDrawerRef = ref();\nconst isSelectedResponsesEmpty = ref(true);\nconst isChatActionOpen = ref(false);\n\nconst columns = computed(() => store.state.columns);\nconst userActions = computed(() => {\n  return store.state.actions.filter((p) => !p.hide);\n});\n\nconst changeColumns = (columns) => store.commit(\"changeColumns\", columns);\nconst setUuid = (uuid) => store.commit(\"setUuid\", uuid);\nlet action;\nlet activeBots;\n\nasync function openSettingsModal() {\n  if (isSettingsOpen.value) {\n    // click too fast\n    isSettingsOpen.value = false;\n    await nextTick();\n  }\n  isSettingsOpen.value = true;\n}\n\nfunction openFind() {\n  findRef.value.showFindTextField();\n}\n\nfunction toggleShortcutGuide() {\n  if (!isChatDrawerOpen.value || !isShowAppBar.value) {\n    // open chat drawer to show new chat shortcut\n    isChatDrawerOpen.value = true;\n    isShowAppBar.value = true;\n    setTimeout(() => {\n      shortcutGuideRef.value.toggleShortcutGuide();\n    }, 200);\n  } else {\n    shortcutGuideRef.value.toggleShortcutGuide();\n  }\n}\n\nasync function clearMessages() {\n  const result = await confirmModal.value.showModal(\n    i18n.global.t(\"header.clearMessages\"),\n  );\n  if (result) {\n    store.commit(\"clearMessages\");\n  }\n}\n\nfunction focusPromptTextarea() {\n  footerBarRef.value.focusPromptTextarea();\n}\n\nonMounted(() => {\n  !store.state.uuid && setUuid(uuidv4());\n  window._paq.push([\"setUserId\", store.state.uuid]);\n  window._paq.push([\"trackPageView\"]);\n\n  const ver = require(\"../package.json\").version;\n  document.title = `ChatALL.ai - v${ver}`;\n\n  initializeQueues(store);\n  startQueuesProcessing();\n\n  window.addEventListener(\"scroll\", onScroll);\n});\n\nwatch(\n  () => store.state.selectedResponses.length,\n  () => {\n    isSelectedResponsesEmpty.value = store.state.selectedResponses.length === 0;\n  },\n);\n\nwatch(\n  () => isShowAppBar.value,\n  () =>\n    store.commit(\"setGeneral\", {\n      isShowAppBar: isShowAppBar.value,\n      isShowMenuBar: isShowAppBar.value,\n    }),\n);\n\nfunction getColumnImage(columnCount) {\n  return require(`@/assets/column-${columnCount}.svg`);\n}\n\nfunction deselectAll() {\n  store.commit(\"deleteAllSelectedResponses\");\n}\n\nfunction callAction(value) {\n  action = value;\n  isChatActionOpen.value = true;\n}\n</script>\n\n<style>\n@import \"katex/dist/katex.min.css\";\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: \"Arial\", sans-serif;\n}\n\n#app {\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n}\n\nheader {\n  width: 100%;\n  background-color: rgb(var(--v-theme-header));\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.25);\n  padding: 16px;\n  z-index: 999;\n}\n\n.header-content {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.logo {\n  height: 40px;\n}\n\n.column-icons img {\n  opacity: 0.5;\n  cursor: pointer;\n  width: 24px;\n  height: 24px;\n  margin: 4px;\n}\n\nimg.selected {\n  opacity: 1;\n}\n\n.content {\n  background-color: rgb(var(--v-theme-background));\n}\n\n.cursor-pointer {\n  cursor: pointer;\n}\n\n.dark-png {\n  filter: grayscale(1) brightness(5);\n}\n\n.v-toolbar__content {\n  justify-content: space-between;\n}\n\n.vuepress-markdown-body {\n  color: var(--v-theme-font) !important;\n}\n.vuepress-markdown-body:not(.custom) {\n  padding: 0 !important;\n  background-color: transparent !important;\n}\n.vuepress-markdown-body .arrow {\n  display: inline !important;\n}\n.vuepress-markdown-body .arrow.up,\n.arrow.down,\n.arrow.left,\n.arrow.right {\n  display: inline-block !important;\n}\n.vuepress-markdown-body tr:nth-child(2n) {\n  background-color: rgb(var(--v-theme-table-tr-2n)) !important;\n}\n.vuepress-markdown-body code {\n  color: rgb(var(--v-theme-code-font)) !important;\n  background-color: rgb(var(--v-theme-code-background)) !important;\n}\n.vuepress-markdown-body pre[class*=\"v-md-prism-\"] code,\n.vuepress-markdown-body pre code {\n  color: #fff !important;\n  background-color: initial !important;\n}\n.no-text-transform {\n  text-transform: none !important;\n}\n.paddingTopZero {\n  padding-top: 0!important;\n}\n</style>\n","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=25357c3a&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <CommonBotSettings\n    :settings=\"settings\"\n    :brand-id=\"brandId\"\n    mutation-type=\"setAzureOpenaiApi\"\n    :watcher=\"watcher\"\n  ></CommonBotSettings>\n</template>\n\n<script>\nimport Bot from \"@/bots/microsoft/AzureOpenAIAPIBot\";\nimport CommonBotSettings from \"@/components/BotSettings/CommonBotSettings.vue\";\nimport { Type } from \"./settings.const\";\n\nconst settings = [\n  {\n    type: Type.Text,\n    name: \"azureApiKey\",\n    title: \"azureOpenaiApi.azureOpenAIApiKey\",\n    description: \"settings.secretPrompt\",\n    placeholder: \"b40...\",\n  },\n  {\n    type: Type.Text,\n    name: \"azureApiInstanceName\",\n    title: \"azureOpenaiApi.azureApiInstanceName\",\n    description: \"azureOpenaiApi.azureApiInstanceNamePrompt\",\n  },\n  {\n    type: Type.Text,\n    name: \"azureOpenAIApiDeploymentName\",\n    title: \"azureOpenaiApi.azureOpenAIApiDeploymentName\",\n    description: \"azureOpenaiApi.azureOpenAIApiDeploymentNamePrompt\",\n  },\n  {\n    type: Type.Text,\n    name: \"azureOpenAIApiVersion\",\n    title: \"azureOpenaiApi.azureOpenAIApiVersion\",\n    description: \"azureOpenaiApi.azureOpenAIApiVersionPrompt\",\n  },\n  {\n    type: Type.Slider,\n    name: \"temperature\",\n    title: \"azureOpenaiApi.temperature\",\n    description: \"azureOpenaiApi.temperaturePrompt\",\n    min: 0,\n    max: 2,\n    step: 0.1,\n    ticks: {\n      0: \"azureOpenaiApi.temperature0\",\n      2: \"azureOpenaiApi.temperature2\",\n    },\n  },\n  {\n    type: Type.Slider,\n    name: \"pastRounds\",\n    title: \"bot.pastRounds\",\n    description: \"bot.pastRoundsPrompt\",\n    min: 0,\n    max: 10,\n    step: 1,\n  },\n];\nexport default {\n  components: {\n    CommonBotSettings,\n  },\n  data() {\n    return {\n      settings: settings,\n      brandId: Bot._brandId,\n    };\n  },\n  methods: {\n    watcher() {\n      Bot.getInstance().setupModel();\n    },\n  },\n};\n</script>\n","import { render } from \"./AzureOpenAIAPIBotSettings.vue?vue&type=template&id=596a712c\"\nimport script from \"./AzureOpenAIAPIBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./AzureOpenAIAPIBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/google/BardBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./BardBotSettings.vue?vue&type=template&id=6f3921cb\"\nimport script from \"./BardBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./BardBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/microsoft/BingChatBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./BingChatBotSettings.vue?vue&type=template&id=486ae740\"\nimport script from \"./BingChatBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./BingChatBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n  <CommonBotSettings\n    :settings=\"settings\"\n    :brand-id=\"brandId\"\n    mutation-type=\"setCharacterAI\"\n  ></CommonBotSettings>\n</template>\n\n<script>\nimport Bot from \"@/bots/CharacterAIBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\nimport CommonBotSettings from \"@/components/BotSettings/CommonBotSettings.vue\";\nimport { Type } from \"./settings.const\";\n\nconst settings = [\n  {\n    type: Type.Combobox,\n    name: \"characterId\",\n    title: \"Character ID\",\n    itemProps: true,\n    items: [\"YntB_ZeqRq2l_aVf2gWDCZl4oBttQzDvhj9cXafWcF8\", \"edit-me\"],\n  },\n];\n\nexport default {\n  components: {\n    LoginSetting,\n    CommonBotSettings,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n      settings: settings,\n      brandId: Bot._brandId,\n    };\n  },\n};\n</script>\n","import { render } from \"./CharacterAIBotSettings.vue?vue&type=template&id=7e81564a\"\nimport script from \"./CharacterAIBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./CharacterAIBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/zhipu/ChatGLMBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\nimport { mapMutations } from \"vuex\";\nconst { ipcRenderer } = window.require(\"electron\");\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the CHATGLM-TOKEN message from background.js\n    ipcRenderer.on(\"CHATGLM-TOKENS\", (event, token) => {\n      this.setChatGLM(token);\n    });\n  },\n  methods: {\n    ...mapMutations([\"setChatGLM\"]),\n  },\n};\n</script>\n","import { render } from \"./ChatGLMBotSettings.vue?vue&type=template&id=32783c80\"\nimport script from \"./ChatGLMBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./ChatGLMBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-item>\n    <v-alert type=\"info\" outlined>{{ $t(\"chatGpt.notice\") }} </v-alert>\n  </v-list-item>\n  <login-setting :bot=\"bot\"></login-setting>\n  <v-list-item>\n    <v-list-item-title>{{ $t(\"chatGpt.autoRefresh\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"chatGpt.autoRefreshPrompt\")\n    }}</v-list-item-subtitle>\n    <v-checkbox\n      v-model=\"autoRefresh\"\n      color=\"primary\"\n      hideDetails=\"auto\"\n      :label=\"$t('settings.enable')\"\n    ></v-checkbox>\n  </v-list-item>\n</template>\n\n<script>\nimport { mapState, mapMutations } from \"vuex\";\n\nimport Bot from \"@/bots/openai/ChatGPTBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nconst AUTO_REFRESH_CYCLE = 45; // seconds\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  methods: {\n    ...mapMutations([\"setChatgpt\"]),\n  },\n  computed: {\n    ...mapState([\"chatgpt\"]),\n    autoRefresh: {\n      get() {\n        return this.chatgpt.refreshCycle > 0;\n      },\n      set(auto) {\n        if (auto) {\n          this.setChatgpt(AUTO_REFRESH_CYCLE);\n          this.bot.setRefreshCycle(AUTO_REFRESH_CYCLE);\n        } else {\n          this.setChatgpt(0);\n          this.bot.setRefreshCycle(0);\n        }\n      },\n    },\n  },\n};\n</script>\n","import { render } from \"./ChatGPTBotSettings.vue?vue&type=template&id=1cbbe992\"\nimport script from \"./ChatGPTBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./ChatGPTBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/ClaudeAIBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\nimport { mapMutations } from \"vuex\";\nconst { ipcRenderer } = window.require(\"electron\");\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the CLAUDE-2-ORG message from background.js\n    ipcRenderer.on(\"CLAUDE-2-ORG\", (event, org) => {\n      this.setClaudeAi({ org });\n    });\n  },\n  methods: {\n    ...mapMutations([\"setClaudeAi\"]),\n  },\n};\n</script>\n","import { render } from \"./ClaudeAIBotSettings.vue?vue&type=template&id=17188e40\"\nimport script from \"./ClaudeAIBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./ClaudeAIBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <CommonBotSettings\n    :settings=\"settings\"\n    :brand-id=\"brandId\"\n    mutation-type=\"setClaudeApi\"\n    :watcher=\"watcher\"\n  ></CommonBotSettings>\n</template>\n\n<script>\nimport _bots from \"@/bots\";\nimport Bot from \"@/bots/anthropic/ClaudeAPIBot\";\nimport CommonBotSettings from \"@/components/BotSettings/CommonBotSettings.vue\";\nimport { Type } from \"./settings.const\";\n\nconst settings = [\n  {\n    type: Type.Text,\n    name: \"apiKey\",\n    title: \"common.apiKey\",\n    description: \"settings.secretPrompt\",\n    placeholder: \"sk-...\",\n  },\n  {\n    type: Type.Slider,\n    name: \"temperature\",\n    title: \"openaiApi.temperature\",\n    description: \"openaiApi.temperaturePrompt\",\n    min: 0,\n    max: 1,\n    step: 0.1,\n    ticks: {\n      0: \"openaiApi.temperature0\",\n      1: \"openaiApi.temperature2\",\n    },\n  },\n  {\n    type: Type.Text,\n    name: \"alterUrl\",\n    title: \"openaiApi.alterUrl\",\n    description: \"openaiApi.alterUrlPrompt\",\n    placeholder: \"https://your.proxy.com/v1\",\n  },\n];\nexport default {\n  components: {\n    CommonBotSettings,\n  },\n  data() {\n    return {\n      settings: settings,\n      brandId: Bot._brandId,\n    };\n  },\n  methods: {\n    watcher() {\n      _bots.all\n        .filter((bot) => bot instanceof Bot)\n        .map((bot) => bot.setupModel());\n    },\n  },\n};\n</script>\n","import { render } from \"./ClaudeAPIBotSettings.vue?vue&type=template&id=3b598822\"\nimport script from \"./ClaudeAPIBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./ClaudeAPIBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <CommonBotSettings\n    :settings=\"settings\"\n    :brand-id=\"brandId\"\n    mutation-type=\"setCohereApi\"\n    :watcher=\"watcher\"\n  >\n  </CommonBotSettings>\n</template>\n\n<script>\nimport _bots from \"@/bots\";\nimport Bot from \"@/bots/cohere/CohereAPIBot\";\nimport CommonBotSettings from \"@/components/BotSettings/CommonBotSettings.vue\";\nimport { Type } from \"./settings.const\";\n\nconst settings = [\n  {\n    type: Type.Text,\n    name: \"apiKey\",\n    title: \"common.apiKey\",\n    description: \"settings.secretPrompt\",\n    placeholder: \"...\",\n  },\n  {\n    type: Type.Slider,\n    name: \"temperature\",\n    title: \"cohereApi.temperature\",\n    description: \"cohereApi.temperaturePrompt\",\n    min: 0,\n    max: 5,\n    step: 0.1,\n    ticks: {\n      0: \"openaiApi.temperature0\",\n      5: \"openaiApi.temperature2\",\n    },\n  },\n  {\n    type: Type.Slider,\n    name: \"pastRounds\",\n    title: \"bot.pastRounds\",\n    description: \"bot.pastRoundsPrompt\",\n    min: 0,\n    max: 10,\n    step: 1,\n  },\n];\nexport default {\n  components: {\n    CommonBotSettings,\n  },\n  data() {\n    return {\n      settings: settings,\n      brandId: Bot._brandId,\n    };\n  },\n  methods: {\n    watcher() {\n      _bots.all\n        .filter((bot) => bot instanceof Bot)\n        .map((bot) => bot.setupModel());\n    },\n  },\n};\n</script>\n","import { render } from \"./CohereAPIBotSettings.vue?vue&type=template&id=5d9b8880\"\nimport script from \"./CohereAPIBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./CohereAPIBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-item>\n    <template v-for=\"setting in settings\" :key=\"setting.name\">\n      <v-list-item-title v-if=\"setting.title\">\n        <!-- falcon.temperature -->\n        {{ $t(setting.title) }}</v-list-item-title\n      >\n      <v-list-item-subtitle v-if=\"setting.description\">\n        <!-- falcon.temperaturePrompt -->\n        {{ $t(setting.description) }}</v-list-item-subtitle\n      >\n\n      <v-text-field\n        v-if=\"setting.type === Type.Text\"\n        v-model=\"settingState[setting.name]\"\n        outlined\n        dense\n        :label=\"setting.label\"\n        :placeholder=\"setting.placeholder\"\n        :hide-details=\"setting.hideDetails\"\n        @update:model-value=\"\n          /* setFalcon({ temperature: $event }) */\n          store.commit(mutationType, { [setting.name]: $event })\n        \"\n      ></v-text-field>\n      <v-select\n        v-else-if=\"setting.type === Type.Select\"\n        v-model=\"settingState[setting.name]\"\n        outlined\n        dense\n        :label=\"setting.label\"\n        :placeholder=\"setting.placeholder\"\n        :hide-details=\"setting.hideDetails\"\n        :items=\"setting.items\"\n        @update:model-value=\"\n          /* setFalcon({ temperature: $event }) */\n          store.commit(mutationType, { [setting.name]: $event })\n        \"\n      ></v-select>\n      <v-slider\n        v-else-if=\"setting.type === Type.Slider\"\n        v-model=\"settingState[setting.name] /* falcon.temperature */\"\n        color=\"primary\"\n        :min=\"setting.min\"\n        :max=\"setting.max\"\n        :step=\"setting.step\"\n        :ticks=\"translate(setting.ticks)\"\n        :show-ticks=\"\n          /* 'show-ticks' cause lag issue when the possible value to slide is large */\n          setting.ticks ? 'always' : false\n        \"\n        thumb-label\n        @update:model-value=\"\n          /* setFalcon({ temperature: $event }) */\n          store.commit(mutationType, { [setting.name]: $event })\n        \"\n      >\n        <template v-slot:append>\n          <v-text-field\n            v-model=\"settingState[setting.name] /* falcon.temperature */\"\n            :ref=\"\n              (el) => {\n                refs[setting.name] = el;\n              }\n            \"\n            type=\"number\"\n            style=\"width: 100px\"\n            density=\"compact\"\n            hide-details\n            variant=\"outlined\"\n            @update:model-value=\"\n              /* setFalcon({ temperature: validateInput(temperature, $event) }) */\n              store.commit(mutationType, {\n                [setting.name]: validateSliderInput(setting, $event),\n              })\n            \"\n          ></v-text-field>\n        </template>\n      </v-slider>\n      <v-combobox\n        v-else-if=\"setting.type === Type.Combobox\"\n        v-model=\"settingState[setting.name]\"\n        outlined\n        dense\n        :label=\"setting.label\"\n        :placeholder=\"setting.placeholder\"\n        :hide-details=\"setting.hideDetails\"\n        :items=\"setting.items\"\n        @update:model-value=\"\n          store.commit(mutationType, { [setting.name]: $event })\n        \"\n      ></v-combobox>\n      <v-checkbox\n        v-else-if=\"setting.type === Type.Checkbox\"\n        v-model=\"settingState[setting.name]\"\n        outlined\n        dense\n        color=\"primary\"\n        :label=\"setting.label\"\n        :placeholder=\"setting.placeholder\"\n        :hide-details=\"setting.hideDetails\"\n        @update:model-value=\"\n          store.commit(mutationType, { [setting.name]: $event })\n        \"\n      ></v-checkbox>\n    </template>\n  </v-list-item>\n</template>\n\n<script setup>\nimport i18n from \"@/i18n\";\nimport { computed, onMounted, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { Type } from \"./settings.const\";\nconst store = useStore();\nconst settingState = computed(() => store.state[props.brandId]);\nconst refs = ref([]);\nconst props = defineProps({\n  brandId: {\n    type: String,\n    required: true,\n  },\n  settings: {\n    type: Object,\n    required: true,\n  },\n  mutationType: {\n    type: String,\n    required: true,\n  },\n  watcher: {\n    type: Function,\n    default: undefined,\n  },\n});\n\nif (props.watcher) {\n  watch(\n    () => settingState.value,\n    (newValue) => {\n      console.log(`${props.brandId}: ${JSON.stringify(newValue)}`);\n      props.watcher(newValue);\n    },\n  );\n}\n\nonMounted(() => {\n  for (const setting of props.settings) {\n    if (setting.type !== Type.Slider) {\n      continue;\n    }\n    // Set the 'min', 'max' and 'step' attributes for the input type 'number' spin button\n    const inputElement = getInputElement(refs.value[setting.name]);\n    inputElement.min = setting.min;\n    inputElement.max = setting.max;\n    inputElement.step = setting.step;\n  }\n});\n\nfunction translate(settings) {\n  if (settings) {\n    let rets = {};\n    Object.keys(settings).forEach((key) => {\n      rets[key] = i18n.global.t(settings[key]);\n    });\n    return rets;\n  }\n  return settings;\n}\n\nfunction validateSliderInput(setting, value) {\n  // validate input via keyboard within setting min and max\n  value = value || 0; // set zero if empty string\n  const input = getInputElement(refs.value[setting.name]);\n  const valuefloat = parseFloat(value);\n  const inputMaxFloat = parseFloat(input.max);\n  const inputMinFloat = parseFloat(input.min);\n  if (valuefloat > inputMaxFloat) {\n    return inputMaxFloat;\n  } else if (valuefloat < inputMinFloat) {\n    return inputMinFloat;\n  } else {\n    return valuefloat;\n  }\n}\n\nfunction getInputElement(ref) {\n  return ref.$el.querySelector(\"input\");\n}\n</script>\n","import script from \"./CommonBotSettings.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CommonBotSettings.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <CommonBotSettings\n    :settings=\"settings\"\n    :brand-id=\"brandId\"\n    mutation-type=\"setFalcon\"\n  ></CommonBotSettings>\n</template>\n\n<script>\nimport Bot from \"@/bots/huggingface/Falcon180bBot\";\nimport CommonBotSettings from \"@/components/BotSettings/CommonBotSettings.vue\";\nimport { Type } from \"./settings.const\";\n\nconst settings = [\n  {\n    type: Type.Slider,\n    name: \"temperature\",\n    title: \"falcon.temperature\",\n    description: \"falcon.temperaturePrompt\",\n    min: 0,\n    max: 1,\n    step: 0.05,\n  },\n  {\n    type: Type.Slider,\n    name: \"maxNewTokens\",\n    title: \"falcon.maxNewTokens\",\n    description: \"falcon.maxNewTokensPrompt\",\n    min: 0,\n    max: 8192,\n    step: 64,\n  },\n  {\n    type: Type.Slider,\n    name: \"topP\",\n    title: \"falcon.topP\",\n    description: \"falcon.topPPrompt\",\n    min: 0,\n    max: 1,\n    step: 0.05,\n  },\n  {\n    type: Type.Slider,\n    name: \"repetitionPenalty\",\n    title: \"falcon.repetitionPenalty\",\n    description: \"falcon.repetitionPenaltyPrompt\",\n    min: 1,\n    max: 2,\n    step: 0.05,\n  },\n];\nexport default {\n  components: {\n    CommonBotSettings,\n  },\n  data() {\n    return {\n      settings: settings,\n      brandId: Bot._brandId,\n    };\n  },\n};\n</script>\n","import { render } from \"./Falcon180bBotSettings.vue?vue&type=template&id=24bc8a0a\"\nimport script from \"./Falcon180bBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./Falcon180bBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <CommonBotSettings\n    :settings=\"settings\"\n    :brand-id=\"brandId\"\n    mutation-type=\"setGemini\"\n    :watcher=\"watcher\"\n  ></CommonBotSettings>\n</template>\n\n<script>\nimport Bot from \"@/bots/google/GeminiAPIBot\";\nimport CommonBotSettings from \"@/components/BotSettings/CommonBotSettings.vue\";\nimport { Type } from \"./settings.const\";\n\nconst settings = [\n  {\n    type: Type.Text,\n    name: \"apiKey\",\n    title: \"common.apiKey\",\n    description: \"settings.secretPrompt\",\n    placeholder: \"...\",\n  },\n  {\n    type: Type.Slider,\n    name: \"temperature\",\n    title: \"openaiApi.temperature\",\n    description: \"openaiApi.temperaturePrompt\",\n    min: 0,\n    max: 1,\n    step: 0.1,\n    ticks: {\n      0: \"openaiApi.temperature0\",\n      1: \"openaiApi.temperature2\",\n    },\n  },\n  {\n    type: Type.Slider,\n    name: \"topK\",\n    title: \"geminiApi.topK\",\n    description: \"geminiApi.topKPrompt\",\n    min: 1,\n    max: 100,\n    step: 1,\n  },\n  {\n    type: Type.Slider,\n    name: \"topP\",\n    title: \"geminiApi.topP\",\n    description: \"geminiApi.topPPrompt\",\n    min: 0.1,\n    max: 1,\n    step: 0.01,\n  },\n  {\n    type: Type.Slider,\n    name: \"pastRounds\",\n    title: \"bot.pastRounds\",\n    description: \"bot.pastRoundsPrompt\",\n    min: 0,\n    max: 10,\n    step: 1,\n  },\n];\nexport default {\n  components: {\n    CommonBotSettings,\n  },\n  data() {\n    return {\n      settings: settings,\n      brandId: Bot._brandId,\n    };\n  },\n  methods: {\n    watcher() {\n      Bot.getInstance().setupModel();\n    },\n  },\n};\n</script>\n","import { render } from \"./GeminiAPIBotSettings.vue?vue&type=template&id=4d61a909\"\nimport script from \"./GeminiAPIBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./GeminiAPIBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <CommonBotSettings\n    :settings=\"settings\"\n    :brand-id=\"brandId\"\n    mutation-type=\"setGradio\"\n  ></CommonBotSettings>\n</template>\n\n<script>\nimport Bot from \"@/bots/huggingface/GradioAppBot\";\nimport CommonBotSettings from \"@/components/BotSettings/CommonBotSettings.vue\";\nimport i18n from \"@/i18n\";\nimport { Type } from \"./settings.const\";\n\nconst settings = [\n  {\n    type: Type.Text,\n    name: \"url\",\n    title: \"gradio.url\",\n    description: \"gradio.urlPrompt\",\n    placeholder: i18n.global.t(\"settings.forExample\", {\n      example: \"https://*.hf.space, http://127.0.0.1:7861\",\n    }),\n  },\n  {\n    type: Type.Text,\n    name: \"fnIndex\",\n    title: \"gradio.fnIndex\",\n    description: \"gradio.fnIndexPrompt\",\n    placeholder: \"0\",\n  },\n];\n\nexport default {\n  components: {\n    CommonBotSettings,\n  },\n  data() {\n    return {\n      settings: settings,\n      brandId: Bot._brandId,\n    };\n  },\n};\n</script>\n","import { render } from \"./GradioAppBotSettings.vue?vue&type=template&id=2124010e\"\nimport script from \"./GradioAppBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./GradioAppBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <CommonBotSettings\n    :settings=\"settings\"\n    :brand-id=\"brandId\"\n    mutation-type=\"setGroqApi\"\n    :watcher=\"watcher\"\n  ></CommonBotSettings>\n</template>\n\n<script>\nimport _bots from \"@/bots\";\nimport Bot from \"@/bots/groq/GroqAPIBot\";\nimport CommonBotSettings from \"@/components/BotSettings/CommonBotSettings.vue\";\nimport { Type } from \"./settings.const\";\n\nconst settings = [\n  {\n    type: Type.Text,\n    name: \"apiKey\",\n    title: \"common.apiKey\",\n    description: \"settings.secretPrompt\",\n    placeholder: \"gsk_...\",\n  },\n  {\n    type: Type.Slider,\n    name: \"temperature\",\n    title: \"openaiApi.temperature\",\n    description: \"openaiApi.temperaturePrompt\",\n    min: 0,\n    max: 1,\n    step: 0.1,\n    ticks: {\n      0: \"openaiApi.temperature0\",\n      1: \"openaiApi.temperature2\",\n    },\n  },\n  {\n    type: Type.Slider,\n    name: \"pastRounds\",\n    title: \"bot.pastRounds\",\n    description: \"bot.pastRoundsPrompt\",\n    min: 0,\n    max: 10,\n    step: 1,\n  },\n];\nexport default {\n  components: {\n    CommonBotSettings,\n  },\n  data() {\n    return {\n      settings: settings,\n      brandId: Bot._brandId,\n    };\n  },\n  methods: {\n    watcher() {\n      _bots.all\n        .filter((bot) => bot instanceof Bot)\n        .map((bot) => bot.setupModel());\n    },\n  },\n};\n</script>\n","import { render } from \"./GroqAPIBotSettings.vue?vue&type=template&id=f403be6c\"\nimport script from \"./GroqAPIBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./GroqAPIBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/huggingface/HuggingChatBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./HuggingChatBotSettings.vue?vue&type=template&id=dc8fc91c\"\nimport script from \"./HuggingChatBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./HuggingChatBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nconst electron = window.require(\"electron\");\nconst ipcRenderer = electron.ipcRenderer;\nimport { mapMutations } from \"vuex\";\n\nimport Bot from \"@/bots/moonshot/KimiBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the KIMI-TOKENS message from background.js\n    ipcRenderer.on(\"KIMI-TOKENS\", (event, tokens) => {\n      this.setKimi(tokens);\n    });\n  },\n  methods: {\n    ...mapMutations([\"setKimi\"]),\n  },\n};\n</script>\n","import { render } from \"./KimiBotSettings.vue?vue&type=template&id=34807a6a\"\nimport script from \"./KimiBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./KimiBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/lmsys/LMSYSBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./LMSYSBotSettings.vue?vue&type=template&id=03928a8c\"\nimport script from \"./LMSYSBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./LMSYSBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <v-list-item>\n    <v-list-item-title>{{ $t(\"settings.loginOrOut\") }}</v-list-item-title>\n    <v-list-item-subtitle>{{\n      $t(\"settings.loginOrOutPrompt\")\n    }}</v-list-item-subtitle>\n    <a :href=\"bot.getLoginUrl()\" target=\"_blank\" @click=\"openLoginWindow\">\n      {{ bot.getLoginUrl() }}\n    </a>\n  </v-list-item>\n</template>\n\n<script>\nconst { ipcRenderer } = window.require(\"electron\");\n\nexport default {\n  props: {\n    bot: {\n      type: Object,\n      default: null,\n    },\n  },\n  methods: {\n    openLoginWindow(event) {\n      event.preventDefault();\n      const loginUrl = this.bot.getLoginUrl();\n      const userAgent = this.bot.getUserAgent();\n      const loginScript = this.bot.getLoginScript();\n      ipcRenderer.invoke(\"create-new-window\", {\n        userAgent,\n        loginScript,\n        url: loginUrl,\n      });\n    },\n  },\n};\n</script>\n","import { render } from \"./LoginSetting.vue?vue&type=template&id=b46e8cb2\"\nimport script from \"./LoginSetting.vue?vue&type=script&lang=js\"\nexport * from \"./LoginSetting.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nconst electron = window.require(\"electron\");\nconst ipcRenderer = electron.ipcRenderer;\nimport { mapState, mapMutations } from \"vuex\";\n\nimport Bot from \"@/bots/MOSSBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the moss-secret message from background.js\n    ipcRenderer.on(\"moss-secret\", (event, secret) => {\n      const token = JSON.parse(JSON.parse(secret)); // Unwrap the secret\n      this.setMoss(token);\n    });\n  },\n  computed: {\n    ...mapState([\"moss\"]),\n  },\n  methods: {\n    ...mapMutations([\"setMoss\"]),\n  },\n};\n</script>\n","import { render } from \"./MOSSBotSettings.vue?vue&type=template&id=3ea638a2\"\nimport script from \"./MOSSBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./MOSSBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <login-setting :bot=\"bot\"></login-setting>\r\n  <CommonBotSettings\r\n    :settings=\"settings\"\r\n    :brand-id=\"brandId\"\r\n    mutation-type=\"setMistral\"\r\n  ></CommonBotSettings>\r\n</template>\r\n\r\n<script>\r\nimport Bot from \"@/bots/MistralBot\";\r\nimport CommonBotSettings from \"@/components/BotSettings/CommonBotSettings.vue\";\r\nimport { Type } from \"./settings.const\";\r\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\r\n\r\nconst settings = [\r\n  {\r\n    type: Type.Combobox,\r\n    name: \"model\",\r\n    title: \"Model\",\r\n    items: [\"mistral-large\"],\r\n  },\r\n];\r\nexport default {\r\n  components: {\r\n    LoginSetting,\r\n    CommonBotSettings,\r\n  },\r\n  data() {\r\n    return {\r\n      bot: Bot.getInstance(),\r\n      settings: settings,\r\n      brandId: Bot._brandId,\r\n    };\r\n  },\r\n};\r\n</script>\r\n","import { render } from \"./MistralBotSettings.vue?vue&type=template&id=8d22c93a\"\nimport script from \"./MistralBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./MistralBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <CommonBotSettings\n    :settings=\"settings\"\n    :brand-id=\"brandId\"\n    mutation-type=\"setOpenaiApi\"\n    :watcher=\"watcher\"\n  ></CommonBotSettings>\n</template>\n\n<script>\nimport _bots from \"@/bots\";\nimport Bot from \"@/bots/openai/OpenAIAPIBot\";\nimport CommonBotSettings from \"@/components/BotSettings/CommonBotSettings.vue\";\nimport { Type } from \"./settings.const\";\n\nconst settings = [\n  {\n    type: Type.Text,\n    name: \"apiKey\",\n    title: \"common.apiKey\",\n    description: \"settings.secretPrompt\",\n    placeholder: \"sk-...\",\n  },\n  {\n    type: Type.Slider,\n    name: \"temperature\",\n    title: \"openaiApi.temperature\",\n    description: \"openaiApi.temperaturePrompt\",\n    min: 0,\n    max: 2,\n    step: 0.1,\n    ticks: {\n      0: \"openaiApi.temperature0\",\n      2: \"openaiApi.temperature2\",\n    },\n  },\n  {\n    type: Type.Slider,\n    name: \"pastRounds\",\n    title: \"bot.pastRounds\",\n    description: \"bot.pastRoundsPrompt\",\n    min: 0,\n    max: 10,\n    step: 1,\n  },\n  {\n    type: Type.Text,\n    name: \"alterUrl\",\n    title: \"openaiApi.alterUrl\",\n    description: \"openaiApi.alterUrlPrompt\",\n    placeholder: \"https://your.proxy.com/v1\",\n  },\n];\nexport default {\n  components: {\n    CommonBotSettings,\n  },\n  data() {\n    return {\n      settings: settings,\n      brandId: Bot._brandId,\n    };\n  },\n  methods: {\n    watcher() {\n      _bots.all\n        .filter((bot) => bot instanceof Bot)\n        .map((bot) => bot.setupModel());\n    },\n  },\n};\n</script>\n","import { render } from \"./OpenAIAPIBotSettings.vue?vue&type=template&id=9ef36db4\"\nimport script from \"./OpenAIAPIBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./OpenAIAPIBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <login-setting :bot=\"bot\"></login-setting>\r\n  <CommonBotSettings\r\n    :settings=\"settings\"\r\n    :brand-id=\"brandId\"\r\n    mutation-type=\"setPerplexity\"\r\n  ></CommonBotSettings>\r\n</template>\r\n\r\n<script>\r\nimport Bot from \"@/bots/PerplexityBot\";\r\nimport CommonBotSettings from \"@/components/BotSettings/CommonBotSettings.vue\";\r\nimport { Type } from \"./settings.const\";\r\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\r\n\r\nconst settings = [\r\n  {\r\n    type: Type.Combobox,\r\n    name: \"version\",\r\n    title: \"Version\",\r\n    items: [\"2.5\"],\r\n  },\r\n];\r\nexport default {\r\n  components: {\r\n    LoginSetting,\r\n    CommonBotSettings,\r\n  },\r\n  data() {\r\n    return {\r\n      bot: Bot.getInstance(),\r\n      settings: settings,\r\n      brandId: Bot._brandId,\r\n    };\r\n  },\r\n};\r\n</script>\r\n","import { render } from \"./PerplexityBotSettings.vue?vue&type=template&id=542f79c6\"\nimport script from \"./PerplexityBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./PerplexityBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <CommonBotSettings\n    :settings=\"settings\"\n    :brand-id=\"brandId\"\n    mutation-type=\"setPhind\"\n  ></CommonBotSettings>\n</template>\n\n<script>\nimport Bot from \"@/bots/PhindBot\";\nimport CommonBotSettings from \"@/components/BotSettings/CommonBotSettings.vue\";\nimport { Type } from \"./settings.const\";\n\nconst settings = [\n  {\n    type: Type.Select,\n    name: \"model\",\n    title: \"Model\",\n    items: [\"Phind Model\", \"GPT-3.5-Turbo\", \"GPT-4\"],\n  },\n];\nexport default {\n  components: {\n    CommonBotSettings,\n  },\n  data() {\n    return {\n      settings: settings,\n      brandId: Bot._brandId,\n    };\n  },\n};\n</script>\n","import { render } from \"./PhindBotSettings.vue?vue&type=template&id=f7d51668\"\nimport script from \"./PhindBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./PhindBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/PiBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./PiBotSettings.vue?vue&type=template&id=86a921be\"\nimport script from \"./PiBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./PiBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/poe/PoeBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\nimport { mapMutations } from \"vuex\";\nconst { ipcRenderer } = window.require(\"electron\");\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the POE-FORMKEY message from background.js\n    ipcRenderer.on(\"POE-FORMKEY\", (event, formkey) => {\n      this.setPoe({ formkey });\n    });\n  },\n  methods: {\n    ...mapMutations([\"setPoe\"]),\n  },\n};\n</script>\n","import { render } from \"./PoeBotSettings.vue?vue&type=template&id=276b8eed\"\nimport script from \"./PoeBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./PoeBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nconst electron = window.require(\"electron\");\nconst ipcRenderer = electron.ipcRenderer;\nimport { mapMutations } from \"vuex\";\n\nimport Bot from \"@/bots/QianWenBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the QIANWEN-XSRF-TOKEN message from background.js\n    ipcRenderer.on(\"QIANWEN-XSRF-TOKEN\", (event, token) => {\n      this.setQianWenToken(token);\n    });\n  },\n  methods: {\n    ...mapMutations([\"setQianWenToken\"]),\n  },\n};\n</script>\n","import { render } from \"./QianWenBotSettings.vue?vue&type=template&id=2cea805c\"\nimport script from \"./QianWenBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./QianWenBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/Qihoo360AIBrainBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./Qihoo360AIBrainBotSettings.vue?vue&type=template&id=ea46f0e2\"\nimport script from \"./Qihoo360AIBrainBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./Qihoo360AIBrainBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nconst electron = window.require(\"electron\");\nconst ipcRenderer = electron.ipcRenderer;\nimport { mapMutations } from \"vuex\";\n\nimport Bot from \"@/bots/SkyWorkBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n  mounted() {\n    // Listen for the SKYWORK-TOKENS message from background.js\n    ipcRenderer.on(\"SKYWORK-TOKENS\", (event, tokens) => {\n      this.setSkyWork(tokens);\n    });\n  },\n  methods: {\n    ...mapMutations([\"setSkyWork\"]),\n  },\n};\n</script>\n","import { render } from \"./SkyWorkBotSettings.vue?vue&type=template&id=4b36ea04\"\nimport script from \"./SkyWorkBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./SkyWorkBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/SparkBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./SparkBotSettings.vue?vue&type=template&id=b70fc162\"\nimport script from \"./SparkBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./SparkBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <CommonBotSettings\n    :settings=\"settings\"\n    :brand-id=\"brandId\"\n    mutation-type=\"setWenxinQianfan\"\n  ></CommonBotSettings>\n</template>\n\n<script>\nimport Bot from \"@/bots/baidu/WenxinQianfanBot\";\nimport CommonBotSettings from \"@/components/BotSettings/CommonBotSettings.vue\";\nimport { Type } from \"./settings.const\";\n\nconst settings = [\n  {\n    type: Type.Text,\n    name: \"apiKey\",\n    title: \"API Key & Secret Key\",\n    description: \"settings.secretPrompt\",\n    label: \"API Key\",\n    placeholder: \"2125NA8mQy7gC52Pq9BK3tvk\",\n    hideDetails: true,\n  },\n  {\n    type: Type.Text,\n    name: \"secretKey\",\n    label: \"Secret Key\",\n    placeholder: \"IWf2pyYm26fz8GgNAHdkPkznHgazlffQ\",\n  },\n  {\n    type: Type.Slider,\n    name: \"pastRounds\",\n    title: \"bot.pastRounds\",\n    description: \"bot.pastRoundsPrompt\",\n    min: 0,\n    max: 10,\n    step: 1,\n  },\n];\nexport default {\n  components: {\n    CommonBotSettings,\n  },\n  data() {\n    return {\n      settings: settings,\n      brandId: Bot._brandId,\n    };\n  },\n};\n</script>\n","import { render } from \"./WenxinQianfanBotSettings.vue?vue&type=template&id=6a339c52\"\nimport script from \"./WenxinQianfanBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./WenxinQianfanBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <login-setting :bot=\"bot\"></login-setting>\n</template>\n\n<script>\nimport Bot from \"@/bots/YouChatBot\";\nimport LoginSetting from \"@/components/BotSettings/LoginSetting.vue\";\n\nexport default {\n  components: {\n    LoginSetting,\n  },\n  data() {\n    return {\n      bot: Bot.getInstance(),\n    };\n  },\n};\n</script>\n","import { render } from \"./YouChatBotSettings.vue?vue&type=template&id=2bc36362\"\nimport script from \"./YouChatBotSettings.vue?vue&type=script&lang=js\"\nexport * from \"./YouChatBotSettings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","var map = {\n\t\"./column-1.svg\": 28079,\n\t\"./column-2.svg\": 98988,\n\t\"./column-3.svg\": 24764\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 22142;","var map = {\n\t\"./AzureOpenAIAPIBotSettings\": 91604,\n\t\"./AzureOpenAIAPIBotSettings.vue\": 91604,\n\t\"./BardBotSettings\": 62284,\n\t\"./BardBotSettings.vue\": 62284,\n\t\"./BingChatBotSettings\": 10402,\n\t\"./BingChatBotSettings.vue\": 10402,\n\t\"./CharacterAIBotSettings\": 34122,\n\t\"./CharacterAIBotSettings.vue\": 34122,\n\t\"./ChatGLMBotSettings\": 49618,\n\t\"./ChatGLMBotSettings.vue\": 49618,\n\t\"./ChatGPTBotSettings\": 39762,\n\t\"./ChatGPTBotSettings.vue\": 39762,\n\t\"./ClaudeAIBotSettings\": 94647,\n\t\"./ClaudeAIBotSettings.vue\": 94647,\n\t\"./ClaudeAPIBotSettings\": 35245,\n\t\"./ClaudeAPIBotSettings.vue\": 35245,\n\t\"./CohereAPIBotSettings\": 56478,\n\t\"./CohereAPIBotSettings.vue\": 56478,\n\t\"./CommonBotSettings\": 23610,\n\t\"./CommonBotSettings.vue\": 23610,\n\t\"./Falcon180bBotSettings\": 24448,\n\t\"./Falcon180bBotSettings.vue\": 24448,\n\t\"./GeminiAPIBotSettings\": 98719,\n\t\"./GeminiAPIBotSettings.vue\": 98719,\n\t\"./GradioAppBotSettings\": 36623,\n\t\"./GradioAppBotSettings.vue\": 36623,\n\t\"./GroqAPIBotSettings\": 24993,\n\t\"./GroqAPIBotSettings.vue\": 24993,\n\t\"./HuggingChatBotSettings\": 44531,\n\t\"./HuggingChatBotSettings.vue\": 44531,\n\t\"./KimiBotSettings\": 96112,\n\t\"./KimiBotSettings.vue\": 96112,\n\t\"./LMSYSBotSettings\": 78797,\n\t\"./LMSYSBotSettings.vue\": 78797,\n\t\"./LoginSetting\": 92452,\n\t\"./LoginSetting.vue\": 92452,\n\t\"./MOSSBotSettings\": 54899,\n\t\"./MOSSBotSettings.vue\": 54899,\n\t\"./MistralBotSettings\": 6669,\n\t\"./MistralBotSettings.vue\": 6669,\n\t\"./OpenAIAPIBotSettings\": 41306,\n\t\"./OpenAIAPIBotSettings.vue\": 41306,\n\t\"./PerplexityBotSettings\": 11539,\n\t\"./PerplexityBotSettings.vue\": 11539,\n\t\"./PhindBotSettings\": 24317,\n\t\"./PhindBotSettings.vue\": 24317,\n\t\"./PiBotSettings\": 25947,\n\t\"./PiBotSettings.vue\": 25947,\n\t\"./PoeBotSettings\": 41084,\n\t\"./PoeBotSettings.vue\": 41084,\n\t\"./QianWenBotSettings\": 44575,\n\t\"./QianWenBotSettings.vue\": 44575,\n\t\"./Qihoo360AIBrainBotSettings\": 74467,\n\t\"./Qihoo360AIBrainBotSettings.vue\": 74467,\n\t\"./SkyWorkBotSettings\": 31927,\n\t\"./SkyWorkBotSettings.vue\": 31927,\n\t\"./SparkBotSettings\": 61043,\n\t\"./SparkBotSettings.vue\": 61043,\n\t\"./WenxinQianfanBotSettings\": 64716,\n\t\"./WenxinQianfanBotSettings.vue\": 64716,\n\t\"./YouChatBotSettings\": 71633,\n\t\"./YouChatBotSettings.vue\": 71633,\n\t\"./settings.const\": 62128,\n\t\"./settings.const.js\": 62128\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 42124;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./AzureOpenAIAPIBotSettings.vue\": 91604,\n\t\"./BardBotSettings.vue\": 62284,\n\t\"./BingChatBotSettings.vue\": 10402,\n\t\"./CharacterAIBotSettings.vue\": 34122,\n\t\"./ChatGLMBotSettings.vue\": 49618,\n\t\"./ChatGPTBotSettings.vue\": 39762,\n\t\"./ClaudeAIBotSettings.vue\": 94647,\n\t\"./ClaudeAPIBotSettings.vue\": 35245,\n\t\"./CohereAPIBotSettings.vue\": 56478,\n\t\"./CommonBotSettings.vue\": 23610,\n\t\"./Falcon180bBotSettings.vue\": 24448,\n\t\"./GeminiAPIBotSettings.vue\": 98719,\n\t\"./GradioAppBotSettings.vue\": 36623,\n\t\"./GroqAPIBotSettings.vue\": 24993,\n\t\"./HuggingChatBotSettings.vue\": 44531,\n\t\"./KimiBotSettings.vue\": 96112,\n\t\"./LMSYSBotSettings.vue\": 78797,\n\t\"./LoginSetting.vue\": 92452,\n\t\"./MOSSBotSettings.vue\": 54899,\n\t\"./MistralBotSettings.vue\": 6669,\n\t\"./OpenAIAPIBotSettings.vue\": 41306,\n\t\"./PerplexityBotSettings.vue\": 11539,\n\t\"./PhindBotSettings.vue\": 24317,\n\t\"./PiBotSettings.vue\": 25947,\n\t\"./PoeBotSettings.vue\": 41084,\n\t\"./QianWenBotSettings.vue\": 44575,\n\t\"./Qihoo360AIBrainBotSettings.vue\": 74467,\n\t\"./SkyWorkBotSettings.vue\": 31927,\n\t\"./SparkBotSettings.vue\": 61043,\n\t\"./WenxinQianfanBotSettings.vue\": 64716,\n\t\"./YouChatBotSettings.vue\": 71633\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 66912;\nmodule.exports = webpackAsyncContext;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = function(queue) {\n\tif(queue && queue.d < 1) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach(function(fn) { fn.r--; });\n\t\tqueue.forEach(function(fn) { fn.r-- ? fn.r++ : fn(); });\n\t}\n}\nvar wrapDeps = function(deps) { return deps.map(function(dep) {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then(function(r) {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, function(e) {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = function(fn) { fn(queue); };\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = function() {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}); };\n__webpack_require__.a = function(module, body, hasAwait) {\n\tvar queue;\n\thasAwait && ((queue = []).d = -1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise(function(resolve, rej) {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = function(fn) { queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](function() {}); };\n\tmodule.exports = promise;\n\tbody(function(deps) {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = function() { return currentDeps.map(function(d) {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}); }\n\t\tvar promise = new Promise(function(resolve) {\n\t\t\tfn = function() { resolve(getResult); };\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = function(q) { q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))); };\n\t\t\tcurrentDeps.map(function(dep) { dep[webpackQueues](fnQueue); });\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, function(err) { (err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue); });\n\tqueue && queue.d < 0 && (queue.d = 0);\n};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + chunkId + \".\" + {\"90\":\"a34eb4ee\",\"277\":\"f3d91f6b\",\"657\":\"5be55bec\",\"733\":\"19e70dff\",\"857\":\"20037914\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"chatall:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkchatall\"] = self[\"webpackChunkchatall\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(50866); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Bot","constructor","_defineProperty","getInstance","this","getLogo","_logoFilename","isDarkLogo","_isDarkLogo","getBrandName","c","i18n","global","t","_brandId","getModelName","model","_model","replace","getFullname","prefix","isDisabled","getLoginUrl","_loginUrl","getUserAgent","_userAgent","getLoginScript","_loginScript","getOutputFormat","_outputFormat","getClassname","_className","getSettingsComponent","component","_settingsComponent","currentClass","parentClass","Object","getPrototypeOf","componentName","default","isAvailable","_isAvailable","disabled","confirmBeforeUsing","confirmModal","acquireLock","key","lockedFn","onLockUnavailable","self","Promise","resolve","reject","_lock","acquire","async","ret","err","timeout","_sendPrompt","prompt","onUpdateResponse","callbackParam","Error","sendPrompt","content","botName","done","executeSendPrompt","message","console","error","LoginError","link","getLoginHyperlink","wrapCollapsedSection","checkAvailability","_checkAvailability","disable","createChatContext","getChatContext","createIfNotExists","context","Chats","getCurrentChat","contexts","setChatContext","store","commit","botClassname","text","toString","getSSEDisplayError","event","source","xhr","getResponseHeader","status","response","url","super","name","CharacterAIBot","requestId","uuidv4","split","fill","join","available","state","characterAI","id","username","version","axios","get","characterId","headers","data","pageProps","user","wsp","WebSocketAsPromised","packMessage","JSON","stringify","unpackMessage","parse","onUnpackedMessage","addListener","command","error_code","turn","author","author_id","candidates","length","map","candidate","raw_content","every","is_final","removeAllListeners","close","onError","onClose","open","then","isFirstMessage","sendPacked","request_id","payload","chat","chat_id","chatId","creator_id","visibility","character_id","type","with_greeting","origin_id","turnId","num_candidates","tts_enabled","selected_language","user_name","turn_key","turn_id","is_human","candidate_id","primary_candidate_id","AsyncLock","ClaudeAIBot","claudeAi","org","currentAcountResponse","accept","uuid","attachments","files","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","SSE","withCredentials","addEventListener","completion","readyState","CLOSED","stream","createResponse","post","LangChainBot","messages","bufferMemory","BufferMemory","getPastRounds","shift","forEach","item","storedMessage","toLowerCase","humanPrefix","chatHistory","addUserMessage","aiPrefix","addAIChatMessage","addMessage","res","_chatModel","getMessages","callbacks","handleLLMNewToken","token","handleLLMEnd","call","toDict","setupModel","_setupModel","undefined","MOSSBot","getAuthHeader","moss","refresh","Authorization","onOpen","request","beginning","body","ending","links","processed_extra_data","hasOwnProperty","title","output","stage","status_code","target","MistralBot","result","json","rag","meta","values","mistral","messageInput","messageId","mode","onDownloadProgress","progressEvent","onResponseDownloadProgress","responses","currentTarget","filter","n","chunks","separateChunks","number","slice","replaceAll","line","regex","match","PerplexityBot","last_backend_uuid","read_write_token","separateNumberAndObject","input","object","parseInt","sid","jwt","seq","send","onMessage","log","onSend","Number","ask","perplexity","language","search_focus","frontend_uuid","is_related_query","is_default_related_query","frontend_context_uuid","prompt_source","query_source","answer","backend_uuid","String","startsWith","Z","e","V","Math","floor","Date","ipcRenderer","window","require","PhindBot","rewrite","questionToRewrite","questionHistory","answerHistory","search","q","query","browserLanguage","userSearchRules","date","formatDate","getFormattedDate","question","webResults","options","detailed","anonUserId","getUUID","answerModel","phind","customLinks","start","isSuccess","i","hostname","URL","_onStreamProgress","CONNECTING","dispatchEvent","CustomEvent","_setReadyState","OPEN","responseText","substring","progress","parts","chunk","lastPart","pop","part","_parseEventChunk","_onStreamFailure","year","getFullYear","month","getMonth","padStart","day","getDate","cookies","invoke","domain","uuidCookie","find","cookie","value","PiBot","generateRandomId","randomStr","random","QianWenBot","getRequestHeaders","qianWen","xsrfToken","resp","success","catch","action","msgId","parentMsgId","parentMessageId","contents","contentType","openSearch","sessionId","exception","errorCode","errorMsg","failed","stopReason","firstQuery","sessionType","userId","Qihoo360AIBrainBot","is_regenerate","is_so","role","source_type","parentConversationId","SkyWorkBot","getAuthHeaders","skyWork","inviteToken","code","resp_data","busy_now","invite_token","currentPrompt","currentMessageId","session_id","result_message","message_id","code_msg","setTimeout","dialogue","SparkBot","flag","desc","getGtToken","initGeeGuard","appId","https","gee_token","GtToken","formData","FormData","append","partialText","descr","Buffer","from","YouChatBot","queryTraceId","queryString","youChatToken","ClaudeAPIBot","claudeApi","apiKey","chatModel","ChatAnthropic","anthropicApiKey","anthropicApiUrl","alterUrl","maxTokens","temperature","modelName","streaming","pastRounds","claudeApiApi","WenxinQianfanBot","secretKey","wenxinQianfan","ChatBaiduWenxin","baiduApiKey","baiduSecretKey","CohereAPIBot","cohereApi","ChatCohere","parseResponse","ids","images","image","alt","placeholder","generateReq","contextIds","modelNumber","innerJSON","BardBot","requestParams","atValue","URLSearchParams","at","params","bl","blValue","_reqid","rt","GeminiAPIBot","geminiApi","ChatGoogleGenerativeAI","topK","topP","GroqAPIBot","groqApi","ChatGroq","Falcon180bBot","GradioBot","sendPredict","fn_index","session_hash","_predictUrl","event_data","all","makeData","r","_fnIndexes","falcon","maxNewTokens","repetitionPenalty","parseData","parseError","_class","GradioAppBot","gradio","fnIndex","Array","Map","config","path","root","_sendFnIndex","joinUrl","streamData","trigger_id","_triggerId","streamContext","event_id","dataUrl","searchParams","set","onMessageEventHandler","msg","rank","rank_eta","removeAllEventListeners","onAbortEventHandler","onErrorEventHandler","eventListeners","eventName","eventHandler","removeEventListener","HuggingChatBot","packRequest","inputs","is_retry","response_id","web_search","conversationId","fetch","method","ok","errorData","reader","getReader","processStream","read","dataChunk","TextDecoder","decode","jsonDataArray","Boolean","jsonData","Gemini15ProAPIBot","Gemini15FlashAPIBot","ChatGPT35Bot","ChatGPTBot","ChatGPT4Bot","accessToken","isPaidSubscriptionActive","account_plan","is_paid_subscription_active","CohereAPICommandBot","CohereAPICommandLightBot","CohereAPICommandRBot","CohereAPICommandRPlusBot","CohereAPIAya23Bot","BingChatPreciseBot","BingChatBot","BingChatBalancedBot","BingChatCreativeBot","SageBot","PoeBot","OpenAIAPI35Bot","OpenAIAPIBot","OpenAIAPI4Bot","OpenAIAPI4128KBot","OpenAIAPI4oBot","VicunaBot","LMSYSBot","AlpacaBot","ClaudeBot","DevBot","Gemma7bGroqAPIBot","Llama38bGroqAPIBot","Llama370bGroqAPIBot","Mixtral8x7bGroqAPIBot","ChatGPT35PoeBot","ChatGPT4PoeBot","ClaudeInstantPoeBot","ClaudeInstant100kPoeBot","ClaudePlusPoeBot","ChatGPT432kPoeBot","Llama270bPoeBot","GooglePalm2PoeBot","CodeLlama34bPoeBot","ChatGPT4MobileBot","OpenAIAPI3516KBot","WenxinQianfanTurboBot","Llama2HC70bBot","Llama213bBot","Llama27bBot","Llama270bBot","ChatGLM6bBot","ChatGLM36bBot","CodeLlamaBot","Vicuna7bBot","Vicuna13bBot","Wizardlm13bBot","Wizardlm70bBot","FalconHC180bBot","CodeLlamaHCBot","WenxinQianfan4Bot","Zephyr7bBot","GeminiAdvBot","Gemma7bItBot","Gemma2bItBot","Claude3SonnetBot","Claude3OpusBot","ChatGLM4Bot","ChatGLMBot","user_id","assistant_id","conversation_id","meta_data","is_test","input_question_type","channel","draft_id","tool_calls","info","arguments","citations","citation","metadata","ClaudeAPIOpusBot","ClaudeAPI20Bot","ClaudeAPI21Bot","ClaudeAPISonnetBot","ClaudeAPI35SonnetBot","ClaudeAPIHaikuBot","ClaudeAPIInstant12Bot","AzureOpenAIAPIBot","KimiBot","bots","getBotByClassName","className","bot","botTags","free","paid","openSource","api","madeInChina","dataOne","dataTwo","dataThree","includes","azureOpenaiApi","azureApiKey","azureApiInstanceName","azureOpenAIApiDeploymentName","azureOpenAIApiVersion","ChatOpenAI","azureOpenAIApiKey","azureOpenAIApiInstanceName","conversation","clientId","conversationSignature","secAccessToken","invocationId","isAnonymous","makePromptRequest","optionsSets","_optionsSets","allowedMessageTypes","sliceIds","verbosity","scenario","plugins","isStartOfSession","timestamp","toISOString","inputMethod","messageType","tone","_tone","participant","spokenTextMode","seperator","fromCharCode","encodeURIComponent","protocol","events","attributes","format","throttling","maxNumUserMessagesInConversation","numUserMessagesInConversation","adaptiveCards","moreLinks","warn","kimi","access_token","refreshTokens","refreshUrl","refresh_token","refs","use_search","num","successNum","is_example","REFRESH_SESSION_URL","setRefreshCycle","chatgpt","refreshCycle","loadArkoseScript","toggleSessionRefreshing","refreshSession","cycle","sr","_sessionRefreshing","interval","shouldRefresh","clearInterval","setInterval","bind","_arkoseScriptLoaded","script","document","createElement","src","setAttribute","defer","appendChild","onload","setupEnforcement","onerror","myEnforcement","_myEnforcement","setConfig","onReady","onShown","onShow","onSuppress","onCompleted","_arkosePromise","onReset","onHide","onFailed","getArkoseToken","run","requirement","conversation_mode","kind","arkose_token","arkose","required","content_type","parent_message_id","history_and_training_disabled","preInfo","trim","test","is_complete","push","element","detail","parser","DOMParser","doc","parseFromString","querySelector","textContent","explanation","openaiApi","configuration","basePath","openAIApiKey","buildId","settings","lastMessageId","gqlPost","queryName","variables","formkey","poe","queryHashs","AnnotateWithIdsProviderQuery","chatHelpers_sendMessageMutation_Mutation","ChatListPaginationQuery","subscriptionsMutation","extensions","hash","tagId","md5","tchannelData","modelHandles","a2","a2_100k","a2_2","capybara","chinchilla","beaver","vizcacha","code_llama_34b_instruct","acouchy","llama_2_70b_chat","ctx","subDomain","tchannel","baseHost","boxName","minSeq","channelHash","subscriptions","subscriptionName","queryHash","debug","min_seq","m","message_type","messageAdded","withChatBreak","messageEdgeCreate","errors","chatGlm","userInfoUrl","_id","seed","max_tokens","conversation_task_id","retry","retry_history_task_id","institution","__userid","context_id","task_id","Type","Text","Slider","Select","Combobox","Checkbox","getMatomo","Piwik","getAsyncTracker","useMatomo","matomo","ref","instance","now","timer","onUnmounted","lang","navigator","userLanguage","substr","en","enMessages","zh","zhMessages","zhtw","zhtwMessages","de","deMessages","ru","ruMessages","vi","viMessages","it","itMessages","fr","frMessages","ko","koMessages","es","esMessages","ja","jaMessages","createI18n","legacy","locale","fallbackLocale","VMdPreview","vuepressTheme","Prism","use","createLineNumbertPlugin","createCopyCodePlugin","createKatexPlugin","restored","migrateChatsMessagesThreads","addFirstChatIfEmpty","defaultTheme","resolveTheme","applyTheme","general","isShowMenuBar","on","mutation","vuetify","createVuetify","components","directives","adapter","createVueI18nAdapter","useI18n","theme","themes","light","colors","primary","surface","background","header","font","dark","head","createApp","App","VueShortkey","VueMatomo","host","siteId","trackerFileName","router","enableLinkTracking","requireConsent","trackInitialView","disableCookies","requireCookieConsent","enableHeartBeatTimer","heartBeatTimerInterval","cookieDomain","domains","preInitActions","trackSiteSearch","crossOrigin","mount","table","db","count","add","favBots","classname","selected","currentChatIndex","currentChat","newKey","index","createdTime","getTime","modifiedTime","update","Dexie","stores","chats","threads","vuexPersist","VuexPersistence","storage","localForage","asyncStorage","reducer","updateCounter","selectedResponses","persistedState","deepToRaw","sourceObj","objectIterator","isArray","isRef","isReactive","isProxy","toRaw","keys","reduce","acc","createStore","columns","riskConfirmed","isChatDrawerOpen","prompts","actions","template","suffix","updateDebounceInterval","isShowAppBar","mutations","changeColumns","setUuid","setBotSelected","setFavBotOrder","newOrder","order","addFavoriteBot","setFavoriteBot","removeFavoriteBot","splice","setCurrentLanguage","setChatgpt","setGeminiApi","setOpenaiApi","setAzureOpenaiApi","setMoss","setChatGLM","setQianWenToken","setSkyWork","tokens","setKimi","setWenxinQianfan","setGradio","setGroq","groq","setCharacterAI","setClaudeAi","setClaudeApi","setCohereApi","setPerplexity","setPoe","setPhind","setMistral","setLatestPromptIndex","promptIndex","latestPromptIndex","setLatestThreadPromptIndex","messageIndex","latestThreadPromptIndex","Messages","hasThread","setResponseThreadIndex","responseIndex","threadIndex","setMessages","incrementUpdateCounter","clearMessages","where","equals","modify","delete","setTheme","setMode","setGeneral","createChat","chatIndex","selectChat","selectedTime","hideChat","hide","editChatTitle","isEditedByUser","isTitleUserEdited","setIsChatDrawerOpen","deleteChats","clear","Threads","addPrompt","editPrompt","deletePrompt","addAction","editAction","deleteAction","addSelectedResponses","selectedIndex","deleteSelectedResponses","findIndex","deleteAllSelectedResponses","migrateSettingsPrompts","localStorage","getItem","app","promptsData","setItem","updateSetting","updateSettingArray","prop","pushSettingArray","migrateSettingArrayIndexUseUUID","setChat","_","dispatch","promptMessage","msgs","trackEvent","sendPromptInThread","threadPromptMessage","threadResponseMessage","updateMessage","messageQueue","queue","updateThreadMessage","threadMessageQueue","thread","getters","getCurrentChatPrompt","modules","plugin","sortBy","getMessagesCount","chatIndexMap","messageIndexMap","threadIndexMap","chatsMigrateData","messagesMigrateData","threadsMigrateData","migrateHasThread","getIndex","getAndGenerateUuidIfNotExist","j","p","threadMessage","bulkAdd","messageIndexes","orderBy","distinct","uniqueKeys","initializeQueues","Queue","startQueuesProcessing","processQueue","_queue","queueName","DEFAULT_UPDATE_DEBOUNCE_INTERVAL","isProcessing","setUpdateDebounceTime","mergedMessages","indexMap","queueCopy","changes","propKey","bulkUpdate","debounceTime","SYSTEM","DARK","LIGHT","Theme","Mode","resolvedTheme","nativeTheme","shouldUseDarkColors","vuetifyTheme","is_mac","process","platform","modifier","SHORTCUT_PROMPT_TEXTAREA","elementId","offset","top","alignHorizontallyCenter","SHORTCUT_PROMPT_PRE_NEXT","left","SHORTCUT_FIND","flexDirection","SHORTCUT_CLEAR_MESSAGES","SHORTCUT_SETTINGS","SHORTCUT_SHORTCUT_GUIDE","SHORTCUT_BOTS_MENU","SHORTCUT_CHAT_DRAWER","SHORTCUT_NEW_CHAT","SHORTCUT_PROMPT_MANAGEMENT","SHORTCUT_APP_BAR","SHORTCUT_LIST","scrollToBottom","immediately","scrollTo","documentElement","scrollHeight","behavior","autoScrollToBottom","autoScroll","onScroll","scrollPosition","pageYOffset","innerHeight","emit","__emit","props","__props","isEditMode","isCursorWait","chatTitleEditModel","onSelectChat","confirmHideChat","editChat","confirmEdit","onPressEnter","keyCode","__exports__","dialog","_title","_text","defaultButton","showModal","watch","nextTick","$el","focus","immediate","__expose","useStore","onUpdated","drawerItems","useObservable","liveQuery","reverse","toArray","focusTextarea","onAddChat","confirm","selectLatestVisibleChat","latestChat","first","style","setProperty","onMounted","currentChatMessages","primaryKeys","bulkGet","sort","a","b","groupedMessage","create","apply","computed","carouselModel","maxPage","deep","replyModel","replyRef","pageLeftButton","pageRightButton","isSelected","isSelectedList","isSelectedResponsesEmpty","botInstance","botLogo","botFullname","isBotLogoInverted","isHighlighted","highlight","isAllDone","some","isLatestPrompt","isLatestPromptForThread","isThread","threadPromptIndex","isShowReplyTextField","isShowReplyButton","messageBotIsSelected","isShowReplyButtonInDOM","isShowResendButton","isSomeResponsesHasThread","messagePromptIndex","isShowPagingButton","getButtonClass","getSelectButtonClass","favBot","filterEnterKey","shiftKey","ctrlKey","altKey","metaKey","preventDefault","sendPromptToBot","copyToClipboard","clipboard","writeText","toggleHighlight","handleClick","tagName","parentElement","electron","href","shell","openExternal","resendPrompt","responseMessage","toggleReplyButton","select","stopPropagation","contains","indexOf","updateIsSelectedResponsesEmpty","pageLeft","max","pageRight","min","loading","gridTemplateColumns","createChatMessageLiveQuery","currentMessageSub","scrollToBottomFirst","newChat","oldChat","unsubscribe","subscribe","proxySettings","userDataPath","snackbar","reactive","show","color","bypassList","botsProxy","newInputfile","bypassSetMode","resetAll","reload","onlySave","oldPacFile","pacFile","reply","onFileChange","file","saveAndActive","bypassBotsProxy","newVal","bypassListSet","Set","proxyBypassList","prefixPlaceholder","templatePlaceholder","suffixPlaceholder","preview","exampleTemplate","examplePrompt","PromptTemplate","inputVariables","exampleSelector","LengthBasedExampleSelector","fromExamples","maxLength","MAX_VALUE","dynamicPrompt","FewShotPromptTemplate","brandId","SETTING_FILE_NAME","CHAT_FILE_NAME","EXPORT_IMPORT_FILE_EXTENSION","formRef","isOpenAddEditAction","actionName","previewRef","importProgressText","isImportCompleted","templateParametersInfo","isShowTemplateParametersDialog","isShowImportProgressDialog","userActions","previewSampleData","botResponse","description","step","editIndex","isEdit","getExportedFileName","hour","getHours","minute","getMinutes","second","getSeconds","fileName","exportData","settingBlob","getSettingWithoutBotSetting","chatHistoryBlob","exportDB","JSZip","zip","generateAsync","zipBlob","createObjectURL","download","click","removeChild","revokeObjectURL","importData","importDataOnChangeFile","logImportProgress","size","loadAsync","chatString","settingString","fileCount","relativePath","zipEntry","zipFileString","unchangedCount","updatedCount","addedCount","errorCount","addedRecords","updatedRecords","errorRecords","chatDbObject","chatRow","d","tableName","rows","record","$types","row","compare","put","messagesRow","threadsRow","settingDbObject","$","chatallKey","storeIndexes","importItem","obj1","obj2","getElementById","scrollTop","settingDb","userSettingBlob","userSettingText","userSettingJson","allBotBrandId","str","bytes","TextEncoder","encode","Blob","onInputTemplate","edit","addEditAction","validate","valid","$t","useTheme","tab","botSettings","brand","Qihoo360AIBrainBotSettings","AzureOpenAIAPIBotSettings","BardBotSettings","BingChatBotSettings","CharacterAIBotSettings","ChatGLMBotSettings","ChatGPTBotSettings","ClaudeAIBotSettings","ClaudeAPIBotSettings","CohereAPIBotSettings","Falcon180bBotSettings","GeminiAPIBotSettings","GradioAppBotSettings","GroqAPIBotSettings","HuggingChatBotSettings","KimiBotSettings","LMSYSBotSettings","MistralBotSettings","MOSSBotSettings","OpenAIAPIBotSettings","PerplexityBotSettings","PhindBotSettings","PiBotSettings","PoeBotSettings","QianWenBotSettings","SkyWorkBotSettings","SparkBotSettings","WenxinQianfanBotSettings","YouChatBotSettings","proxy","ProxySettings","ChatSettings","languages","modes","currentMode","setCurrentMode","closeDialog","label","newBot","markRaw","onDone","isLogoInverted","menu","favorited","tags","selectedTags","notDisabledBots","shownBots","toggleFavorite","toggleMenu","filterBots","filteredIn","tagBots","tag","tagBot","defaultLanguage","isOpenAddEditPrompt","selectedPrompt","requiredRule","width","sortable","userPrompts","x","y","isPin","defaultPrompts","act","pin","usePrompt","addEditPrompt","showFullText","parent","closest","children","td","position","getBoundingClientRect","div","innerText","classList","hideFullText","toElement","toRemove","querySelectorAll","remove","setPromptLanguage","onDialogCloseTransitionEnded","promptTextArea","botsMenuRef","favBotLogosRef","isPromptManagementOpen","_bots","activeBots","rerenderFavBotLogos","_favBots","clickedBot","isMakeAvailableOpen","updateActiveBots","confirmed","focusPromptTextarea","toggleBotsMenu","handleShortcut","srcKey","sendPromptToBots","isUpOrDown","historyKeyCode","pre","next","isAuxiliaryKey","newPrompt","getHistoryPrompt","toBots","isFirstPrompt","updateChatTitleWithFirstPrompt","newValue","oldValue","botsToCheck","oldBot","historyPrompts","toggleSelected","availability","initializeSortable","isDropOnFavBotBar","onDragEnd","parentNode","dataset","Sortable","animation","onStart","onEnd","oldIndex","newIndex","execCommand","onBeforeMount","showMenu","clientX","clientY","disableAllBots","enableAllBots","removeAllBots","versions","checkVersion","latest","current","skip","removeListener","openReleasePage","FIND_TEXT_FIELD_ID","MATCH_CASE_VALUE","WRAP_AROUND_VALUE","findTextRef","findTextModel","isShowFindText","matchCaseToggle","isShowMatchCaseTooltip","wrapAroundToggle","isShowWrapAroundTooltip","isMatch","handleFindShortcut","closeFindTextField","showFindTextField","backward","getSelection","focusNode","lastElementChild","shortcutGuideContentRef","getShortcutLabelHTML","kbd","formatModifierText","string","charAt","toUpperCase","addWindowResizeListener","closeShortcutGuide","shortcut","shortcutElement","innerHTML","toggleShortcutGuide","openShortcutGuide","previewText","previewTextarea","chatRef","onChangeOpenProp","selectedBots","updatePreview","updateFavBots","newChatIndex","deselectAllResponses","onUpdatedSystemTheme","last","initialValue","findRef","footerBarRef","shortcutGuideRef","isShortcutGuideOpen","isSettingsOpen","chatDrawerRef","isChatActionOpen","openSettingsModal","openFind","getColumnImage","columnCount","deselectAll","callAction","_paq","ver","_createBlock","_component_CommonBotSettings","$data","watcher","$options","ticks","CommonBotSettings","methods","render","_component_login_setting","LoginSetting","_createElementBlock","_Fragment","_createVNode","itemProps","items","mounted","mapMutations","_component_v_list_item","_withCtx","_component_v_alert","outlined","_createTextVNode","_toDisplayString","_ctx","_component_v_list_item_title","_component_v_list_item_subtitle","_component_v_checkbox","modelValue","autoRefresh","_cache","$event","hideDetails","AUTO_REFRESH_CYCLE","mapState","auto","settingState","translate","rets","validateSliderInput","setting","getInputElement","valuefloat","parseFloat","inputMaxFloat","inputMinFloat","inputElement","example","_createElementVNode","$props","onClick","args","openLoginWindow","_hoisted_1","loginUrl","userAgent","loginScript","secret","webpackContext","req","webpackContextResolve","__webpack_require__","o","module","exports","webpackAsyncContext","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","webpackQueues","Symbol","webpackExports","webpackError","resolveQueue","fn","wrapDeps","deps","dep","obj","hasAwait","currentDeps","outerResolve","depQueues","promise","rej","getResult","fnQueue","has","deferred","O","chunkIds","priority","notFulfilled","Infinity","fulfilled","getter","__esModule","leafPrototypes","getProto","__proto__","ns","def","getOwnPropertyNames","definition","defineProperty","enumerable","f","chunkId","promises","u","miniCssF","g","globalThis","Function","prototype","inProgress","dataWebpackPrefix","l","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","nc","onScriptComplete","prev","clearTimeout","doneFns","toStringTag","nmd","paths","installedChunks","installedChunkData","loadingEnded","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}